<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Prematurely optimizing (Posty o paper)</title><link>https://stanczakdominik.github.io/</link><description></description><atom:link href="https://stanczakdominik.github.io/pl/categories/paper.xml" rel="self" type="application/rss+xml"></atom:link><language>pl</language><copyright>Contents © 2023 &lt;a href="https://matrix.to/#/@StanczakDominik:matrix.org"&gt;Dominik Stańczak-Marikin&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="/images/creativecommons.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Sun, 01 Jan 2023 15:17:09 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>On the recent "On the Boris solver in Particle-in-cell simulations" paper</title><link>https://stanczakdominik.github.io/pl/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper/</link><dc:creator>Dominik Stańczak-Marikin</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I recently came across &lt;a href="https://arxiv.org/abs/1809.04378"&gt;a pretty cool paper by Zenitani and Umeda named "On the Boris solver in particle-in-cell simulation"&lt;/a&gt;. There are many splendid descriptions of the Boris solver on the Internet, so while I would rather not duplicate them, here's a brief overview. In PIC simulations, the Boris solver (or pusher) is the usual algorithm of choice for moving and accelerating particles in given electric and magnetic fields.&lt;/p&gt;
&lt;p&gt;You may wonder, since the equations of motion are ordinary differential equations, what's wrong with using the usual Runge-Kutta 4 solver? As it turns out, that one has a pretty major flaw. It has great accuracy for short term calculations, but over time your particle's motion will lose energy. This is a deal breaker for periodic motion, and simulations of, for example, plasma waves need to conserve that energy to provide accurate results.&lt;/p&gt;
&lt;p&gt;Boris came up with his solver in the 1950's, and in a single sentence: the algorithm splits the acceleration via electric field into two parts and sticks a rotation about the magnetic field between them. This turns out to conserve energy and will probably come up again on this blog as I read more about symplexicity.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stanczakdominik.github.io/pl/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper/" class="btn btn-outline-secondary"&gt;Czytaj więcej…&lt;/a&gt; (zostało 13 minut czytania)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>https://stanczakdominik.github.io/pl/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper/</guid><pubDate>Wed, 27 Mar 2019 08:00:00 GMT</pubDate></item></channel></rss>