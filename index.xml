<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Dominik Stańczak-Marikin&#39;s blog</title>
<link>https://stanczakdominik.github.io/</link>
<atom:link href="https://stanczakdominik.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Puns, plasmas, Python, PDEs and probabilities</description>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Tue, 15 Nov 2022 05:00:00 GMT</lastBuildDate>
<item>
  <title>A pandemic story, or, what I learned working with nuclear fusion</title>
  <link>https://stanczakdominik.github.io/posts/ifpilm-postmortem.html</link>
  <description><![CDATA[ 





<p>As promised, here’s a post on the story of my time at <a href="https://www.ifpilm.pl/">IPPLM - the Institute of Plasma Physics and Laser Microfusion</a>, where I worked for the last almost-three-years. Past tense, because since September I’ve successfully found remote work as a Python software developer at a large pharmaceutical company. Speaking of… I don’t think I can say as much as I’d hoped about the projects we’re working on, but, suffice to say, I think they have some real potential for helping people with neurodegenerative diseases. So I’m still trying to tackle one of the Large Problems, just… another one, and more so from a backend/support angle.</p>
<p>While writing this, I realized that this story was also deeply intertwined with the story of the global COVID-19 pandemic, because that turned the whole situation on its head. I thought about separating the two, but decided instead to embrace it and tell it whole rather than in pieces. So, beware, this is going to get <em>long</em>. To alleviate that, I’ve broken it up more than usual and have placed the major takeaways in specifically formatted sections throughout.</p>
<p>With that disclaimer in place… onto the story!</p>
<!-- TEASER_END -->
<section id="how-i-got-there" class="level1">
<h1>How I got there</h1>
<p>During my undergraduate studies, somewhere maybe during my second year, I realized that</p>
<blockquote class="blockquote">
<dl>
<dt>hey, nuclear fusion is this cool project, with lots of potential for humanity, that also fits most of my scientific interests (fluids, electrodynamics, computational physics), and none of my friends seem to be taking care of that. I want it to get done; I’ll go do it.</dt>
<dd>
Dominik, 2014 or so
</dd>
</dl>
</blockquote>
<p>So I went ahead and started doing it, using a three-pronged approach:</p>
<ol type="1">
<li>Learn more about it.</li>
<li>Find people I can help with it online.</li>
<li>Find people I can help with it locally.</li>
</ol>
<p>I started grabbing books and courses about plasma and fusion, so that was avenue #1 covered.</p>
<p>To deal with #2, since I was a budding dev at the time, with <a href="http://www-personal.umich.edu/~mejn/computational-physics/">basically a single computational physics book of extra-curricular experience</a> in my toolbelt (which also exposed me to the idea of open source) and a metric ton of optimism, I tried searching on GitHub for openly developed plasma physics projects. That’s how I found <a href="https://github.com/PlasmaPy/PlasmaPy">PlasmaPy</a>, and I should really write <a href="./plasmapy-and-me">a post on my history with that project</a> sometime, as it’s been one of the most impactful decisions of my life.</p>
<p>I think there’s a lesson to be learned here:</p>
<blockquote class="blockquote">
<p>Takeaway number one: <strong>the Internet really shortens the distance between cool projects and useful volunteers looking to make a difference while gaining experience</strong>. This is a resource you could be using today. Go ahead!</p>
</blockquote>
<p>Still, at the time it was a small project, a suite of generic tools, and I felt the gaping hole of my plasma physics inexperience was a hindrance. I wanted to get some hands on experience with actual nuclear fusion.</p>
<section id="the-road-to-ipplm" class="level2">
<h2 class="anchored" data-anchor-id="the-road-to-ipplm">The road to IPPLM</h2>
<p>I still had #3, though - reaching out to people locally who were already involved with fusion - and that’s how I found IPPLM. I initially signed up there for an apprenticeship, which was spent mostly helping out a senior researcher with debugging and visualization for a simulation he was running for a plasma focus system. That was neat and I learned a lot during that (I also wrote some code that I still shudder to think about!), but I didn’t get as much hands on experience with actual nuclear fusion, the cool machines and experiments, the twisted geometries of tokamaks and stellarators.</p>
<p>During that time, I learned about the particle-in-cell method and figured I wanted to try doing something in that area. My supervisor put me in contact with professor Jabłoński, who’s absolutely one of the literal Best People on the planet and can also play a mean acoustic guitar. He guided me through the process of writing a particle in cell code in Python. <a href="../posts/post-mortem-for-my-engineering-thesis-code-pythonpic">I’ve told that story</a> before. Still… it was a little… far from actual nuclear fusion, the cool machines and experiments, etc etc, you know the drill.</p>
<p>So in late 2019, having spent nine months with natural language translation at Samsung, having decided I’d go back to doing science because <em>natural language translation seemed to be getting the help it needed and fusion less so</em>, I went back to IPPLM and started working there, first part-time, then full time. For the first time I’d have hands on experience with nuclear fusion, etc etc!</p>
<p>I spent maybe four months there before COVID-19 exploded in Asia and then globally.</p>
</section>
</section>
<section id="and-then-it-got-worse-but-also-better" class="level1">
<h1>And then it got worse, but also better</h1>
<p>It didn’t look like much initially, though I think I got initial glimpses faster than most - three of my friends at IPPLM went to Japan’s LHD at the time and went on medical leave straight after coming back. I still suspect I also caught a relatively mild form from them - which could be why I managed to go through the pandemic relatively unscathed. Of course, getting vaccinated ASAP later also helped!</p>
<p>Still, at the time, things were deteriorating pretty rapidly. Back then, nobody knew how this thing spread, how lethal it was and how you could tell you had it. There was a period where everyone was paranoid about disinfecting surfaces, such as door knobs, because we didn’t know it transmitted via the respiratory system. So we got sent to remote work basically overnight, and rumors of lockdowns kept popping out.</p>
<p>I was extremely lucky and already had an opportunity to move out with my then-fiancee-now-wife lined up, which we seized literally right before the lockdown hit. We thought, hey, whatever happens it’s going to be easier to handle it together. So we grabbed the dog and ran in early April.</p>
<p><img src="https://stanczakdominik.github.io/images/ifpilm-postmortem/20200508_172201.jpg" class="img-fluid" alt="Picture of a black Schipperke dog in front of a laptop screen, looking mildly confused"> &gt; My pair programming buddy. He sometimes barks at antipatterns. Well, he also sometimes barks at patterns, or maybe it’s all just the pigeons outside, but I believe he’s trying to help, all the same.</p>
<p>And the next few months, spent working remotely, I actually enjoyed quite a lot.</p>
<section id="working-from-home" class="level2">
<h2 class="anchored" data-anchor-id="working-from-home">Working from home</h2>
<p>Because it turns out that hey, as a massive introvert I actually do some of my best work on my own terms. Locked up tight in a tiny room with no interruptions but the work in front of me? Sign me up! Getting up before the sun and racing it to knock down one more bug before dawn? Hell yes! Writing code without trousers? Well let me tell you, I’ve written some of my worst code with trousers on and I do not think that a mere coincidence!<sup>1</sup></p>
<p>Professionally, this was a weird time because I was assisting with <a href="https://link.springer.com/article/10.1140/epjp/s13360-021-01630-6">one computational project</a> and investigating my first master’s thesis attempt. I was lucky to be able to do the thesis as part of work, but it didn’t happen to pan out. The first attempt - because we basically had a massive miscommunication and didn’t reach out to the folks in Germany early enough. We vastly underestimated the difficulty of developing a Bayesian model for Thomson scattering and didn’t have enough experience with the subject to de-scope it into a “minimum thesis-able product”.</p>
<p>The latter was a re-implementation of an existing code and, well, let’s just say it was sufficiently unexciting and un-useful that I had trouble motivating myself to finish it. I had more important stuff to do! Through that time, I also worked on parsing LHD spectroscopic data and identifying spectral lines in it; backward inference of PHA data using IPPLM’s forward model for impurities; and essentially a ray-tracing parallelized algorithm for the CO-Monitor diagnostic, which I hear is coming online soon. I really enjoyed all of these.</p>
<p>All that taught me two things:</p>
<blockquote class="blockquote">
<p>Takeaway number two: <strong>it’s awesome to get results, but the total impact of the results gotten by all the people you help</strong> - even by simply writing tools - <strong>can often be far greater</strong>.<sup>2</sup></p>
</blockquote>
<p>Of course, this may be a purely personal thing - some folks just prefer writing tools! In fact, while my official job title at IPPLM was “<em>Pracownik badawczo-techniczny</em>” (<em>Technical/research worker/specialist</em>, I guess?), there’s an increasingly popular term “Research Software Engineer”, or RSE, that describes the sort of job I did. In fact I’ll leave you with <a href="https://researchsoftware.org/">the RSE community’s website</a> and jump straight to the next lesson learned:</p>
<blockquote class="blockquote">
<p>Takeaway number three: Research Software Engineers, or <strong>people straddling the boundary of science and software development, are extremely important.</strong> Scientists alone, without practical experience in software dev, have an incredibly rough road to good results in this digital age. But you can’t just point software devs at a tokamak and expect to get working fusion out of it, either. If you are proficient in both areas, even enough to know who to ask in each, this may be a good path you can take.</p>
</blockquote>
<p>Of course I’m not saying it’s impossible for “pure” scientists, physicists in my case, to get results - but the code they write is often obscure, inefficient and non-generalizable, so it takes a lot of time to rewrite it from one experiment to another. I’m not saying my code’s all that much better, far from it - I’m just pointing out a problem in the system.</p>
<p>All in all, though, the first two waves of the pandemic were actually a good period for me and my then-fiancee. Of course, we dodged a bunch of bullets - heavy infections, losses of people close to us…</p>
</section>
</section>
<section id="and-then-it-got-better-but-also-worse" class="level1">
<h1>And then it got better, but also worse</h1>
<p>What got better was the pandemic. Well, relatively speaking - we had vaccines, but a lot of people <strong>were being unreasonable</strong> and refused to do their part for societal immunity. Still, by mid 2021 we “mostly” “had a handle on it”, or at least that’s what our government… I can’t tell if they honestly thought that. I personally smelled bullshit and was validated afterwards, because, basically…</p>
<p><img src="https://stanczakdominik.github.io/images/ifpilm-postmortem/Screenshot 2022-11-14 at 19-56-09 Poland COVID - Coronavirus Statistics - Worldometer.png" class="img-fluid" alt="Plot of new cases of COVID-19, with a through from about June to September 2021, with a red arrow pointing roughly to July 1"> &gt; We were here. “Coronavirus in retreat”, as per Polish PM Morawiecki, July 1st. Plot as per <a href="https://www.worldometers.info/coronavirus/country/poland/#graph-deaths-daily">Worldometers.info</a>.</p>
<p>On, if I remember correctly, July 1st, 2021, a Thursday, we all got an email from the Director from the Institute, saying that we’d be returning to stationary work… on July 2nd, a Friday.</p>
<p><img src="https://stanczakdominik.github.io/images/ifpilm-postmortem/cover6.jpg" class="img-fluid" alt="Screenshot from a Fallout game, with a pop-up message: “Everyone disliked that.”"> &gt; my section of the IPPLM, July 1st (colorized)</p>
<p>Now I’m not saying the Director was in a comfortable position here, IPPLM being a national institute at all and likely under pressure from the same dorks in government whose ineptitude got us waves #3, #4. Or maybe it’s that it’s hard to get remote work working for experimentalists, and while folks like me who mostly whack away at a keyboard and prep data analysis for the next W7X campaign were seeing crazy high efficiency, work on the experimental part stalled. I honestly don’t know.</p>
<p>Whatever the reason, in my little area, this has been widely seen as an utterly shit move. Due to decisions made above our heads and without giving us any say in, we were now forced to:</p>
<ul>
<li>risk catching COVID, which <em>of course</em> flared up again soon in full force after summer vacation ended for schoolchildren</li>
<li>spend valuable time commuting, which in my case came to 2h30m a day, which is… draining, to say the least</li>
<li>work less efficiently, because now you’re tired from the commute and you’re constantly paying</li>
<li>work in constant distraction, because there’s only so much blasting Rammstein on headphones can help you block out, and I don’t <em>think</em> I was being any less helpful to everyone who needed it</li>
<li>achieve less progress, so it becomes harder to motivate yourself when you’re not getting the results you’d like</li>
<li>spend the 5.5 hours left in the day (assuming 8 hours work, 8 hours sleep, 2h30m commute) trying to fit meal prep, regenerating just enough to survive the next day</li>
<li>write code while wearing trousers</li>
</ul>
<p>And, as I heard, I don’t know if it was just middle management playing bad cop, but this would be a permanent arrangement.</p>
<p>And, well, I lasted roughly a year before slowly coming to the conclusion that the strain all this was putting on my personal life, on my mental health, on my other projects (remember PlasmaPy?)… wasn’t worth it. So, since my contract was running out at the end of summer 2022, I decided, <em>welp, guess I’m not finishing this master’s thesis that’s not going to help anyone just so I can work in conditions I don’t enjoy</em>, and didn’t seek an extension.</p>
<p>So here’s my last lesson learned at IPPLM!</p>
<blockquote class="blockquote">
<p>Takeaway number four: <strong>work at home</strong>, for work that can be done remotely and for people who can successfully adapt to it <strong>is such a gamechanger that workplaces must adapt to it themselves</strong>. Workplaces that don’t miss out on a whole lot of potential.</p>
</blockquote>
<p>I’m not saying it’s an easy transition. Organizing remote work is a whole ’nother game. Still, I’m pretty sure that, despite whatever you might hear from, for example, Bezos-owned media, it’s the way to go <em>for people like me</em>.</p>
</section>
<section id="the-end-of-this-chapter-and-how-its-getting-better-again" class="level1">
<h1>The end of this chapter, and how it’s getting better again</h1>
<p>Here’s a disclaimer: I absolutely don’t want to dunk on IPPLM! I It’s a good place, with a lot of great people that I have a lot of respect and gratitude for, and some damn cool projects. Still, the pandemic made me realize that I personally am not a good fit for it. I wish I could have been, and with more flexibility from the management side I might have been. I would still recommend the workplace, but be realistic about how much you’d like to endure for work and try to find an environment that’s a good fit for you. Sample. Try things.</p>
<p>And that’s it for this story. COVID is now likely a permanent fixture in our lives, unfortunately. But even if it were extinguished, I don’t think I’m likely to come back to office work. I’m extremely happy with how things are going now, with my fully remote setup. I’m now:</p>
<ul>
<li>healthier, both mentally and physically</li>
<li>happily doing stuff like spending more time with my wonderful wow-I-still-can’t-believe-she’s-my wife, writing, both code and blog posts, as you can see here!</li>
<li>working efficiently, in conditions I find optimal (5 AM start? Sure!)</li>
<li>learning a lot about how industry does Python</li>
<li>actually managing to have a social life</li>
<li>helping nuclear fusion the way I like, writing tools that actually help a lot of people, on my own terms</li>
<li>actually moving my life along!</li>
</ul>
<p>So… yeah! If you got here, thanks for sticking through it, I hope you found it interesting and/or helpful. I certainly found writing it helpful in processing the last two crazy years. If you didn’t, while I can’t exactly return you the time you’ve spent reading, I can get you a dog photo that might be more your thing. Get in touch if you’d like to take me up on that offer :)</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I can neither confirm nor deny trousers were worn while writing this post. Honestly, it’s been in draft for a while so I can’t actually remember. I’d estimate like 40% trouserless, which may be why it’s gotten so lengthy.↩︎</p></li>
<li id="fn2"><p>Disclaimer: whether the scientific research system we have now is set up to promote and reward writing tools is arguable. In fact I’ll argue for an emphatic <strong>no</strong> and just point you towards <a href="https://www.arfon.org/announcing-the-journal-of-open-source-software#-the-big-problem-with-software-papers--our-current-credit-system">the announcement of JOSS</a> for more on that.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>fusion</category>
  <category>ipplm</category>
  <category>work</category>
  <category>status</category>
  <category>life</category>
  <category>featured</category>
  <guid>https://stanczakdominik.github.io/posts/ifpilm-postmortem.html</guid>
  <pubDate>Tue, 15 Nov 2022 05:00:00 GMT</pubDate>
  <media:content url="https://stanczakdominik.github.io/images/ifpilm-postmortem/20200508_172201.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>The importance of good notation</title>
  <link>https://stanczakdominik.github.io/posts/the-importance-of-good-notation.html</link>
  <description><![CDATA[ 





<p>I’ve just spent the last four weeks hunting for <a href="../posts/i-atent-dead">a bug in my thesis code that I’ve mentioned last time</a>. Since then, I’ve given up on the paper I’m reimplementing more times than I can count. Well… Can you guess how that went?</p>
<!-- TEASER_END -->
<p>It turns out I missed the fact that <img src="https://latex.codecogs.com/png.latex?S_%7BpT%7D%5E%7Bai%7D"> is very much not the same as <img src="https://latex.codecogs.com/png.latex?S_%7BpT%5Ctheta%7D%5E%7Bai%7D">, where the difference is conceptually a rescaling <img src="https://latex.codecogs.com/png.latex?S_%7BpT%5Ctheta%7D%5E%7Bai%7D%20%5Csim%20%5Cmu%20S_%7BpT%7D%5E%7Bai%7D">, <img src="https://latex.codecogs.com/png.latex?%5Cmu"> being a viscosity-like object.</p>
<p>So, that happened.</p>
<hr>
<p>I suspect I’m sort of writing this as a reminder to future!myself that hey, small details are crucial and deserve attention, unless you want to waste your own time.</p>
<p>At the same time, here’s my plea to you - when writing, especially when writing scientific literature (which, like your code, is going to be read many more times than the one time you’re writing it), pay attention to the notation you’re using for your concepts. Think ahead of how it might contribute to the reader’s understanding of what you’re trying to communicate, or hinder it.</p>
<p>And maybe, just maybe, make use of the wide arsenal of typography you’ve got available and don’t reuse symbols for concepts that are different even just by their dimensionality!</p>
<hr>
<p>At the same time, I’m really happy to be past this. This bug was really gnawing at me.</p>
<p>Also, I think this is a great testament to the power of physical unit packages in scientific computing. I wasted 4 weeks on this, sure - but without <a href="https://docs.astropy.org/en/stable/units/"><code>astropy.units</code></a> notifying me that “your units are off, mate” on every test run, I have no idea how many weeks I would spend on it later on in the development process, with my results in disagreement with previous results!</p>



 ]]></description>
  <category>status</category>
  <category>masters thesis</category>
  <category>mathjax</category>
  <category>science</category>
  <guid>https://stanczakdominik.github.io/posts/the-importance-of-good-notation.html</guid>
  <pubDate>Sat, 01 May 2021 12:35:00 GMT</pubDate>
</item>
<item>
  <title>PlasmaPy v0.6.0 release!</title>
  <link>https://stanczakdominik.github.io/posts/plasmapy-v060-release.html</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p><em>I’ll take the opportunity to cross-post this one from the PlasmaPy website; I’m pretty happy about how this went.</em></p>
</blockquote>
<section id="plasmapy-0.6.0" class="level1">
<h1>PlasmaPy 0.6.0</h1>
<p>We’re really happy to announce that we’ve just released <a href="https://docs.plasmapy.org/en/stable/whatsnew/0.6.0.html">PlasmaPy version 0.6.0</a>!</p>
<!-- TEASER_END -->
<p>We’d like to thank the wonderful people who have contributed to this release:</p>
<ul>
<li>Anthony Vo</li>
<li>Dhawal Modi *</li>
<li>Dominik Stańczak</li>
<li>Drozdov David *</li>
<li>Erik Everson</li>
<li>Kevin Montes *</li>
<li>Nick Murphy</li>
<li>Peter Heuer</li>
<li>Ramiz Qudsi</li>
<li>Tiger Du</li>
</ul>
<p>Where a * indicates their first contribution to PlasmaPy.</p>
<p>Note also that <strong>this release drops Python 3.6 support</strong>; we now require Python 3.7, following NumPy’s <a href="https://numpy.org/neps/nep-0029-deprecation_policy.html">NEP 29</a>.</p>
</section>
<section id="the-cool-new-features" class="level1">
<h1>The cool new features</h1>
<p>Note: these are my (Dominik’s) personal highlights. There’s more, but these make the prettiest plots right now.</p>
<section id="two-fluid-dispersion-relations" class="level2">
<h2 class="anchored" data-anchor-id="two-fluid-dispersion-relations">Two-fluid dispersion relations</h2>
<center>
<a href="https://docs.plasmapy.org/en/stable/notebooks/dispersion/two_fluid_dispersion.html"><img src="https://docs.plasmapy.org/en/stable/_images/notebooks_dispersion_two_fluid_dispersion_18_1.png" class="img-fluid" alt="Dispersion relations for two fluid systems"></a>
</center>
<p>In <a href="https://github.com/plasmapy/plasmapy/pull/932">PR #932</a> Ramiz Qudsi implemented P. M. Bellan’s 2012 full two-fluid dispersion relation for any electron-ion system. Take a look at <a href="https://docs.plasmapy.org/en/stable/notebooks/dispersion/two_fluid_dispersion.html">the notebook introducing that</a>.</p>
</section>
<section id="proton-radiography" class="level2">
<h2 class="anchored" data-anchor-id="proton-radiography">Proton radiography</h2>
<center>
<a href="https://docs.plasmapy.org/en/stable/notebooks/diagnostics/proton_radiography_particle_tracing.html"><img src="https://docs.plasmapy.org/en/stable/_images/notebooks_diagnostics_proton_radiography_particle_tracing_14_0.png" class="img-fluid" alt="Proton radiograph"></a>
</center>
<p>Peter Heuer designed and implemented a framework for synthetic proton radiography. This is a multi-PR tour de force that simulates particles moving through EM fields and hitting a detector plane, generating histograms such as the above. I’d point you to the notebook on that, but <a href="https://docs.plasmapy.org/en/stable/examples.html#analyses-diagnostics">there’s three right now</a>.</p>
</section>
<section id="analysis-diagnostic-framework-langmuir-probes" class="level2">
<h2 class="anchored" data-anchor-id="analysis-diagnostic-framework-langmuir-probes">Analysis &amp; Diagnostic framework; Langmuir probes</h2>
<center>
<a href="https://docs.plasmapy.org/en/stable/notebooks/analysis/swept_langmuir/find_floating_potential.html"><img src="https://docs.plasmapy.org/en/stable/_images/notebooks_analysis_swept_langmuir_find_floating_potential_21_0.png" class="img-fluid" alt="Langmuir probe sweep"></a>
</center>
<p>Erik Everson is spearheading work on our <a href="https://docs.plasmapy.org/en/stable/ad/index.html">analysis &amp; diagnostic framework</a>. As the first example, we’ve got a new and improved set of <a href="https://docs.plasmapy.org/en/stable/ad/index.html">tools for swept Langmuir analysis</a>.</p>
</section>
</section>
<section id="whats-next" class="level1">
<h1>What’s next?</h1>
<p>For this year, we’re planning to have a roughly 3-month cadence for releases. Thus, the next release is anticipated around mid June.</p>
<p>It should contain a refactored particle tracker, support for neoclassical transport coefficient calculations for axisymmetric devices along with our first forays into tools for fusion.</p>
<p>One final note: we’re discussing transitioning to some form of <a href="https://calver.org/">Calendar Versioning</a>. If you have thoughts on that, we’d be happy to hear them! Come join the discussion on <a href="https://app.element.io/#/room/#plasmapy:openastronomy.org">our Matrix chatroom</a>.</p>


</section>

 ]]></description>
  <category>plasmapy</category>
  <category>release</category>
  <category>python</category>
  <category>projects</category>
  <guid>https://stanczakdominik.github.io/posts/plasmapy-v060-release.html</guid>
  <pubDate>Sat, 20 Mar 2021 11:00:00 GMT</pubDate>
</item>
<item>
  <title>Fusion 1/4: Nuclear power as of 2021</title>
  <link>https://stanczakdominik.github.io/posts/fusion1.html</link>
  <description><![CDATA[ 





<p><em>Hi! In the new year, <a href="./2021">as promised</a>, you’ll see more actual science discussions on this page. I have - I think, for the first time since I started writing here - a plan for the next four posts. The first will discuss nuclear power and its place in the world. The second will tell you a little about its most interesting future alternative - fusion power. Next up, we’ll discuss its history a little and where I predict it’ll head in the near future; and in the fourth, I’ll try to discuss a little about what we’re actually doing with it in terms of research work. I can’t wait to get to the fourth part, so that should be at least motivating. Let’s get to it!</em></p>
<!-- TEASER_END -->
<blockquote class="blockquote">
<p><em>Let’s start with a disclaimer: I am not a nuclear physicist, the closest I’ve come to nuclear power is a trip to <a href="https://en.wikipedia.org/wiki/Maria_reactor">Świerk</a> and a few too many hours in Factorio. If this post disagrees with nuclear physicists, you should most likely trust them over me. This is not meant to be reference material in any way; it’s a knowledge dump of where I’m coming from, so you can understand where I’ll go to in later posts.</em></p>
</blockquote>
<blockquote class="blockquote">
<p><em>Also, I rarely write these, as I think this kind of message should be implicit in just about everything you read on the Internet; but I feel it’s worth the reminder here, and I thought saying this “out loud” might stop me from procrastinating on writing this.</em> <strong>And now, without further ado…</strong></p>
</blockquote>
<p>I shall not bore you with the details of nuclear fission’s use for power generations. Many have written on that before, and I don’t think I can add much to that. Basically, though, and in great simplification - take the following diagram of, essentially, how much energy, per atomic nucleus, you need to break up an atom:</p>
<a href="https://commons.wikimedia.org/wiki/File:Binding_energy_curve_-_common_isotopes.svg">
<center>
<img src="https://stanczakdominik.github.io/images/Binding_energy_curve_-_common_isotopes.svg" width="671" height="441">
</center>
</a><p><a href="https://commons.wikimedia.org/wiki/File:Binding_energy_curve_-_common_isotopes.svg"></a></p>
<p>notice that the most stable nuclei are at the “<em>Fe</em> peak” <em>(which, coincidentally, you could also call the “iron hill”, and which, also coincidentally, is where most matter in the universe <a href="https://en.wikipedia.org/wiki/Iron_star">might reach steady state</a>, and in other words, where <a href="https://www.youtube.com/watch?v=3aB6CPyO0Ww">time would seem to stand still</a>, which sure puts a new, er, spin on that song)</em>. Once you’ve noticed that, you realize that if you can find some way to split heavy elements into light elements, you would probably release that energy (going by the plot alone, about 1MeV from U<sup>238</sup> to stable Fe<sup>56</sup>) and could harness it. Hit some particularly heavy nuclei with enough neutrons…</p>
<p>and you’ve got nuclear power, in a nutshell! Simple, right? Simple to the point of throwing out the actual science. I completely neglected a lot of factors: the fact that you want the neutrons to hit the nuclei slowly enough not to cause a runaway chain reaction chief among them. But this is meant to be a simple view, and that neglect is a tragedy we’ll have to live with. Anyway! We all know the pros and cons for nuclear, but, to recap:</p>
<ul>
<li>No carbon emissions</li>
<li>High energy density of fuel means logistics become easier</li>
<li>Stable base load capability</li>
<li>Risk of proliferation of fissile materials</li>
<li>Nuclear waste needs to be stored</li>
</ul>
<p>That last point is, actually, usually blown out of proportion. Something I’ve learned about recently is that all nuclear waste, since the origin of nuclear power until today, stored comfortably, safely and up to proper regulations, would fill a football field. Does that sound like a lot? Does it, still, when I tell you that our Polish Bełchatów coal power plant’s coal ash storage area takes up <a href="http://repozytorium.p.lodz.pl/bitstream/handle/11652/2033/Blas_cienie_polskiej_Wieczorek_Eliksir_2_2017.pdf">416 ha</a> (which translates to ~590 football fields), and that was already 60% filled up by the 2000?</p>
<p>Yeah, didn’t think so.</p>
<section id="base-load" class="level1">
<h1>Base load</h1>
<p>But I’d like to focus on the base load, here, and say a little more about that. Base load power is power that must be generated constantly, that is needed by e.g.&nbsp;refrigerators, hospitals, water processing plants, monitoring - processes that cannot really be turned on and off.</p>
<p>Base load is sort of the antithesis of most renewable energy sources. The most popular are wind and solar, and the conditions attached to them are in the name. They’re variable power sources, and while I think they’re absolutely great, their variability makes them ill-suited to fill out our entire power demand.</p>
<p>Let’s take a look at an example. Let’s go to <a href="https://www.electricitymap.org/map">electricitymap.org</a> and check a few European countries. Note that we’ll be, technically, looking at power consumption, rather than production; but it doesn’t make that much of a difference. As I’m writing this, it’s 17:20 CET, a cold and cloudy Saturday. How’s my home country of Poland doing?</p>
<section id="poland" class="level2">
<h2 class="anchored" data-anchor-id="poland">Poland</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.electricitymap.org/zone/PL?wind=true&amp;solar=true"><img src="https://stanczakdominik.github.io/images/power_poland.png" class="img-fluid figure-img" alt="Poland, electricitymap.org"></a></p>
<figcaption>Poland, electricitymap.org</figcaption>
</figure>
</div>
<p>Well… badly, as usual. We’re taking some baby steps in transitioning away from coal as our main power source, and our government hasn’t really been all that helpful with promoting the growth of solar or inland wind power. There is talk of adding 6 GW of nuclear power in the next decade(s), but not much to brag about right now.</p>
<p>This is, basically, the darkest scenario of “fossil fuels for base load, little renewable energy”.</p>
</section>
<section id="germany" class="level2">
<h2 class="anchored" data-anchor-id="germany">Germany</h2>
<p>Let’s go to our western neighbor, Germany. Germany, under the leadership of CDU with major Green influences, has been a big proponent of renewable energy. That’s certainly a fine idea, but let’s see how it’s going for them:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.electricitymap.org/zone/DE?wind=true&amp;solar=true"><img src="https://stanczakdominik.github.io/images/power_germany.png" class="img-fluid figure-img" alt="Germany, electricitymap.org"></a></p>
<figcaption>Germany, electricitymap.org</figcaption>
</figure>
</div>
<p>Well, they sure have a lot of capacity (maximum power they could, given optimal conditions, generate) for solar and wind! It’s a truly awesome (as in, I’m awed right now) set up - they have more wind power capacity than the entire power capacity of Poland, from what I can see.</p>
<p>But as you can see, it’s a cloudy winter day and it’s not all that windy. So, all that capacity gives them squat Thus, coal and gas usage both spike up, which is less than ideal when you’re trying to limit the amount of CO2 that goes up into the atmosphere.</p>
<p>Note that Germany did have a sizable amount of nuclear power generated, but, under the same CDU/Green leadership, closed them down. I don’t want to go into debate on the arguments made by both sides, whether those were made in good faith or not, whether they took all relevant factors into account or not; but, purely from a “let’s stop climate change” perspective, doesn’t look like it’s been a good call for them.</p>
<p>In contrast, let’s go further west:</p>
</section>
<section id="france" class="level2">
<h2 class="anchored" data-anchor-id="france">France</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.electricitymap.org/zone/FR?wind=true&amp;solar=true"><img src="https://stanczakdominik.github.io/images/power_france.png" class="img-fluid figure-img" alt="France, electricitymap.org"></a></p>
<figcaption>France, electricitymap.org</figcaption>
</figure>
</div>
<p>And this is the best example I know of what happens, in two similar countries, if one decides to close their nuclear and one does not. Notice how they still burn some natural gas. “Natural gas” is a nice name for what is still a fossil fuel, still emits CO2, less so than coal, but still - but even with that, you emit a way less CO2 than Germany.</p>
</section>
</section>
<section id="takeaways-from-a-winter-day" class="level1">
<h1>Takeaways from a winter day</h1>
<ul>
<li>Renewables are awesome, but they don’t work under all conditions. You need that base load power, for sub-optimal conditions which pure renewables don’t cover; and the less carbon intensive that base load you can make, the better for you and for the world.</li>
<li>There is a clear need for non-CO2-emitting power sources that can produce base load power.</li>
<li>People are closing nuclear power plants and it seems that they’re wrong to do so. If it were up to me, I would declare an instant moratorium on any action that harms the continued operation and each and every nuclear power plant - if they’re already up, keep them up and don’t touch them. Each of them is a vital weapon against climate change.</li>
</ul>
<hr>
<p>There is, of course, renewables + storage; but I don’t want to make this post too long, so, in short: the technology really isn’t there just yet, nor does it scale enough. Eventually, given breakthroughs in material science - could be. But once again, it’s not going to be the alpha and omega of power generation; just an element of the energy mix.</p>
<hr>
<p>So, this is where we are in 2021.</p>
<p>Next week, hopefully, I’ll be able to tell you - with fewer simplifications! - about an alternative scheme that accomplishes the same goals as current nuclear. Have a great time until then!</p>


</section>

 ]]></description>
  <category>fusion</category>
  <category>science</category>
  <guid>https://stanczakdominik.github.io/posts/fusion1.html</guid>
  <pubDate>Sat, 13 Feb 2021 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Now with comments through utteranc.es!</title>
  <link>https://stanczakdominik.github.io/posts/utterances.html</link>
  <description><![CDATA[ 





<p>As promised, I’ve switched the site’s comment system from Disqus to <a href="https://utteranc.es/">utteranc.es</a>. It ended up being <a href="https://github.com/StanczakDominik/stanczakdominik.github.io/commit/858c7530d6bd83f1a193ef9225bee5776f2c591c">pretty simple to do in Nikola</a>. If I’m correct about how this is supposed to work, comments on the site will now appear as <a href="https://github.com/StanczakDominik/stanczakdominik.github.io/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">issues on the site’s repo</a>. Of course, I would love to test out how this works :)</p>
<!-- TEASER_END -->
<p>The reason I switched away from Disqus was their pretty horrid privacy record, for which a quick websearch will provide ample sources. Utterances is cleverly built around GitHub issues, and while it does require a GitHub account, I think it really is the lesser evil in this case.</p>
<p>Admittedly, I do still feel a little queasy about this. While GitHub does provide repositories for various, <a href="https://github.com/amerlo94/awesome-plasma-physics-courses">definitely</a> <a href="https://github.com/dask/community">programming</a> <a href="https://github.com/PlasmaPy/plasmapy-project">lite</a> repositories, I can’t help but think that this takes advantage of a resource given freely in ways that are not entirely as-intended-by-providers.</p>
<p>Take Travis CI, for example. It was a great service, the first project I’m aware of that worked with a “completely free online testing, for every commit, for every open source project out there” model. And, well, they got bought out a few years ago; last year was the year when the new owners (as I suspect) tried to plug the money sink and introduce crippling limits, and a lot of open source projects had to migrate away. I don’t know of a single one that still uses Travis, and I fully expect the paid version to go out of business soon.</p>
<p><a href="https://en.wikipedia.org/wiki/Tragedy_of_the_commons">Tragedy of the commons, a little?</a></p>
<p>But you can’t solve all problems everywhere at the same time, or at least I haven’t yet found a way to. So, for now, utteranc.es it is!</p>



 ]]></description>
  <category>blogging</category>
  <category>status</category>
  <guid>https://stanczakdominik.github.io/posts/utterances.html</guid>
  <pubDate>Mon, 08 Feb 2021 18:47:16 GMT</pubDate>
</item>
<item>
  <title>SymPy for physics homework in 2020</title>
  <link>https://stanczakdominik.github.io/posts/sympy-for-physics-homework-in-2020.html</link>
  <description><![CDATA[ 





<p>I’ve been doing my university physics homework in SymPy and Jupyter for a little bit, and I thought I could share a little about the workflow I’ve developed for it. It might come useful for you. <!--TEASER_END--></p>
<p>Let’s go through with an abridged example of plasma physics homework with that toolset, and then go over the tricks used as they come up. I’ll put text that I’d put in the homework solution in quotes.</p>
<blockquote class="blockquote">
<h2 id="for-electrostatic-electron-waves-in-unmagnetized-plasma-calculate-the-correction-to-the-frequency-due-to-the-ion-motion." class="anchored">For electrostatic electron waves in unmagnetized plasma, calculate the correction to the frequency due to the ion motion.</h2>
</blockquote>
<p>We’ll set up our SymPy namespace first. We’ll dump it all into the main namespace; not the best habit for libraries, but here we want to write less code, so it’ll do.</p>
<div id="cell-5" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>config InteractiveShell.ast_node_interactivity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'last_expr_or_assign'</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sympy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb1-3">init_printing()</span></code></pre></div>
</div>
<p>I also added a little IPython magic in there. This is a little behavior I picked up from working in Julia, where <strong>the value last expression or assignment in a cell is displayed</strong>.</p>
<blockquote class="blockquote">
<p>We take the linearized forms in Fourier space of the following fluid equations: 1. equation of motion, for ions, with temperature 2. equation of motion, for electrons, with temperature 3. mass conservation for ions 4. mass conservation for electrons 5. Poisson’s equation</p>
</blockquote>
<p>Now, let’s define our variables and the set of equations we care about. Note how we’ll liberally use unicode characters to shorten our code. In Jupyter, you can enter <img src="https://latex.codecogs.com/png.latex?%5Comega"> in code cells by simply writing the LaTeX for it and hitting TAB afterwards: <code>\omega&lt;TAB&gt;</code></p>
<div id="cell-8" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">m_i, m_e, γ, T, n_0, e, ϵ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> symbols(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'m_i m_e gamma T n_0 e varepsilon_0'</span>, positive<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-2">ω, k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> symbols(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'omega k'</span>, positive<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-3">v_i, v_e, n_i, n_e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> symbols(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'v_i v_e n_i n_e'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to be understood as fourier modes</span></span>
<span id="cb2-4"></span>
<span id="cb2-5">equations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb2-6">    Eq(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>I <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ω <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> m_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> v_i, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> E <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> I <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> γ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_i),</span>
<span id="cb2-7">    Eq(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>I <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ω <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> m_e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> v_e, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> E <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> I <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> γ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_e),</span>
<span id="cb2-8">    Eq(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>I <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ω <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> I <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> v_i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb2-9">    Eq(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>I <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ω <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> I <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> v_e, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb2-10">    Eq(I <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> E , e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (n_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n_e) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ϵ)</span>
<span id="cb2-11">]</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="2">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft%5B%20-%20i%20m_%7Bi%7D%20n_%7B0%7D%20%5Comega%20v_%7Bi%7D%20=%20-%20i%20T%20%5Cgamma%20k%20n_%7Bi%7D%20+%20e%20e%20n_%7B0%7D,%20%5C%20%20-%20i%20m_%7Be%7D%20n_%7B0%7D%20%5Comega%20v_%7Be%7D%20=%20-%20i%20T%20%5Cgamma%20k%20n_%7Be%7D%20-%20e%20e%20n_%7B0%7D,%20%5C%20%20i%20k%20n_%7B0%7D%20v_%7Bi%7D%20-%20i%20n_%7Bi%7D%20%5Comega%20=%200,%20%5C%20%20i%20k%20n_%7B0%7D%20v_%7Be%7D%20-%20i%20n_%7Be%7D%20%5Comega%20=%200,%20%5C%20%20e%20i%20k%20=%20%5Cfrac%7Be%20%5Cleft(-%20n_%7Be%7D%20+%20n_%7Bi%7D%5Cright)%7D%7B%5Cvarepsilon_%7B0%7D%7D%5Cright%5D"></p>
</div>
</div>
<p>See? That’s output right there. Neat! Anyway, &gt; We first solve equations 3 and 4 for the velocities:</p>
<div id="cell-10" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">v_i_e_solutions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solve(equations[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>], [v_i, v_e])</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="3">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft%5C%7B%20v_%7Be%7D%20:%20%5Cfrac%7Bn_%7Be%7D%20%5Comega%7D%7Bk%20n_%7B0%7D%7D,%20%5C%20%20v_%7Bi%7D%20:%20%5Cfrac%7Bn_%7Bi%7D%20%5Comega%7D%7Bk%20n_%7B0%7D%7D%5Cright%5C%7D"></p>
</div>
</div>
<blockquote class="blockquote">
<p>We then insert the velocities into the equations of motion:</p>
</blockquote>
<div id="cell-12" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">motion_equations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [eq.subs(v_i_e_solutions) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> eq <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> equations[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="4">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft%5B%20-%20%5Cfrac%7Bi%20m_%7Bi%7D%20n_%7Bi%7D%20%5Comega%5E%7B2%7D%7D%7Bk%7D%20=%20-%20i%20T%20%5Cgamma%20k%20n_%7Bi%7D%20+%20e%20e%20n_%7B0%7D,%20%5C%20%20-%20%5Cfrac%7Bi%20m_%7Be%7D%20n_%7Be%7D%20%5Comega%5E%7B2%7D%7D%7Bk%7D%20=%20-%20i%20T%20%5Cgamma%20k%20n_%7Be%7D%20-%20e%20e%20n_%7B0%7D%5Cright%5D"></p>
</div>
</div>
<blockquote class="blockquote">
<p>From this, it is simple to grab the number densities:</p>
</blockquote>
<div id="cell-14" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">n_i_e_solutions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solve(motion_equations, (n_i, n_e))</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="5">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft%5C%7B%20n_%7Be%7D%20:%20%5Cfrac%7Be%20i%20e%20k%20n_%7B0%7D%7D%7BT%20%5Cgamma%20k%5E%7B2%7D%20-%20m_%7Be%7D%20%5Comega%5E%7B2%7D%7D,%20%5C%20%20n_%7Bi%7D%20:%20-%20%5Cfrac%7Be%20i%20e%20k%20n_%7B0%7D%7D%7BT%20%5Cgamma%20k%5E%7B2%7D%20-%20m_%7Bi%7D%20%5Comega%5E%7B2%7D%7D%5Cright%5C%7D"></p>
</div>
</div>
<blockquote class="blockquote">
<p>And now we can insert those back into the final, Poisson’s equation:</p>
</blockquote>
<div id="cell-16" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">poisson_eq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> equations[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].subs(n_i_e_solutions).simplify()</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="6">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20e%20i%20k%20=%20%5Cfrac%7Be%20i%20e%5E%7B2%7D%20k%20n_%7B0%7D%20%5Cleft(-%202%20T%20%5Cgamma%20k%5E%7B2%7D%20+%20m_%7Be%7D%20%5Comega%5E%7B2%7D%20+%20m_%7Bi%7D%20%5Comega%5E%7B2%7D%5Cright)%7D%7B%5Cvarepsilon_%7B0%7D%20%5Cleft(T%20%5Cgamma%20k%5E%7B2%7D%20-%20m_%7Be%7D%20%5Comega%5E%7B2%7D%5Cright)%20%5Cleft(T%20%5Cgamma%20k%5E%7B2%7D%20-%20m_%7Bi%7D%20%5Comega%5E%7B2%7D%5Cright)%7D"></p>
</div>
</div>
<blockquote class="blockquote">
<p>This we can solve for the <img src="https://latex.codecogs.com/png.latex?%5Comega%5E2">:</p>
</blockquote>
<div id="cell-18" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">ω<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">_solutions</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solve(poisson_eq, ω<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="7">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft%5B%20%5Cfrac%7B%5Cleft(m_%7Be%7D%20+%20m_%7Bi%7D%5Cright)%20%5Cleft(T%20%5Cgamma%20k%5E%7B2%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B2%7D%20n_%7B0%7D%5Cright)%20-%20%5Csqrt%7BT%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20m_%7Be%7D%5E%7B2%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20-%202%20T%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20m_%7Be%7D%20m_%7Bi%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20+%20T%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20m_%7Bi%7D%5E%7B2%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20+%202%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20m_%7Be%7D%5E%7B2%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20-%204%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20m_%7Be%7D%20m_%7Bi%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20+%202%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20m_%7Bi%7D%5E%7B2%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B4%7D%20m_%7Be%7D%5E%7B2%7D%20n_%7B0%7D%5E%7B2%7D%20+%202%20e%5E%7B4%7D%20m_%7Be%7D%20m_%7Bi%7D%20n_%7B0%7D%5E%7B2%7D%20+%20e%5E%7B4%7D%20m_%7Bi%7D%5E%7B2%7D%20n_%7B0%7D%5E%7B2%7D%7D%7D%7B2%20m_%7Be%7D%20m_%7Bi%7D%20%5Cvarepsilon_%7B0%7D%7D,%20%5C%20%20%5Cfrac%7B%5Cleft(m_%7Be%7D%20+%20m_%7Bi%7D%5Cright)%20%5Cleft(T%20%5Cgamma%20k%5E%7B2%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B2%7D%20n_%7B0%7D%5Cright)%20+%20%5Csqrt%7BT%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20m_%7Be%7D%5E%7B2%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20-%202%20T%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20m_%7Be%7D%20m_%7Bi%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20+%20T%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20m_%7Bi%7D%5E%7B2%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20+%202%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20m_%7Be%7D%5E%7B2%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20-%204%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20m_%7Be%7D%20m_%7Bi%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20+%202%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20m_%7Bi%7D%5E%7B2%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B4%7D%20m_%7Be%7D%5E%7B2%7D%20n_%7B0%7D%5E%7B2%7D%20+%202%20e%5E%7B4%7D%20m_%7Be%7D%20m_%7Bi%7D%20n_%7B0%7D%5E%7B2%7D%20+%20e%5E%7B4%7D%20m_%7Bi%7D%5E%7B2%7D%20n_%7B0%7D%5E%7B2%7D%7D%7D%7B2%20m_%7Be%7D%20m_%7Bi%7D%20%5Cvarepsilon_%7B0%7D%7D%5Cright%5D"></p>
</div>
</div>
<blockquote class="blockquote">
<p>Which is the complete analytical answer. as a sanity check, we can take the limit <img src="https://latex.codecogs.com/png.latex?m_i%20%5Cto%20%5Cinfty">. Starting with the first one:</p>
</blockquote>
<div id="cell-20" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">limit1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> limit(ω<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">_solutions</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], m_i, oo)</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="8">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cfrac%7BT%20%5Cgamma%20k%5E%7B2%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B2%7D%20n_%7B0%7D%20-%20%5Csqrt%7BT%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20+%202%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B4%7D%20n_%7B0%7D%5E%7B2%7D%7D%7D%7B2%20m_%7Be%7D%20%5Cvarepsilon_%7B0%7D%7D"></p>
</div>
</div>
<blockquote class="blockquote">
<p>Which, if we help SymPy a little (it didn’t quite notice a pattern in the square root):</p>
</blockquote>
<p>This is, unfortunately, a problem that SymPy tends to run into - this kind of issue needs some tinkering sometimes:</p>
<div id="cell-22" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">numerator, denominator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> limit1.as_numer_denom()</span>
<span id="cb9-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(arg.factor() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> arg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numerator.args) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> denominator</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="9">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%200"></p>
</div>
</div>
<blockquote class="blockquote">
<p>Which is not particularly interesting, corresponding to no oscillation at all. Applying the same procedure to the other solution:</p>
</blockquote>
<div id="cell-24" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">limit2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> limit(ω<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">_solutions</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], m_i, oo).simplify()</span>
<span id="cb10-2">numerator, denominator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> limit2.as_numer_denom()</span>
<span id="cb10-3">limit2_corrected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(arg.factor() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> arg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numerator.args) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> denominator).simplify()</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="10">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cfrac%7BT%20%5Cgamma%20k%5E%7B2%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B2%7D%20n_%7B0%7D%7D%7Bm_%7Be%7D%20%5Cvarepsilon_%7B0%7D%7D"></p>
</div>
</div>
<blockquote class="blockquote">
<p>Which is the existing result for the electrostatic electron oscillation for warm electrons. Good! We’re sane. Now, we have an analytic expression, but if we want to grab just the first order correction, we can apply some trickery.</p>
<p>Let’s define</p>
<p><img src="https://latex.codecogs.com/png.latex?M%20=%20m_e%20/%20m_i"></p>
<p>This is a small quantity, and we an expand our <img src="https://latex.codecogs.com/png.latex?%5Comega%5E2"> solutions in a power series in that.</p>
<p>We’ll then replace <img src="https://latex.codecogs.com/png.latex?m_i"> in the second <img src="https://latex.codecogs.com/png.latex?%5Comega%5E2"> solution using <img src="https://latex.codecogs.com/png.latex?M">:</p>
</blockquote>
<div id="cell-26" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">Mratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> symbols(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>, positive<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-2">series_expansion <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (ω<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">_solutions</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]).subs(m_i, m_e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> Mratio).expand().series(Mratio, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</div>
<p>Note how I’m using <code>;</code> at the end to stop this from displaying.</p>
<blockquote class="blockquote">
<p>We once again apply some SymPy magic to make the series expansion bearable for the eyes:</p>
</blockquote>
<p>This took a bunch of StackOverflow searching, which, if you’re on a deadline, may admittedly not be the most productive thing to do:</p>
<div id="cell-28" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">simplified_series_expansion <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collect(series_expansion.removeO(), Mratio, simplify)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="12">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cfrac%7BM%20%5Cleft(T%5E%7B3%7D%20%5Cgamma%5E%7B3%7D%20k%5E%7B6%7D%20%5Cvarepsilon_%7B0%7D%5E%7B3%7D%20+%203%20T%5E%7B2%7D%20e%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20-%20T%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20%5Csqrt%7BT%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20+%202%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B4%7D%20n_%7B0%7D%5E%7B2%7D%7D%20+%203%20T%20e%5E%7B4%7D%20%5Cgamma%20k%5E%7B2%7D%20n_%7B0%7D%5E%7B2%7D%20%5Cvarepsilon_%7B0%7D%20-%202%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20%5Csqrt%7BT%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20+%202%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B4%7D%20n_%7B0%7D%5E%7B2%7D%7D%20+%20e%5E%7B6%7D%20n_%7B0%7D%5E%7B3%7D%20+%20e%5E%7B4%7D%20n_%7B0%7D%5E%7B2%7D%20%5Csqrt%7BT%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20+%202%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B4%7D%20n_%7B0%7D%5E%7B2%7D%7D%5Cright)%7D%7B2%20m_%7Be%7D%20%5Cvarepsilon_%7B0%7D%20%5Cleft(T%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20+%202%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B4%7D%20n_%7B0%7D%5E%7B2%7D%5Cright)%7D%20+%20%5Cfrac%7BT%20%5Cgamma%20k%5E%7B2%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B2%7D%20n_%7B0%7D%20+%20%5Csqrt%7BT%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20+%202%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B4%7D%20n_%7B0%7D%5E%7B2%7D%7D%7D%7B2%20m_%7Be%7D%20%5Cvarepsilon_%7B0%7D%7D"></p>
</div>
</div>
<blockquote class="blockquote">
<p>Applying some further simplification for the square root:</p>
</blockquote>
<div id="cell-30" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">squareroot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numer(simplified_series_expansion.args[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).args[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb13-2">very_simplified_series_expansion <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> simplified_series_expansion.subs(squareroot, squareroot.factor()).simplify()</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="13">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cfrac%7BM%20e%5E%7B4%7D%20n_%7B0%7D%5E%7B2%7D%20+%20T%5E%7B2%7D%20%5Cgamma%5E%7B2%7D%20k%5E%7B4%7D%20%5Cvarepsilon_%7B0%7D%5E%7B2%7D%20+%202%20T%20e%5E%7B2%7D%20%5Cgamma%20k%5E%7B2%7D%20n_%7B0%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B4%7D%20n_%7B0%7D%5E%7B2%7D%7D%7Bm_%7Be%7D%20%5Cvarepsilon_%7B0%7D%20%5Cleft(T%20%5Cgamma%20k%5E%7B2%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B2%7D%20n_%7B0%7D%5Cright)%7D"></p>
</div>
</div>
<blockquote class="blockquote">
<p>And we arrive at the known and expected first order (in <img src="https://latex.codecogs.com/png.latex?m_e/m_i">) correction, substituting our definition of <img src="https://latex.codecogs.com/png.latex?M"> back in here:</p>
</blockquote>
<div id="cell-32" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">ion_correction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (very_simplified_series_expansion <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> limit2_corrected).simplify().subs(Mratio, m_e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> m_i)</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="14">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cfrac%7Be%5E%7B4%7D%20n_%7B0%7D%5E%7B2%7D%7D%7Bm_%7Bi%7D%20%5Cvarepsilon_%7B0%7D%20%5Cleft(T%20%5Cgamma%20k%5E%7B2%7D%20%5Cvarepsilon_%7B0%7D%20+%20e%5E%7B2%7D%20n_%7B0%7D%5Cright)%7D"></p>
</div>
</div>
<p>And that’s that!</p>
<section id="results-and-thoughts" class="level1">
<h1>Results and thoughts</h1>
<p>For some pros and cons:</p>
<section id="positives" class="level2">
<h2 class="anchored" data-anchor-id="positives">Positives</h2>
<ul>
<li>You get to skip out on algebraic errors.</li>
<li>You get beautiful LaTeX display, at no effort, for each step. This helps a ton if your handwriting is dreadful, like mine is.</li>
<li>You can resort to first-order corrections etc if you need a check, but you actually get full analytical solutions a lot of the time.</li>
</ul>
</section>
<section id="neutrals" class="level2">
<h2 class="anchored" data-anchor-id="neutrals">Neutrals</h2>
<ul>
<li>You really need to watch your assumptions when you define your variables, as SymPy is pretty conservative with its simplifications. This is, of course, both a blessing and a curse.</li>
<li>The learning curve is a bit steep, but you can accomplish plenty with just a little knowledge; for the rest, you can google. I’ve been putting off picking up its <code>physics</code> subpackage for way too long now.</li>
</ul>
</section>
<section id="negatives" class="level2">
<h2 class="anchored" data-anchor-id="negatives">Negatives</h2>
<ul>
<li>There are kinks, as you undoubtedly saw; it can be tough to tell SymPy “look at that square root! Look at it!”. It’ll miss some seemingly obvious stuff, and it can take a fair bit of googling to get it to work properly.</li>
<li>Runtimes can get steep-ish; it’s not really suited for live work. I’ll <code>%timeit</code> the two lines that caused a little trouble here. Admittedly, symbolic math is <em>hard</em>, so I’m not too surprised. <del>Turns out I could only timeit the first line in reasonable time…</del></li>
</ul>
<div id="cell-35" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit series_expansion <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (ω<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">_solutions</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]).subs(m_i, m_e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> Mratio).expand().series(Mratio, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>24.3 s ± 351 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)</code></pre>
</div>
</div>
<p>Still, all in all, I think it has plenty of potential. If it’s not there <em>yet</em>, it’s getting there! I’m likely to keep using it and if I come up with any further handy tools, I’ll get back here.</p>


</section>
</section>

 ]]></description>
  <category>python</category>
  <category>sympy</category>
  <guid>https://stanczakdominik.github.io/posts/sympy-for-physics-homework-in-2020.html</guid>
  <pubDate>Tue, 29 Sep 2020 14:46:21 GMT</pubDate>
</item>
<item>
  <title>Julia - the magic of composability</title>
  <link>https://stanczakdominik.github.io/posts/julia-composability.html</link>
  <description><![CDATA[ 





<p>I’ve been getting into the Julia ecosystem a little (turns out there’s a lot of tutorials you get to watch when doing the dishes), and I’ve been meaning to get some hands on experience. Today, I’d like to reproduce <a href="https://github.com/giordano">Mosè Giordano</a>’s <a href="https://gist.github.com/giordano/e82a3959d8f64301129d64d004e10b4e">gist example</a>, which I first saw in this <a href="https://youtu.be/kc9HwsxE1OY?t=227">JuliaCon talk by Stefan Karpinski</a>. I think it really illustrates <a href="https://www.youtube.com/watch?v=fGgLrzalESY">Alan Edelman’s points on Julia’s composability from the talk I linked last time</a>.</p>
<p>What we’ll do today is combine a simple example of an ODE solution with an uncertainty package, and see how easy or difficult it becomes using Julia.</p>
<!--TEASER_END-->
<section id="differential-equations" class="level1">
<h1>Differential equations</h1>
<p>Let’s try to use Julia’s <a href="https://github.com/SciML/DifferentialEquations.jl">DifferentialEquations.jl</a> package to solve the simple system:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bdu%7D%7Bdt%7D%20=%20%5Calpha%20u"></p>
<div id="cell-4" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">using DifferentialEquations</span>
<span id="cb1-2"></span>
<span id="cb1-3">α <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span></span>
<span id="cb1-4">u0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initial value</span></span>
<span id="cb1-5">tspan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># range of values</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>(0.0, 1.0)</code></pre>
</div>
</div>
<p>Simple enough! Let’s define the derivative function. Note that it seems like the derivative’s signature as accepted by <code>DifferentialEquations.ODEProblem</code> has changed since Mosè Giordano wrote his gist.</p>
<div id="cell-6" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">f(u, p, t) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> α <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> u</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>f (generic function with 1 method)</code></pre>
</div>
</div>
<div id="cell-7" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ODEProblem(f, u0, tspan)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div class="ansi-escaped-output">
<pre><span class="ansi-cyan-fg">ODEProblem</span> with uType <span class="ansi-cyan-fg">Float64</span> and tType <span class="ansi-cyan-fg">Float64</span>. In-place: <span class="ansi-cyan-fg">false</span>
timespan: (0.0, 1.0)
u0: 0.5</pre>
</div>
</div>
</div>
<p>These explicit reprs are pretty darn cool, to be honest. Let’s get to solving it, as seen in the example:</p>
<div id="cell-9" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">sol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solve(prob, Tsit5(), reltol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-8</span>, abstol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-8</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>retcode: Success
Interpolation: specialized 4th order "free" interpolation
t: 17-element Array{Float64,1}:
 0.0
 0.012407826196308189
 0.04250125658161484
 0.08178046092620397
 0.12887379439591745
 0.18409790041494495
 0.24627449404376492
 0.3147928829168652
 0.38859624030646006
 0.46686165530000767
 0.5487159959104151
 0.6334345501790717
 0.7203628343994752
 0.8089578125953629
 0.8987653123338385
 0.9894159840028138
 1.0
u: 17-element Array{Float64,1}:
 0.5
 0.5063053789114713
 0.5219304636285521
 0.5430526974619144
 0.5695067474049924
 0.6021743238204087
 0.6412025113764279
 0.687147458356146
 0.7403257567387032
 0.8012222468290549
 0.8702767411264873
 0.9480213225441934
 1.0350184806191094
 1.131902913018661
 1.239373221095387
 1.3582036259485553
 1.3728005076225749</code></pre>
</div>
</div>
<p>And now we can use Plots.jl to plot the solution. I adapted <a href="https://diffeq.sciml.ai/stable/tutorials/ode_example/#Example-1-:-Solving-Scalar-Equations-1">the docs for DifferentialEquations</a> to do that.</p>
<div id="cell-11" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">using Plots</span>
<span id="cb8-2">plot(sol,linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Solution to the linear ODE with a thick line"</span>,</span>
<span id="cb8-3">     xaxis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time (t)"</span>,yaxis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"u(t)"</span>,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Numerical solution"</span>)</span>
<span id="cb8-4">plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>(sol.t, t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>exp(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">t</span>),lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>:dash,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True Solution!"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/julia-composability_files/figure-html/cell-6-output-1.svg" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>And that’s all neat. On to the main course!</p>
</section>
<section id="once-more-with-uncertainty" class="level1">
<h1>Once more, with uncertainty!</h1>
<p>For convenience (and practice!), we’ll wrap our previous computation in a function:</p>
<div id="cell-14" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">function compute(α, u0, tspan)</span>
<span id="cb9-2">    f(u, p, t) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> α <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> u</span>
<span id="cb9-3">    noisy_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ODEProblem(f, u0, tspan)</span>
<span id="cb9-4">    noisy_sol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solve(noisy_prob, Tsit5(), reltol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-8</span>, abstol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-8</span>)</span>
<span id="cb9-5">    noisy_sol             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Julia returns the last statement in a function</span></span>
<span id="cb9-6">end</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>compute (generic function with 1 method)</code></pre>
</div>
</div>
<p>And now we’ll add Measurements.jl and input a slightly noisy value for the <img src="https://latex.codecogs.com/png.latex?%5Calpha"> constant, using <img src="https://latex.codecogs.com/png.latex?%5Cpm"> (typed in Jupyter as <code>\pm&lt;TAB&gt;</code>):</p>
<div id="cell-16" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">using Measurements</span>
<span id="cb11-2">noisy_sol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>compute(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span> ± <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb11-3">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> ± <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this had to be the same type, or we'd get an exception:</span></span>
<span id="cb11-4">    (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span>
<span id="cb11-5">    )</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>retcode: Success
Interpolation: specialized 4th order "free" interpolation
t: 17-element Array{Float64,1}:
 0.0
 0.012407826196308189
 0.042501278333560696
 0.0817804940926822
 0.12887384498704435
 0.18409796286152927
 0.24627457447456758
 0.31479297816557983
 0.3885963515160237
 0.4668617724420117
 0.5487161305960653
 0.6334346972152323
 0.7203630000154827
 0.808957991167541
 0.8987655040395068
 0.9894161889652783
 1.0
u: 17-element Array{Measurement{Float64},1}:
     0.5 ± 0.0
 0.50631 ± 0.00063
  0.5219 ± 0.0022
  0.5431 ± 0.0044
  0.5695 ± 0.0073
   0.602 ± 0.011
   0.641 ± 0.016
   0.687 ± 0.022
    0.74 ± 0.029
   0.801 ± 0.037
    0.87 ± 0.048
   0.948 ± 0.06
   1.035 ± 0.075
   1.132 ± 0.092
    1.24 ± 0.11
    1.36 ± 0.13
    1.37 ± 0.14</code></pre>
</div>
</div>
<p>And you can already see the uncertainties propagate onwards! The further in time, the more effect that slight discrepancy in the value of <img src="https://latex.codecogs.com/png.latex?%5Calpha"> (or <img src="https://latex.codecogs.com/png.latex?R_0">, these days…) will have. That makes sense!</p>
<p>The amazing thing is that I can stick <code>noisy_sol</code> right into the <code>plot</code> command of Plots.jl:</p>
<div id="cell-18" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">plot(noisy_sol, lab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Numerical with uncertainty"</span>,</span>
<span id="cb13-2">     linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, xaxis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time (t)"</span>,yaxis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"u(t)"</span>,</span>
<span id="cb13-3">)</span>
<span id="cb13-4">plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>(sol.t, t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>exp(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">t</span>),lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>:dash,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True Solution!"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/julia-composability_files/figure-html/cell-9-output-1.svg" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Just like that! And that’s just a little magical to me.</p>
<p>We can also put an uncertainty on the initial condition - we rarely know those with perfect accuracy.</p>
<div id="cell-20" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">noisy_sol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>compute(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span>,   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># interestingly the constant can be a "precise" float</span></span>
<span id="cb14-2">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> ± <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb14-3">    (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span>
<span id="cb14-4">    )</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>retcode: Success
Interpolation: specialized 4th order "free" interpolation
t: 17-element Array{Float64,1}:
 0.0
 0.012407826196308189
 0.042501278333560696
 0.0817804940926822
 0.12887384498704435
 0.18409796286152927
 0.24627457447456758
 0.31479297816557983
 0.3885963515160237
 0.4668617724420117
 0.5487161305960653
 0.6334346972152323
 0.7203630000154827
 0.808957991167541
 0.8987655040395068
 0.9894161889652783
 1.0
u: 17-element Array{Measurement{Float64},1}:
  0.5 ± 0.3
 0.51 ± 0.3
 0.52 ± 0.31
 0.54 ± 0.33
 0.57 ± 0.34
  0.6 ± 0.36
 0.64 ± 0.38
 0.69 ± 0.41
 0.74 ± 0.44
  0.8 ± 0.48
 0.87 ± 0.52
 0.95 ± 0.57
 1.04 ± 0.62
 1.13 ± 0.68
 1.24 ± 0.74
 1.36 ± 0.81
 1.37 ± 0.82</code></pre>
</div>
</div>
<div id="cell-21" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">plot(noisy_sol, lab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Numerical with uncertainty"</span>,</span>
<span id="cb16-2">     linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, xaxis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time (t)"</span>,yaxis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"u(t)"</span>,</span>
<span id="cb16-3">)</span>
<span id="cb16-4">plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>(sol.t, t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>exp(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">t</span>),lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>:dash,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True Solution!"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/julia-composability_files/figure-html/cell-11-output-1.svg" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>We can also combine the uncertainties to our heart’s content! I’m choosing to run this with a very large uncertainty on the constant, to illustrate the point.</p>
<div id="cell-23" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">noisy_sol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>compute(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span> ± <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>,</span>
<span id="cb17-2">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> ± <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb17-3">    (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span>
<span id="cb17-4">    )</span>
<span id="cb17-5">plot(noisy_sol, lab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Numerical with uncertainty"</span>,</span>
<span id="cb17-6">     linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, xaxis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time (t)"</span>,yaxis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"u(t)"</span>,</span>
<span id="cb17-7">)</span>
<span id="cb17-8">plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>(sol.t, t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>exp(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">t</span>),lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>:dash,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"True Solution!"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/julia-composability_files/figure-html/cell-12-output-1.svg" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="composability" class="level1">
<h1>Composability</h1>
<p>And here’s the point I wanted to make.</p>
<p>Nobody wrote uncertainty support for DifferentialEquations.jl. <a href="https://github.com/SciML/DifferentialEquations.jl/search?q=measurements&amp;unscoped_q=measurements">Here’s a search for references to measurements in that package - nil.</a> It just popped out of Julia’s composable type system.</p>
<p>The plotting part is admittedly custom and can be found <a href="https://github.com/JuliaPhysics/Measurements.jl/search?q=plots&amp;unscoped_q=plots">here</a>. But still - imagine, in Python, combining <code>scipy.integrate.odeint</code>, <code>uncertainties</code> and maybe even <code>astropy.units</code> or <code>pint</code>, or what have you.</p>
<p>Here it “just works”. Magic!</p>
<p>Actually, speaking of unit packages…</p>
<div id="cell-25" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">using Unitful</span>
<span id="cb18-2"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">u</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>1 s^3</code></pre>
</div>
</div>
<p>And if we try…</p>
<div id="cell-27" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">u</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m"</span> ± <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">u</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>0.5 ± 0.4 m</code></pre>
</div>
</div>
<p>Well, maybe…</p>
<div id="cell-29" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">u</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1/s"</span> ± <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">u</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1/s"</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>1.01 ± 0.1 s^-1</code></pre>
</div>
</div>
<p>Maybe, maybe, maybe…</p>
<div id="cell-31" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">noisy_sol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>compute(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">u</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1/s"</span>,</span>
<span id="cb24-2">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">u</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m"</span> ± <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">u</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I had to cheat a little here</span></span>
<span id="cb24-3">    (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">u</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">u</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span>),</span>
<span id="cb24-4">    )</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>MethodError: MethodError: no method matching Float64(::Measurement{Float64})
Closest candidates are:
  Float64(::Real, !Matched::RoundingMode) where T&lt;:AbstractFloat at rounding.jl:200
  Float64(::T) where T&lt;:Number at boot.jl:715
  Float64(!Matched::Int8) at float.jl:60
  ...
MethodError: no method matching Float64(::Measurement{Float64})
Closest candidates are:
  Float64(::Real, !Matched::RoundingMode) where T&lt;:AbstractFloat at rounding.jl:200
  Float64(::T) where T&lt;:Number at boot.jl:715
  Float64(!Matched::Int8) at float.jl:60
  ...

Stacktrace:
 [1] convert(::Type{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}, ::Quantity{Measurement{Float64},𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}) at /home/dominik/.julia/packages/Unitful/MOEUx/src/conversion.jl:110
 [2] ode_determine_initdt(::Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}}, ::Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}, ::Float64, ::Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}, ::Float64, ::Float64, ::typeof(DiffEqBase.ODE_DEFAULT_NORM), ::ODEProblem{Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},Tuple{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},false,DiffEqBase.NullParameters,ODEFunction{false,var"#f#9"{Quantity{Float64,𝐓^-1,Unitful.FreeUnits{(s^-1,),𝐓^-1,nothing}}},LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::OrdinaryDiffEq.ODEIntegrator{Tsit5,false,Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},Nothing,Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},DiffEqBase.NullParameters,Float64,Float64,Float64,Array{Quantity{Measurement{Float64},𝐋 𝐓^-1,Unitful.FreeUnits{(m, s^-1),𝐋 𝐓^-1,nothing}},1},ODESolution{Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},1,Array{Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},1},Nothing,Nothing,Array{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},1},Array{Array{Quantity{Measurement{Float64},𝐋 𝐓^-1,Unitful.FreeUnits{(m, s^-1),𝐋 𝐓^-1,nothing}},1},1},ODEProblem{Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},Tuple{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},false,DiffEqBase.NullParameters,ODEFunction{false,var"#f#9"{Quantity{Float64,𝐓^-1,Unitful.FreeUnits{(s^-1,),𝐓^-1,nothing}}},LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},Tsit5,OrdinaryDiffEq.InterpolationData{ODEFunction{false,var"#f#9"{Quantity{Float64,𝐓^-1,Unitful.FreeUnits{(s^-1,),𝐓^-1,nothing}}},LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},1},Array{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},1},Array{Array{Quantity{Measurement{Float64},𝐋 𝐓^-1,Unitful.FreeUnits{(m, s^-1),𝐋 𝐓^-1,nothing}},1},1},OrdinaryDiffEq.Tsit5ConstantCache{Float64,Float64}},DiffEqBase.DEStats},ODEFunction{false,var"#f#9"{Quantity{Float64,𝐓^-1,Unitful.FreeUnits{(s^-1,),𝐓^-1,nothing}}},LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},OrdinaryDiffEq.Tsit5ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},typeof(DiffEqBase.ODE_DEFAULT_NORM),typeof(LinearAlgebra.opnorm),CallbackSet{Tuple{},Tuple{}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},DataStructures.LessThan},DataStructures.BinaryHeap{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},DataStructures.LessThan},Nothing,Nothing,Int64,Tuple{},Tuple{},Tuple{}},Quantity{Measurement{Float64},𝐋 𝐓^-1,Unitful.FreeUnits{(m, s^-1),𝐋 𝐓^-1,nothing}},Measurement{Float64},Nothing,OrdinaryDiffEq.DefaultInit}) at /home/dominik/.julia/packages/OrdinaryDiffEq/NsugH/src/initdt.jl:148
 [3] auto_dt_reset! at /home/dominik/.julia/packages/OrdinaryDiffEq/NsugH/src/integrators/integrator_interface.jl:297 [inlined]
 [4] handle_dt!(::OrdinaryDiffEq.ODEIntegrator{Tsit5,false,Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},Nothing,Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},DiffEqBase.NullParameters,Float64,Float64,Float64,Array{Quantity{Measurement{Float64},𝐋 𝐓^-1,Unitful.FreeUnits{(m, s^-1),𝐋 𝐓^-1,nothing}},1},ODESolution{Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},1,Array{Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},1},Nothing,Nothing,Array{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},1},Array{Array{Quantity{Measurement{Float64},𝐋 𝐓^-1,Unitful.FreeUnits{(m, s^-1),𝐋 𝐓^-1,nothing}},1},1},ODEProblem{Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},Tuple{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},false,DiffEqBase.NullParameters,ODEFunction{false,var"#f#9"{Quantity{Float64,𝐓^-1,Unitful.FreeUnits{(s^-1,),𝐓^-1,nothing}}},LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},Tsit5,OrdinaryDiffEq.InterpolationData{ODEFunction{false,var"#f#9"{Quantity{Float64,𝐓^-1,Unitful.FreeUnits{(s^-1,),𝐓^-1,nothing}}},LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},1},Array{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},1},Array{Array{Quantity{Measurement{Float64},𝐋 𝐓^-1,Unitful.FreeUnits{(m, s^-1),𝐋 𝐓^-1,nothing}},1},1},OrdinaryDiffEq.Tsit5ConstantCache{Float64,Float64}},DiffEqBase.DEStats},ODEFunction{false,var"#f#9"{Quantity{Float64,𝐓^-1,Unitful.FreeUnits{(s^-1,),𝐓^-1,nothing}}},LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},OrdinaryDiffEq.Tsit5ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},typeof(DiffEqBase.ODE_DEFAULT_NORM),typeof(LinearAlgebra.opnorm),CallbackSet{Tuple{},Tuple{}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},DataStructures.LessThan},DataStructures.BinaryHeap{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},DataStructures.LessThan},Nothing,Nothing,Int64,Tuple{},Tuple{},Tuple{}},Quantity{Measurement{Float64},𝐋 𝐓^-1,Unitful.FreeUnits{(m, s^-1),𝐋 𝐓^-1,nothing}},Measurement{Float64},Nothing,OrdinaryDiffEq.DefaultInit}) at /home/dominik/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:450
 [5] __init(::ODEProblem{Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},Tuple{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},false,DiffEqBase.NullParameters,ODEFunction{false,var"#f#9"{Quantity{Float64,𝐓^-1,Unitful.FreeUnits{(s^-1,),𝐓^-1,nothing}}},LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Tsit5, ::Tuple{}, ::Tuple{}, ::Tuple{}, ::Type{Val{true}}; saveat::Tuple{}, tstops::Tuple{}, d_discontinuities::Tuple{}, save_idxs::Nothing, save_everystep::Bool, save_on::Bool, save_start::Bool, save_end::Bool, callback::Nothing, dense::Bool, calck::Bool, dt::Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}, dtmin::Nothing, dtmax::Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}, force_dtmin::Bool, adaptive::Bool, gamma::Rational{Int64}, abstol::Float64, reltol::Float64, qmin::Rational{Int64}, qmax::Int64, qsteady_min::Int64, qsteady_max::Int64, qoldinit::Rational{Int64}, fullnormalize::Bool, failfactor::Int64, beta1::Nothing, beta2::Nothing, maxiters::Int64, internalnorm::typeof(DiffEqBase.ODE_DEFAULT_NORM), internalopnorm::typeof(LinearAlgebra.opnorm), isoutofdomain::typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), unstable_check::typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), verbose::Bool, timeseries_errors::Bool, dense_errors::Bool, advance_to_tstop::Bool, stop_at_next_tstop::Bool, initialize_save::Bool, progress::Bool, progress_steps::Int64, progress_name::String, progress_message::typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), userdata::Nothing, allow_extrapolation::Bool, initialize_integrator::Bool, alias_u0::Bool, alias_du0::Bool, initializealg::OrdinaryDiffEq.DefaultInit, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/dominik/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:413
 [6] #__solve#360 at /home/dominik/.julia/packages/OrdinaryDiffEq/NsugH/src/solve.jl:4 [inlined]
 [7] solve_call(::ODEProblem{Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}},Tuple{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}},false,DiffEqBase.NullParameters,ODEFunction{false,var"#f#9"{Quantity{Float64,𝐓^-1,Unitful.FreeUnits{(s^-1,),𝐓^-1,nothing}}},LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Tsit5; merge_callbacks::Bool, kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:reltol, :abstol),Tuple{Float64,Float64}}}) at /home/dominik/.julia/packages/DiffEqBase/uSSHl/src/solve.jl:92
 [8] #solve_up#459 at /home/dominik/.julia/packages/DiffEqBase/uSSHl/src/solve.jl:114 [inlined]
 [9] #solve#458 at /home/dominik/.julia/packages/DiffEqBase/uSSHl/src/solve.jl:102 [inlined]
 [10] compute(::Quantity{Float64,𝐓^-1,Unitful.FreeUnits{(s^-1,),𝐓^-1,nothing}}, ::Quantity{Measurement{Float64},𝐋,Unitful.FreeUnits{(m,),𝐋,nothing}}, ::Tuple{Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}},Quantity{Float64,𝐓,Unitful.FreeUnits{(s,),𝐓,nothing}}}) at ./In[6]:4
 [11] top-level scope at In[15]:1</code></pre>
</div>
</div>
<p>Aaaaand I guess that’s our weekly reminder that Julia’s multiple dispatch system is <strong>not</strong> magic, and doesn’t solve every problem for us!</p>
<p>If you do have an idea about how to actually run that, please say so in the comments! In the meantime, I hope you enjoyed this short read! :)</p>


</section>

 ]]></description>
  <category>julia</category>
  <guid>https://stanczakdominik.github.io/posts/julia-composability.html</guid>
  <pubDate>Tue, 21 Jul 2020 17:07:00 GMT</pubDate>
</item>
<item>
  <title>Parsing SC2 replays for later analysis</title>
  <link>https://stanczakdominik.github.io/posts/sc2-parse-replays.html</link>
  <description><![CDATA[ 





<p>I’ve realized I owe you an explanation on how to parse your own SC2 replays for the <a href="../bayes-sc2-part-2">series of posts on Bayesian SC2 replay data analysis</a>. Let’s go through it here!</p>
<!-- TEASER_END -->
<p>We’ll use <a href="https://github.com/ZephyrBlu/zephyrus-sc2-parser/">ZephyrBlu’s zephyrus-sc2-parser</a> library, which you can download via <code>pip install zephyrus-sc2-parser</code>.</p>
<section id="parsing-the-replays" class="level2">
<h2 class="anchored" data-anchor-id="parsing-the-replays">Parsing the replays</h2>
<p>This process currently dumps a boatload of warnings and exceptions, so I’m choosing to wrap the former in a <code>try</code>-<code>except</code> and simply ignore those, and ignore the thrown warnings with <code>warnings.simplefilter("ignore")</code>. Feel free to disable them on your end; but don’t say I didn’t warn you!</p>
<p>Note that this process takes a while, and we’ll have to do some wrangling later on, so it makes more sense to parse all the replays first and have them all in memory for later. It might fail for larger datasets.</p>
<div id="cell-3" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pathlib</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm.auto <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tqdm</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zephyrus_sc2_parser</span>
<span id="cb1-6"></span>
<span id="cb1-7">REPLAY_DIRECTORY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/dominik/Links/SC2Reps"</span></span>
<span id="cb1-8">PLAYER_NAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Perfi"</span></span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> warnings.catch_warnings():</span>
<span id="cb1-11">    warnings.simplefilter(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ignore"</span>)</span>
<span id="cb1-12">    replays <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(pathlib.Path(REPLAY_DIRECTORY).glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*.SC2Replay"</span>))</span>
<span id="cb1-13">    parsed_replays <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb1-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> replay_file <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tqdm.tqdm(replays):</span>
<span id="cb1-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb1-16">            replay <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zephyrus_sc2_parser.parse_replay(replay_file, local<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb1-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb1-18">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Failed for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>replay_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-19">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb1-20">        parsed_replays[replay_file] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> replay</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"9847ef15b3b8474485e7b160ddcb92f5","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Failed for /home/dominik/Links/SC2Reps/Ephemeron LE (27).SC2Replay: 'NoneType' object has no attribute 'race'
Failed for /home/dominik/Links/SC2Reps/Triton LE (4).SC2Replay: local variable 'game_length' referenced before assignment
Failed for /home/dominik/Links/SC2Reps/Winter's Gate LE (4).SC2Replay: local variable 'game_length' referenced before assignment
Failed for /home/dominik/Links/SC2Reps/Zen LE (4).SC2Replay: 'NoneType' object has no attribute 'race'
Failed for /home/dominik/Links/SC2Reps/World of Sleepers LE (48).SC2Replay: local variable 'game_length' referenced before assignment
Failed for /home/dominik/Links/SC2Reps/Whitewater Line LE.SC2Replay: 'NoneType' object has no attribute 'race'
Failed for /home/dominik/Links/SC2Reps/Bone Temple LE.SC2Replay: 'NoneType' object has no attribute 'race'
Failed for /home/dominik/Links/SC2Reps/Acropolis LE (19).SC2Replay: 'NoneType' object has no attribute 'race'
Failed for /home/dominik/Links/SC2Reps/World of Sleepers LE (15).SC2Replay: 'NoneType' object has no attribute 'race'
Failed for /home/dominik/Links/SC2Reps/Ephemeron LE (25).SC2Replay: 'NoneType' object has no attribute 'race'</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>--- Logging error ---
Traceback (most recent call last):
  File "/home/dominik/.local/lib/python3.8/site-packages/zephyrus_sc2_parser/parser.py", line 154, in parse_replay
    players = create_players(player_info, events)
  File "/home/dominik/.local/lib/python3.8/site-packages/zephyrus_sc2_parser/utils.py", line 68, in create_players
    new_player.race = non_english_races[new_player.race.encode('utf-8')]
KeyError: b''

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/progs/miniconda3/envs/py38/lib/python3.8/logging/__init__.py", line 1081, in emit
    msg = self.format(record)
  File "/progs/miniconda3/envs/py38/lib/python3.8/logging/__init__.py", line 925, in format
    return fmt.format(record)
  File "/progs/miniconda3/envs/py38/lib/python3.8/logging/__init__.py", line 664, in format
    record.message = record.getMessage()
  File "/progs/miniconda3/envs/py38/lib/python3.8/logging/__init__.py", line 369, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/progs/miniconda3/envs/py38/lib/python3.8/runpy.py", line 193, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/progs/miniconda3/envs/py38/lib/python3.8/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/ipykernel_launcher.py", line 16, in &lt;module&gt;
    app.launch_new_instance()
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/traitlets/config/application.py", line 664, in launch_instance
    app.start()
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/ipykernel/kernelapp.py", line 583, in start
    self.io_loop.start()
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/tornado/platform/asyncio.py", line 149, in start
    self.asyncio_loop.run_forever()
  File "/progs/miniconda3/envs/py38/lib/python3.8/asyncio/base_events.py", line 570, in run_forever
    self._run_once()
  File "/progs/miniconda3/envs/py38/lib/python3.8/asyncio/base_events.py", line 1859, in _run_once
    handle._run()
  File "/progs/miniconda3/envs/py38/lib/python3.8/asyncio/events.py", line 81, in _run
    self._context.run(self._callback, *self._args)
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/tornado/ioloop.py", line 690, in &lt;lambda&gt;
    lambda f: self._run_callback(functools.partial(callback, future))
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/tornado/ioloop.py", line 743, in _run_callback
    ret = callback()
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/tornado/gen.py", line 787, in inner
    self.run()
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/tornado/gen.py", line 748, in run
    yielded = self.gen.send(value)
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/ipykernel/kernelbase.py", line 361, in process_one
    yield gen.maybe_future(dispatch(*args))
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/tornado/gen.py", line 209, in wrapper
    yielded = next(result)
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/ipykernel/kernelbase.py", line 268, in dispatch_shell
    yield gen.maybe_future(handler(stream, idents, msg))
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/tornado/gen.py", line 209, in wrapper
    yielded = next(result)
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/ipykernel/kernelbase.py", line 539, in execute_request
    self.do_execute(
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/tornado/gen.py", line 209, in wrapper
    yielded = next(result)
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/ipykernel/ipkernel.py", line 300, in do_execute
    res = shell.run_cell(code, store_history=store_history, silent=silent)
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/ipykernel/zmqshell.py", line 536, in run_cell
    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 2857, in run_cell
    result = self._run_cell(
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 2886, in _run_cell
    return runner(coro)
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/IPython/core/async_helpers.py", line 68, in _pseudo_sync_runner
    coro.send(None)
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 3062, in run_cell_async
    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 3254, in run_ast_nodes
    if (await self.run_code(code, result,  async_=asy)):
  File "/progs/miniconda3/envs/py38/lib/python3.8/site-packages/IPython/core/interactiveshell.py", line 3331, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "&lt;ipython-input-1-d51f8f2ea671&gt;", line 16, in &lt;module&gt;
    replay = zephyrus_sc2_parser.parse_replay(replay_file, local=True)
  File "/home/dominik/.local/lib/python3.8/site-packages/zephyrus_sc2_parser/parser.py", line 162, in parse_replay
    logging.critical('A KeyError error occured:', error, 'unreadable file info')
Message: 'A KeyError error occured:'
Arguments: (KeyError(b''), 'unreadable file info')</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Failed for /home/dominik/Links/SC2Reps/Eternal Empire LE (20).SC2Replay: local variable 'game_length' referenced before assignment
</code></pre>
</div>
</div>
<p>And I have absolutely no idea how to explain the <em>Logging error</em>. We aren’t missing out on many games, though:</p>
<div id="cell-5" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"We successfully parsed </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(parsed_replays)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> replays, which is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(parsed_replays)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(replays)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2%}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> of the total!"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>We successfully parsed 464 replays, which is 97.68% of the total!</code></pre>
</div>
</div>
<p>That was the first step; now, we continue to…</p>
</section>
<section id="pull-the-interesting-data" class="level2">
<h2 class="anchored" data-anchor-id="pull-the-interesting-data">Pull the interesting data</h2>
<p>Note that this mostly handles 1v1 data; it might be a bit more difficult to filter out stuff such as coop and team games. I would probably recommend filtering them out at an earlier stage, by filename.</p>
<div id="cell-8" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># utility function to get our own player ID</span></span>
<span id="cb7-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> grab_player_id(players, name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PLAYER_NAME):</span>
<span id="cb7-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key, player <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> players.items():</span>
<span id="cb7-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> player.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> name:</span>
<span id="cb7-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span>        </span>
<span id="cb7-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb7-7">        key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb7-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> key</span>
<span id="cb7-9"></span>
<span id="cb7-10"></span>
<span id="cb7-11">results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb7-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> replay_file, replay <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> parsed_replays.items():</span>
<span id="cb7-13">    players, timeline, engagements, summary, meta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> replay</span>
<span id="cb7-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>(item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> replay):</span>
<span id="cb7-15">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Failed to parse for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>replay_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb7-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb7-17">    my_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grab_player_id(players, PLAYER_NAME)</span>
<span id="cb7-18">    enemy_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (my_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb7-19">    </span>
<span id="cb7-20">    results.append(</span>
<span id="cb7-21">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(</span>
<span id="cb7-22">            replay_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> replay_file,</span>
<span id="cb7-23">            time_played_at <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>],</span>
<span id="cb7-24">            win <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"winner"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> my_id,</span>
<span id="cb7-25">            </span>
<span id="cb7-26">            race <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> players[my_id].race,</span>
<span id="cb7-27">            enemy_race <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> players[enemy_id].race,</span>
<span id="cb7-28">            </span>
<span id="cb7-29">            mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr'</span>][my_id],</span>
<span id="cb7-30">            </span>
<span id="cb7-31">            enemy_mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr'</span>][enemy_id],</span>
<span id="cb7-32">            enemy_nickame <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> players[enemy_id].name,</span>
<span id="cb7-33">            </span>
<span id="cb7-34">            map_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"map"</span>],</span>
<span id="cb7-35">            duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'game_length'</span>],</span>
<span id="cb7-36">        )</span>
<span id="cb7-37">    )</span>
<span id="cb7-38"></span>
<span id="cb7-39"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"We successfully pulled data out of </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(results)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> replays, which is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(results)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(replays)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2%}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> of the total!"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Failed to parse for /home/dominik/Links/SC2Reps/Ephemeron LE (24).SC2Replay
Failed to parse for /home/dominik/Links/SC2Reps/Malwarfare.SC2Replay
We successfully pulled data out of 462 replays, which is 97.26% of the total!</code></pre>
</div>
</div>
<p>What I’m showing you here is the end result, but if you wanted to add some other metrics, you might be interested in the answer to:</p>
<section id="how-do-i-pick-the-interesting-data" class="level3">
<h3 class="anchored" data-anchor-id="how-do-i-pick-the-interesting-data">How do I pick the interesting data?</h3>
<p>We’ll use the entries from the last replay. Most of them are dictionaries, so it’s pretty easy to get access to their contents:</p>
<div id="cell-11" class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">meta</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="42">
<pre><code>{'time_played_at': datetime.datetime(2020, 4, 30, 18, 34, 1, tzinfo=&lt;UTC&gt;),
 'map': 'Nightshade LE',
 'game_length': 1040,
 'winner': 2}</code></pre>
</div>
</div>
<p>If you run this notebook locally, IPython has a nice widget to browse this data. If you’re reading this on the website, you’ll probably unfortunately see only <code>&lt;IPython.core.display.JSON object&gt;</code>:</p>
<div id="cell-13" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> JSON</span>
<span id="cb11-2">JSON(summary)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>&lt;IPython.core.display.JSON object&gt;</code></pre>
</div>
</div>
<div id="cell-14" class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">summary.keys()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="44">
<pre><code>dict_keys(['mmr', 'avg_resource_collection_rate', 'avg_unspent_resources', 'apm', 'spm', 'resources_lost', 'resources_collected', 'workers_produced', 'workers_killed', 'workers_lost', 'supply_block', 'sq', 'avg_pac_per_min', 'avg_pac_action_latency', 'avg_pac_actions', 'avg_pac_gap', 'race'])</code></pre>
</div>
</div>
<p>As you can (possibly) see, there’s plenty of interesting data that I might use sometime. Beyond what we’re already pulling out:</p>
<ul>
<li>Average resource collection rate</li>
<li>the <a href="https://liquipedia.net/starcraft2/Spending_quotient">spending quotient</a>, a (possibly flawed) measure of macro skill</li>
<li>time spent supply blocked</li>
<li>workers lost, killed and produced</li>
<li>per-race statistics:
<ul>
<li>Orbital Command energy efficiency and idle time</li>
<li>likewise for Nexii (Nexuses?)</li>
<li>Splash efficiency for Protoss</li>
</ul></li>
</ul>
<p>I probably wouldn’t use Bayesian inference on all of them, though - it gets hard to come up with a model that involves all of them. Maybe a random forest model would be nice?</p>
<p>Either way, once we’ve found something interesting it’s simple to access the fields:</p>
<div id="cell-16" class="cell" data-execution_count="45">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'apm'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="45">
<pre><code>151.0</code></pre>
</div>
</div>
<p>It’s a bit more difficult to pull data out of <code>players</code>, as there are dedicated objects storing the data there; we can still make do:</p>
<div id="cell-18" class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">clean_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb17-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> player_id, player <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> players.items():</span>
<span id="cb17-3">    d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> player.__dict__.copy()</span>
<span id="cb17-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we have to drop some data that contains custom objects:</span></span>
<span id="cb17-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dropped_key <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"current_selection"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"objects"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"control_groups"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pac_list"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"current_pac"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"active_ability"</span>]:</span>
<span id="cb17-6">        d.pop(dropped_key)</span>
<span id="cb17-7">    clean_data[player_id] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d</span>
<span id="cb17-8">JSON(clean_data)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="46">
<pre><code>&lt;IPython.core.display.JSON object&gt;</code></pre>
</div>
</div>
<p>I’ll showcase a few:</p>
<div id="cell-20" class="cell" data-execution_count="48">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">players[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].upgrades</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="48">
<pre><code>['WarpGateResearch',
 'ExtendedThermalLance',
 'Charge',
 'ProtossGroundWeaponsLevel1',
 'PsiStormTech',
 'GraviticDrive',
 'BlinkTech',
 'ProtossGroundWeaponsLevel2',
 'AdeptPiercingAttack',
 'ProtossGroundArmorsLevel1',
 'ProtossGroundWeaponsLevel3',
 'ProtossShieldsLevel1']</code></pre>
</div>
</div>
<div id="cell-21" class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">players[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].supply_block</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="50">
<pre><code>1568</code></pre>
</div>
</div>
<div id="cell-22" class="cell" data-execution_count="52">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">players[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].resources_collected</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="52">
<pre><code>{'minerals': 31370, 'gas': 11109}</code></pre>
</div>
</div>
<p>A bunch of these keys, such as <code>unspent_resources</code>, are time data, taken at discrete snapshots during the game. There’s more time data, of course, in <code>timeline</code>:</p>
<div id="cell-24" class="cell" data-execution_count="40">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">JSON(timeline)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="40">
<pre><code>&lt;IPython.core.display.JSON object&gt;</code></pre>
</div>
</div>
<p>And I haven’t yet been able to figure this one out:</p>
<div id="cell-26" class="cell" data-execution_count="54">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">engagements</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="54">
<pre><code>[]</code></pre>
</div>
</div>
</section>
</section>
<section id="saving-our-results-to-dataframe-then-to-csv" class="level2">
<h2 class="anchored" data-anchor-id="saving-our-results-to-dataframe-then-to-csv">Saving our results to DataFrame, then to CSV</h2>
<p>We’ll also calculate the MMR difference at this step.</p>
<div id="cell-28" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb29-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(results)</span>
<span id="cb29-3">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr_diff'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df.enemy_mmr</span>
<span id="cb29-4">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">time_played_at</th>
<th data-quarto-table-cell-role="th">win</th>
<th data-quarto-table-cell-role="th">race</th>
<th data-quarto-table-cell-role="th">enemy_race</th>
<th data-quarto-table-cell-role="th">mmr</th>
<th data-quarto-table-cell-role="th">enemy_mmr</th>
<th data-quarto-table-cell-role="th">enemy_nickame</th>
<th data-quarto-table-cell-role="th">map_name</th>
<th data-quarto-table-cell-role="th">duration</th>
<th data-quarto-table-cell-role="th">mmr_diff</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2020-05-27 10:32:29+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>4004</td>
<td>4173</td>
<td>giletjaune</td>
<td>Nightshade LE</td>
<td>601</td>
<td>-169</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2020-06-09 17:11:15+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>4186</td>
<td>4147</td>
<td>djakette</td>
<td>Eternal Empire LE</td>
<td>420</td>
<td>39</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2020-02-02 17:27:27+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>3971</td>
<td>3913</td>
<td>Syocto</td>
<td>Ephemeron LE</td>
<td>10</td>
<td>58</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2019-12-20 18:53:00+00:00</td>
<td>True</td>
<td>Zerg</td>
<td>Terran</td>
<td>2984</td>
<td>3090</td>
<td>Jason</td>
<td>Simulacrum LE</td>
<td>569</td>
<td>-106</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2019-12-09 20:36:21+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>4015</td>
<td>4024</td>
<td>&amp;lt;OGCOСK&amp;gt;&lt;sp/&gt;ShushYo</td>
<td>Nightshade LE</td>
<td>454</td>
<td>-9</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">457</td>
<td>2019-11-04 20:53:20+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Terran</td>
<td>3800</td>
<td>3883</td>
<td>&amp;lt;MiClan&amp;gt;&lt;sp/&gt;MiSHANYA</td>
<td>Disco Bloodbath LE</td>
<td>396</td>
<td>-83</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">458</td>
<td>2020-05-04 12:43:06+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>3926</td>
<td>3831</td>
<td>StaMinA</td>
<td>Golden Wall LE</td>
<td>784</td>
<td>95</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">459</td>
<td>2020-02-02 17:15:06+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>4012</td>
<td>4092</td>
<td>&amp;lt;0mg&amp;gt;&lt;sp/&gt;Sroljo</td>
<td>World of Sleepers LE</td>
<td>264</td>
<td>-80</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">460</td>
<td>2020-04-19 11:48:32+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>0</td>
<td>0</td>
<td>shadowofmich</td>
<td>Simulacrum LE</td>
<td>297</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">461</td>
<td>2020-04-30 18:34:01+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>3964</td>
<td>4055</td>
<td>&amp;lt;BRs&amp;gt;&lt;sp/&gt;GoodFellas</td>
<td>Nightshade LE</td>
<td>1040</td>
<td>-91</td>
</tr>
</tbody>
</table>

<p>462 rows × 10 columns</p>
</div>
</div>
</div>
<p>And we dump that to CSV, and we’re done!</p>
<div id="cell-30" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">df.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/dominik/Writing/blog/files/replays.csv"</span>)</span></code></pre></div>
</div>
</section>
<section id="tldr-version" class="level2">
<h2 class="anchored" data-anchor-id="tldr-version">TL;DR version</h2>
<p>Feel free to take this script and modify as you see fit!</p>
<div id="cell-32" class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pathlib</span>
<span id="cb31-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb31-3"></span>
<span id="cb31-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm.auto <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tqdm</span>
<span id="cb31-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zephyrus_sc2_parser</span>
<span id="cb31-6"></span>
<span id="cb31-7">REPLAY_DIRECTORY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/dominik/Links/SC2Reps"</span></span>
<span id="cb31-8">PLAYER_NAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Perfi"</span></span>
<span id="cb31-9">OUTPUT_CSV <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/dominik/Writing/blog/files/replays.csv"</span></span>
<span id="cb31-10"></span>
<span id="cb31-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> warnings.catch_warnings():</span>
<span id="cb31-12">    warnings.simplefilter(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ignore"</span>)</span>
<span id="cb31-13">    replays <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(pathlib.Path(REPLAY_DIRECTORY).glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*.SC2Replay"</span>))</span>
<span id="cb31-14">    parsed_replays <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb31-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> replay_file <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tqdm.tqdm(replays):</span>
<span id="cb31-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb31-17">            replay <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zephyrus_sc2_parser.parse_replay(replay_file, local<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb31-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb31-19">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Failed for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>replay_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb31-20">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb31-21">        parsed_replays[replay_file] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> replay</span>
<span id="cb31-22">        </span>
<span id="cb31-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"We successfully pulled data out of </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(results)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> replays, which is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(results)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(replays)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2%}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> of the total!"</span>)</span>
<span id="cb31-24"></span>
<span id="cb31-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># utility function to get our own player ID</span></span>
<span id="cb31-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> grab_player_id(players, name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PLAYER_NAME):</span>
<span id="cb31-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key, player <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> players.items():</span>
<span id="cb31-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> player.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> name:</span>
<span id="cb31-29">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span>        </span>
<span id="cb31-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb31-31">        key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb31-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> key</span>
<span id="cb31-33"></span>
<span id="cb31-34"></span>
<span id="cb31-35">results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb31-36"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> replay_file, replay <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> parsed_replays.items():</span>
<span id="cb31-37">    players, timeline, engagements, summary, meta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> replay</span>
<span id="cb31-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>(item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> replay):</span>
<span id="cb31-39">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Failed to parse for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>replay_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb31-40">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb31-41">    my_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grab_player_id(players, PLAYER_NAME)</span>
<span id="cb31-42">    enemy_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (my_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb31-43">    </span>
<span id="cb31-44">    mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr'</span>][my_id]</span>
<span id="cb31-45"></span>
<span id="cb31-46">    enemy_mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr'</span>][enemy_id]</span>
<span id="cb31-47">    results.append(</span>
<span id="cb31-48">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(</span>
<span id="cb31-49">            replay_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> replay_file,</span>
<span id="cb31-50">            time_played_at <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>],</span>
<span id="cb31-51">            win <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"winner"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> my_id,</span>
<span id="cb31-52">            mmr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mmr,</span>
<span id="cb31-53">            enemy_mmr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>enemy_mmr,</span>
<span id="cb31-54">            mmr_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> enemy_mmr</span>
<span id="cb31-55">            race <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> players[my_id].race,</span>
<span id="cb31-56">            enemy_race <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> players[enemy_id].race,</span>
<span id="cb31-57">            enemy_nickame <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> players[enemy_id].name,</span>
<span id="cb31-58">            map_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"map"</span>],</span>
<span id="cb31-59">            duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'game_length'</span>],</span>
<span id="cb31-60">        )</span>
<span id="cb31-61">    )</span>
<span id="cb31-62"></span>
<span id="cb31-63"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"We successfully pulled data out of </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(results)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> replays, which is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(results)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(replays)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2%}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> of the total!"</span>)</span>
<span id="cb31-64"></span>
<span id="cb31-65"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb31-66">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(results)</span>
<span id="cb31-67">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr_diff'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df.enemy_mmr</span>
<span id="cb31-68">df.to_csv(OUTPUT_CSV)</span></code></pre></div>
</div>
<p>If you have questions about this sort of thing, I’ll be happy to help - ask away! :)</p>


</section>

 ]]></description>
  <category>starcraft</category>
  <category>python</category>
  <category>StarCraft II Bayesian replay analysis</category>
  <guid>https://stanczakdominik.github.io/posts/sc2-parse-replays.html</guid>
  <pubDate>Tue, 23 Jun 2020 17:30:00 GMT</pubDate>
</item>
<item>
  <title>Learning my per-matchup MMR in Starcraft II through PyMC3</title>
  <link>https://stanczakdominik.github.io/posts/bayes-sc2-2.html</link>
  <description><![CDATA[ 





<p>In this post we’ll continue our SC2 replay research, <a href="../posts/bayes-sc2-1.html">started last time</a>. You may want to go back to that and pick up on the terminology!</p>
<p>To recap: we used replay data from my SC2 games over 2019 to estimate a “true MMR” value and infer the size of per-game fluctuations. This time, we’ll redo that analysis, except to get something more useful: we’ll look at the three matchups I played and infer separate MMR values for each of those. Let’s dig into it!</p>
<!-- TEASER_END -->
<p>I’ll redo the basic data cleaning steps here. If any of this is confusing, reviewing <a href="../bayes-sc2-part-1">the previous post</a> might really be a good idea - or you could ask a question below, as always!</p>
<p>If you take a close look, you might also find a teaser for one of the next posts in this series here :)</p>
<div id="cell-2" class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> altair</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> MMR_winrate(diff):</span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>diff<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">880</span>))</span>
<span id="cb1-6"></span>
<span id="cb1-7">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/StanczakDominik/stanczakdominik.github.io/src/files/replays.csv"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-8">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.to_datetime(df.time_played_at)</span>
<span id="cb1-9">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.sort_values(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>)</span>
<span id="cb1-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> column <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'race'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_race'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'map_name'</span>]:</span>
<span id="cb1-11">    df[column] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Categorical(df[column])</span>
<span id="cb1-12">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_mmr'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr_diff'</span>]</span>
<span id="cb1-13">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'expected_winrate'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MMR_winrate(df.mmr_diff)</span>
<span id="cb1-14">all_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[(df.mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (df.enemy_mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (df.race <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Protoss"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (df.duration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)]</span>
<span id="cb1-15">all_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_data.rename({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enemy_nickame"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enemy_nickname"</span>}, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># whoops</span></span>
<span id="cb1-16">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_data[(all_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019-01-01'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (all_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-01-01'</span>)]</span>
<span id="cb1-17">data</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="42">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">time_played_at</th>
<th data-quarto-table-cell-role="th">win</th>
<th data-quarto-table-cell-role="th">race</th>
<th data-quarto-table-cell-role="th">enemy_race</th>
<th data-quarto-table-cell-role="th">mmr</th>
<th data-quarto-table-cell-role="th">mmr_diff</th>
<th data-quarto-table-cell-role="th">enemy_nickname</th>
<th data-quarto-table-cell-role="th">map_name</th>
<th data-quarto-table-cell-role="th">duration</th>
<th data-quarto-table-cell-role="th">enemy_mmr</th>
<th data-quarto-table-cell-role="th">expected_winrate</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>2019-10-06 12:36:36+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Protoss</td>
<td>3826</td>
<td>78</td>
<td>vasea</td>
<td>World of Sleepers LE</td>
<td>743</td>
<td>3748</td>
<td>0.550847</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">325</td>
<td>2019-10-08 19:33:28+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Protoss</td>
<td>3893</td>
<td>-53</td>
<td>Wavelength</td>
<td>Ephemeron LE</td>
<td>254</td>
<td>3946</td>
<td>0.465386</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">54</td>
<td>2019-10-10 07:41:27+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>3828</td>
<td>26</td>
<td>PereiRa</td>
<td>Winter's Gate LE</td>
<td>45</td>
<td>3802</td>
<td>0.517001</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">346</td>
<td>2019-10-10 07:55:19+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>3760</td>
<td>-56</td>
<td>&amp;lt;PROOO&amp;gt;&lt;sp/&gt;Jesperpro</td>
<td>Thunderbird LE</td>
<td>801</td>
<td>3816</td>
<td>0.463433</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">138</td>
<td>2019-10-10 20:42:11+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Protoss</td>
<td>3827</td>
<td>126</td>
<td>Pippuri</td>
<td>Acropolis LE</td>
<td>697</td>
<td>3701</td>
<td>0.581684</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">391</td>
<td>2019-12-27 20:24:27+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>3933</td>
<td>-100</td>
<td>HiveMind</td>
<td>World of Sleepers LE</td>
<td>262</td>
<td>4033</td>
<td>0.434956</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">25</td>
<td>2019-12-27 20:40:39+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>3914</td>
<td>0</td>
<td>Racin</td>
<td>Nightshade LE</td>
<td>911</td>
<td>3914</td>
<td>0.500000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">208</td>
<td>2019-12-27 21:24:06+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>3936</td>
<td>-41</td>
<td>&amp;lt;DemuCl&amp;gt;&lt;sp/&gt;Jazzz</td>
<td>Nightshade LE</td>
<td>1277</td>
<td>3977</td>
<td>0.473206</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">59</td>
<td>2019-12-28 20:58:25+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>3959</td>
<td>22</td>
<td>rOoSter</td>
<td>Simulacrum LE</td>
<td>76</td>
<td>3937</td>
<td>0.514387</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">364</td>
<td>2019-12-28 21:06:48+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>3980</td>
<td>-260</td>
<td>contremaitre</td>
<td>Nightshade LE</td>
<td>478</td>
<td>4240</td>
<td>0.336192</td>
</tr>
</tbody>
</table>

<p>138 rows × 11 columns</p>
</div>
</div>
</div>
<p>Let’s visualize the games on a per-matchup MMR vs enemy MMR basis. I added some fancy Altair selection magic, so you can look at winrates in specific MMR ranges.</p>
<div id="cell-4" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">brush <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> altair.selection(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'interval'</span>)</span>
<span id="cb2-2">scatter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> altair.Chart(data).mark_circle().encode(</span>
<span id="cb2-3">    altair.X(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_mmr'</span>,</span>
<span id="cb2-4">             scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Scale(zero<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)),</span>
<span id="cb2-5">    altair.Y(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr'</span>,</span>
<span id="cb2-6">             scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Scale(zero<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)),</span>
<span id="cb2-7">    facet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_race'</span>,</span>
<span id="cb2-8">    size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'expected_winrate'</span>,</span>
<span id="cb2-9">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'win'</span>,</span>
<span id="cb2-10">    tooltip<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_nickname'</span>,</span>
<span id="cb2-11">).add_selection(brush)</span>
<span id="cb2-12"></span>
<span id="cb2-13">bar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> altair.Chart(data).mark_bar().encode(</span>
<span id="cb2-14">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.X(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean(win):Q'</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Scale(domain<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))),</span>
<span id="cb2-15">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_race:O'</span>,</span>
<span id="cb2-16">).transform_filter(brush)</span>
<span id="cb2-17"></span>
<span id="cb2-18">scatter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> bar</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">

<div id="altair-viz-e9fb6eac8de443fda0ccb1674200a46b"></div>
<script type="text/javascript">
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-e9fb6eac8de443fda0ccb1674200a46b") {
      outputDiv = document.getElementById("altair-viz-e9fb6eac8de443fda0ccb1674200a46b");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm//vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm//vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm//vega-lite@4.8.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm//vega-embed@6?noext",
    };

    function loadScript(lib) {
      return new Promise(function(resolve, reject) {
        var s = document.createElement('script');
        s.src = paths[lib];
        s.async = true;
        s.onload = () => resolve(paths[lib]);
        s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
        document.getElementsByTagName("head")[0].appendChild(s);
      });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else if (typeof vegaEmbed === "function") {
      displayChart(vegaEmbed);
    } else {
      loadScript("vega")
        .then(() => loadScript("vega-lite"))
        .then(() => loadScript("vega-embed"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 400, "continuousHeight": 300}}, "vconcat": [{"mark": "circle", "encoding": {"color": {"type": "nominal", "field": "win"}, "facet": {"type": "nominal", "field": "enemy_race"}, "size": {"type": "quantitative", "field": "expected_winrate"}, "tooltip": {"type": "nominal", "field": "enemy_nickname"}, "x": {"type": "quantitative", "field": "enemy_mmr", "scale": {"zero": false}}, "y": {"type": "quantitative", "field": "mmr", "scale": {"zero": false}}}, "selection": {"selector011": {"type": "interval"}}}, {"mark": "bar", "encoding": {"x": {"type": "quantitative", "aggregate": "mean", "field": "win", "scale": {"domain": [0, 1]}}, "y": {"type": "ordinal", "field": "enemy_race"}}, "transform": [{"filter": {"selection": "selector011"}}]}], "data": {"name": "data-ce69fcd3d06f7183126b2b55308aef91"}, "$schema": "https://vega.github.io/schema/vega-lite/v4.8.1.json", "datasets": {"data-ce69fcd3d06f7183126b2b55308aef91": [{"time_played_at": "2019-10-06T12:36:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3826, "mmr_diff": 78, "enemy_nickname": "vasea", "map_name": "World of Sleepers LE", "duration": 743, "enemy_mmr": 3748, "expected_winrate": 0.550846817630644}, {"time_played_at": "2019-10-08T19:33:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3893, "mmr_diff": -53, "enemy_nickname": "Wavelength", "map_name": "Ephemeron LE", "duration": 254, "enemy_mmr": 3946, "expected_winrate": 0.4653858512231642}, {"time_played_at": "2019-10-10T07:41:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3828, "mmr_diff": 26, "enemy_nickname": "PereiRa", "map_name": "Winter's Gate LE", "duration": 45, "enemy_mmr": 3802, "expected_winrate": 0.5170011742274881}, {"time_played_at": "2019-10-10T07:55:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3760, "mmr_diff": -56, "enemy_nickname": "&lt;PROOO&gt;<sp/>Jesperpro", "map_name": "Thunderbird LE", "duration": 801, "enemy_mmr": 3816, "expected_winrate": 0.46343336634463533}, {"time_played_at": "2019-10-10T20:42:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3827, "mmr_diff": 126, "enemy_nickname": "Pippuri", "map_name": "Acropolis LE", "duration": 697, "enemy_mmr": 3701, "expected_winrate": 0.5816835383970852}, {"time_played_at": "2019-10-14T19:15:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3878, "mmr_diff": 17, "enemy_nickname": "Supermaru", "map_name": "Triton LE", "duration": 240, "enemy_mmr": 3861, "expected_winrate": 0.5111186061324027}, {"time_played_at": "2019-10-21T11:14:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3819, "mmr_diff": -88, "enemy_nickname": "&lt;IDLK&gt;<sp/>jasben", "map_name": "Acropolis LE", "duration": 590, "enemy_mmr": 3907, "expected_winrate": 0.44268836623770724}, {"time_played_at": "2019-10-22T11:34:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3881, "mmr_diff": -185, "enemy_nickname": "&lt;\u041d\u0422\u0422&gt;<sp/>SPQR", "map_name": "Ephemeron LE", "duration": 209, "enemy_mmr": 4066, "expected_winrate": 0.3812924158311464}, {"time_played_at": "2019-10-22T11:42:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3840, "mmr_diff": 83, "enemy_nickname": "NiGHTKiNG", "map_name": "World of Sleepers LE", "duration": 453, "enemy_mmr": 3757, "expected_winrate": 0.5540815127263503}, {"time_played_at": "2019-10-22T12:04:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3885, "mmr_diff": -465, "enemy_nickname": "&lt;\u041c\u041486&gt;<sp/>Moldovanin", "map_name": "Acropolis LE", "duration": 187, "enemy_mmr": 4350, "expected_winrate": 0.22851649491264128}, {"time_played_at": "2019-10-22T12:19:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3862, "mmr_diff": -102, "enemy_nickname": "Zergorix", "map_name": "Acropolis LE", "duration": 891, "enemy_mmr": 3964, "expected_winrate": 0.433670620409041}, {"time_played_at": "2019-10-29T09:32:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3821, "mmr_diff": -73, "enemy_nickname": "Tomaso", "map_name": "World of Sleepers LE", "duration": 684, "enemy_mmr": 3894, "expected_winrate": 0.4523921838509467}, {"time_played_at": "2019-10-29T11:20:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3915, "mmr_diff": -17, "enemy_nickname": "abelian", "map_name": "Thunderbird LE", "duration": 320, "enemy_mmr": 3932, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2019-10-29T11:28:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3873, "mmr_diff": -79, "enemy_nickname": "abelian", "map_name": "Thunderbird LE", "duration": 383, "enemy_mmr": 3952, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2019-10-29T11:42:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3836, "mmr_diff": -119, "enemy_nickname": "llllllllllll", "map_name": "Triton LE", "duration": 758, "enemy_mmr": 3955, "expected_winrate": 0.4227798108220997}, {"time_played_at": "2019-10-29T18:17:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3802, "mmr_diff": -110, "enemy_nickname": "beh", "map_name": "Disco Bloodbath LE", "duration": 288, "enemy_mmr": 3912, "expected_winrate": 0.4285368825916186}, {"time_played_at": "2019-10-29T18:34:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3728, "mmr_diff": -16, "enemy_nickname": "&lt;Dobro&gt;<sp/>\u043f\u0438\u0440\u0430\u0436\u043e\u043a", "map_name": "World of Sleepers LE", "duration": 911, "enemy_mmr": 3744, "expected_winrate": 0.4895352325390119}, {"time_played_at": "2019-10-30T07:06:31+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3881, "mmr_diff": 389, "enemy_nickname": "Paulie", "map_name": "Ephemeron LE", "duration": 548, "enemy_mmr": 3492, "expected_winrate": 0.7345530624972029}, {"time_played_at": "2019-10-31T18:12:23+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3881, "mmr_diff": -761, "enemy_nickname": "Tyson", "map_name": "Acropolis LE", "duration": 49, "enemy_mmr": 4642, "expected_winrate": 0.12012861418038036}, {"time_played_at": "2019-10-31T18:55:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3766, "mmr_diff": 10, "enemy_nickname": "Granaatappel", "map_name": "Acropolis LE", "duration": 777, "enemy_mmr": 3756, "expected_winrate": 0.506541061734927}, {"time_played_at": "2019-10-31T19:07:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3730, "mmr_diff": 66, "enemy_nickname": "&lt;IndyK&gt;<sp/>Sven", "map_name": "Disco Bloodbath LE", "duration": 381, "enemy_mmr": 3664, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2019-11-01T09:05:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3691, "mmr_diff": -78, "enemy_nickname": "&lt;NerCC&gt;<sp/>speck", "map_name": "Triton LE", "duration": 943, "enemy_mmr": 3769, "expected_winrate": 0.4491531823693559}, {"time_played_at": "2019-11-01T09:15:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3729, "mmr_diff": -142, "enemy_nickname": "Ghalib", "map_name": "Ephemeron LE", "duration": 552, "enemy_mmr": 3871, "expected_winrate": 0.40816569372083916}, {"time_played_at": "2019-11-01T13:42:38+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3696, "mmr_diff": 65, "enemy_nickname": "&lt;PiGPan&gt;<sp/>Garethax", "map_name": "Acropolis LE", "duration": 198, "enemy_mmr": 3631, "expected_winrate": 0.5424171287450194}, {"time_played_at": "2019-11-02T17:45:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3661, "mmr_diff": 30, "enemy_nickname": "KKroer", "map_name": "Disco Bloodbath LE", "duration": 585, "enemy_mmr": 3631, "expected_winrate": 0.5196142341997408}, {"time_played_at": "2019-11-02T17:51:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3718, "mmr_diff": 33, "enemy_nickname": "Hazard", "map_name": "Triton LE", "duration": 256, "enemy_mmr": 3685, "expected_winrate": 0.5215733330511455}, {"time_played_at": "2019-11-02T17:55:38+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3688, "mmr_diff": 62, "enemy_nickname": "Pleydellia", "map_name": "Triton LE", "duration": 162, "enemy_mmr": 3626, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2019-11-02T20:06:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3655, "mmr_diff": 8, "enemy_nickname": "lllllll", "map_name": "Disco Bloodbath LE", "duration": 797, "enemy_mmr": 3647, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-11-02T20:15:14+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3684, "mmr_diff": 58, "enemy_nickname": "lllllll", "map_name": "World of Sleepers LE", "duration": 470, "enemy_mmr": 3626, "expected_winrate": 0.5378676713661427}, {"time_played_at": "2019-11-02T20:29:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3711, "mmr_diff": -25, "enemy_nickname": "&lt;PiGPan&gt;<sp/>Noose", "map_name": "World of Sleepers LE", "duration": 796, "enemy_mmr": 3736, "expected_winrate": 0.48365224166479165}, {"time_played_at": "2019-11-03T11:18:56+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3740, "mmr_diff": -44, "enemy_nickname": "&lt;DaGOAT&gt;<sp/>Sinus", "map_name": "Acropolis LE", "duration": 352, "enemy_mmr": 3784, "expected_winrate": 0.4712494361077314}, {"time_played_at": "2019-11-03T11:35:01+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3769, "mmr_diff": -87, "enemy_nickname": "&lt;LESeV&gt;<sp/>iceclaw", "map_name": "Triton LE", "duration": 932, "enemy_mmr": 3856, "expected_winrate": 0.44333401172275544}, {"time_played_at": "2019-11-04T20:40:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3799, "mmr_diff": -67, "enemy_nickname": "&lt;FreeHK&gt;<sp/>jellun", "map_name": "Acropolis LE", "duration": 455, "enemy_mmr": 3866, "expected_winrate": 0.4562842910331827}, {"time_played_at": "2019-11-04T20:46:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3825, "mmr_diff": -22, "enemy_nickname": "North", "map_name": "Ephemeron LE", "duration": 311, "enemy_mmr": 3847, "expected_winrate": 0.48561281583400134}, {"time_played_at": "2019-11-04T20:53:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3800, "mmr_diff": -83, "enemy_nickname": "&lt;MiClan&gt;<sp/>MiSHANYA", "map_name": "Disco Bloodbath LE", "duration": 396, "enemy_mmr": 3883, "expected_winrate": 0.44591848727364963}, {"time_played_at": "2019-11-04T20:57:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3777, "mmr_diff": 16, "enemy_nickname": "IIIIIIIIIIII", "map_name": "World of Sleepers LE", "duration": 182, "enemy_mmr": 3761, "expected_winrate": 0.5104647674609881}, {"time_played_at": "2019-11-05T18:35:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3752, "mmr_diff": 66, "enemy_nickname": "Fleetz", "map_name": "World of Sleepers LE", "duration": 777, "enemy_mmr": 3686, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2019-11-05T18:43:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3774, "mmr_diff": -53, "enemy_nickname": "&lt;XsR&gt;<sp/>Ajotaele", "map_name": "Ephemeron LE", "duration": 426, "enemy_mmr": 3827, "expected_winrate": 0.4653858512231642}, {"time_played_at": "2019-11-05T18:48:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3752, "mmr_diff": -19, "enemy_nickname": "&lt;dumbfu&gt;<sp/>cheesus", "map_name": "Ephemeron LE", "duration": 259, "enemy_mmr": 3771, "expected_winrate": 0.4875738328873896}, {"time_played_at": "2019-11-05T18:58:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3776, "mmr_diff": 24, "enemy_nickname": "smthFISHYcmg", "map_name": "World of Sleepers LE", "duration": 546, "enemy_mmr": 3752, "expected_winrate": 0.5156942865406842}, {"time_played_at": "2019-11-06T21:43:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3798, "mmr_diff": -5, "enemy_nickname": "ProtoZZavr", "map_name": "Disco Bloodbath LE", "duration": 551, "enemy_mmr": 3803, "expected_winrate": 0.4967293291893}, {"time_played_at": "2019-11-08T09:33:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3821, "mmr_diff": -101, "enemy_nickname": "Zend", "map_name": "World of Sleepers LE", "duration": 944, "enemy_mmr": 3922, "expected_winrate": 0.4343133632425947}, {"time_played_at": "2019-11-12T09:42:59+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3847, "mmr_diff": -41, "enemy_nickname": "&lt;UATeam&gt;<sp/>click", "map_name": "Acropolis LE", "duration": 723, "enemy_mmr": 3888, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2019-11-12T09:49:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3870, "mmr_diff": -30, "enemy_nickname": "midhigh", "map_name": "World of Sleepers LE", "duration": 363, "enemy_mmr": 3900, "expected_winrate": 0.4803857658002591}, {"time_played_at": "2019-11-12T10:06:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3890, "mmr_diff": -72, "enemy_nickname": "Paulie", "map_name": "World of Sleepers LE", "duration": 1005, "enemy_mmr": 3962, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2019-11-17T09:58:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3913, "mmr_diff": -79, "enemy_nickname": "TrashCanMan", "map_name": "Triton LE", "duration": 212, "enemy_mmr": 3992, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2019-11-17T10:20:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3894, "mmr_diff": 96, "enemy_nickname": "MightyMurloc", "map_name": "Ephemeron LE", "duration": 1313, "enemy_mmr": 3798, "expected_winrate": 0.5624696497063278}, {"time_played_at": "2019-11-18T15:44:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3913, "mmr_diff": 116, "enemy_nickname": "&lt;lLiTl&gt;<sp/>Eniman", "map_name": "Triton LE", "duration": 278, "enemy_mmr": 3797, "expected_winrate": 0.5753034142357183}, {"time_played_at": "2019-11-18T15:58:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3893, "mmr_diff": 103, "enemy_nickname": "\u0432\u043b\u0430\u0434", "map_name": "Ephemeron LE", "duration": 845, "enemy_mmr": 3790, "expected_winrate": 0.5669718993599533}, {"time_played_at": "2019-11-18T16:08:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3911, "mmr_diff": -55, "enemy_nickname": "trouth", "map_name": "Ephemeron LE", "duration": 529, "enemy_mmr": 3966, "expected_winrate": 0.4640840730548977}, {"time_played_at": "2019-11-18T16:17:57+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3891, "mmr_diff": 10, "enemy_nickname": "OlympusRoyal", "map_name": "Ephemeron LE", "duration": 540, "enemy_mmr": 3881, "expected_winrate": 0.506541061734927}, {"time_played_at": "2019-11-18T17:08:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3912, "mmr_diff": 89, "enemy_nickname": "InsighT", "map_name": "Ephemeron LE", "duration": 44, "enemy_mmr": 3823, "expected_winrate": 0.557957085634325}, {"time_played_at": "2019-11-18T17:26:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3888, "mmr_diff": -16, "enemy_nickname": "trouth", "map_name": "Triton LE", "duration": 970, "enemy_mmr": 3904, "expected_winrate": 0.4895352325390119}, {"time_played_at": "2019-11-18T17:32:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3910, "mmr_diff": -10, "enemy_nickname": "Raver", "map_name": "Acropolis LE", "duration": 341, "enemy_mmr": 3920, "expected_winrate": 0.49345893826507303}, {"time_played_at": "2019-11-18T17:48:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3889, "mmr_diff": -18, "enemy_nickname": "&lt;TheDOH&gt;<sp/>secretspace", "map_name": "World of Sleepers LE", "duration": 879, "enemy_mmr": 3907, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2019-11-18T18:03:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3911, "mmr_diff": -50, "enemy_nickname": "Cosmobrother", "map_name": "Acropolis LE", "duration": 909, "enemy_mmr": 3961, "expected_winrate": 0.4673393974095765}, {"time_played_at": "2019-11-19T07:23:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3934, "mmr_diff": 60, "enemy_nickname": "IIIIIIIIIIII", "map_name": "Disco Bloodbath LE", "duration": 780, "enemy_mmr": 3874, "expected_winrate": 0.5391681935344519}, {"time_played_at": "2019-11-19T19:02:22+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3954, "mmr_diff": 384, "enemy_nickname": "&lt;EESC&gt;<sp/>penduloSFX", "map_name": "World of Sleepers LE", "duration": 1003, "enemy_mmr": 3570, "expected_winrate": 0.7319942855046018}, {"time_played_at": "2019-11-19T19:05:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3972, "mmr_diff": -387, "enemy_nickname": "Pudgey", "map_name": "Ephemeron LE", "duration": 183, "enemy_mmr": 4359, "expected_winrate": 0.2664685738023793}, {"time_played_at": "2019-11-19T19:10:36+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3947, "mmr_diff": -62, "enemy_nickname": "&lt;TDDA&gt;<sp/>EMM", "map_name": "Ephemeron LE", "duration": 219, "enemy_mmr": 4009, "expected_winrate": 0.45953181733049886}, {"time_played_at": "2019-11-19T19:33:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3950, "mmr_diff": 91, "enemy_nickname": "YvanDuR\u00eave", "map_name": "Ephemeron LE", "duration": 1173, "enemy_mmr": 3859, "expected_winrate": 0.5592474000561543}, {"time_played_at": "2019-11-20T07:59:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3969, "mmr_diff": -19, "enemy_nickname": "BuRneR", "map_name": "Ephemeron LE", "duration": 453, "enemy_mmr": 3988, "expected_winrate": 0.4875738328873896}, {"time_played_at": "2019-11-20T08:19:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3948, "mmr_diff": 63, "enemy_nickname": "&lt;CocoCo&gt;<sp/>Goty", "map_name": "Triton LE", "duration": 1199, "enemy_mmr": 3885, "expected_winrate": 0.5411179718915647}, {"time_played_at": "2019-11-25T17:38:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3925, "mmr_diff": -95, "enemy_nickname": "&lt;kOzY&gt;<sp/>Dave", "map_name": "World of Sleepers LE", "duration": 891, "enemy_mmr": 4020, "expected_winrate": 0.43817438762285926}, {"time_played_at": "2019-11-25T17:53:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3949, "mmr_diff": 14, "enemy_nickname": "Crombo", "map_name": "Disco Bloodbath LE", "duration": 830, "enemy_mmr": 3935, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-11-26T18:58:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3927, "mmr_diff": 19, "enemy_nickname": "\u043f\u0440\u043e\u0440\u0432\u0435\u043c\u0441\u044f", "map_name": "World of Sleepers LE", "duration": 321, "enemy_mmr": 3908, "expected_winrate": 0.5124261671126104}, {"time_played_at": "2019-11-26T19:04:47+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3905, "mmr_diff": -691, "enemy_nickname": "Doomweed", "map_name": "Acropolis LE", "duration": 224, "enemy_mmr": 4596, "expected_winrate": 0.1408736498380834}, {"time_played_at": "2019-11-26T19:11:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3899, "mmr_diff": -952, "enemy_nickname": "SkyFlare", "map_name": "World of Sleepers LE", "duration": 66, "enemy_mmr": 4851, "expected_winrate": 0.07649305137834163}, {"time_played_at": "2019-11-26T19:20:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3924, "mmr_diff": -17, "enemy_nickname": "Chief", "map_name": "World of Sleepers LE", "duration": 463, "enemy_mmr": 3941, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2019-11-26T19:32:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3944, "mmr_diff": 136, "enemy_nickname": "Romio", "map_name": "Triton LE", "duration": 685, "enemy_mmr": 3808, "expected_winrate": 0.5880364496644981}, {"time_played_at": "2019-11-28T19:00:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3962, "mmr_diff": 20, "enemy_nickname": "&lt;SILeSp&gt;<sp/>Galactus", "map_name": "Eternal Empire LE", "duration": 307, "enemy_mmr": 3942, "expected_winrate": 0.5130798849527788}, {"time_played_at": "2019-11-28T19:09:44+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3940, "mmr_diff": 86, "enemy_nickname": "&lt;vGL&gt;<sp/>Celestial", "map_name": "World of Sleepers LE", "duration": 541, "enemy_mmr": 3854, "expected_winrate": 0.556020151303233}, {"time_played_at": "2019-11-28T19:23:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 3, "enemy_nickname": "Inquisition", "map_name": "World of Sleepers LE", "duration": 721, "enemy_mmr": 3956, "expected_winrate": 0.5019624204002703}, {"time_played_at": "2019-11-29T18:07:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3981, "mmr_diff": 5, "enemy_nickname": "zzTp", "map_name": "Nightshade LE", "duration": 468, "enemy_mmr": 3976, "expected_winrate": 0.5032706708107001}, {"time_played_at": "2019-11-29T18:14:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3959, "mmr_diff": -39, "enemy_nickname": "zzTp", "map_name": "World of Sleepers LE", "duration": 384, "enemy_mmr": 3998, "expected_winrate": 0.47451051944488615}, {"time_played_at": "2019-11-29T18:31:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3939, "mmr_diff": -14, "enemy_nickname": "&lt;ERHELM&gt;<sp/>Erik", "map_name": "Simulacrum LE", "duration": 1015, "enemy_mmr": 3953, "expected_winrate": 0.49084301506895067}, {"time_played_at": "2019-12-02T19:29:02+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3961, "mmr_diff": -107, "enemy_nickname": "&lt;IWtD&gt;<sp/>DiabloFeTo", "map_name": "Simulacrum LE", "duration": 575, "enemy_mmr": 4068, "expected_winrate": 0.4304602938093038}, {"time_played_at": "2019-12-02T19:42:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3985, "mmr_diff": 25, "enemy_nickname": "&lt;OnkelS&gt;<sp/>Prolow", "map_name": "Simulacrum LE", "duration": 685, "enemy_mmr": 3960, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2019-12-02T20:09:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4006, "mmr_diff": -10, "enemy_nickname": "kalarazar", "map_name": "Nightshade LE", "duration": 1326, "enemy_mmr": 4016, "expected_winrate": 0.49345893826507303}, {"time_played_at": "2019-12-03T18:33:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4028, "mmr_diff": -27, "enemy_nickname": "&lt;Furri&gt;<sp/>PrinceOfIEM", "map_name": "World of Sleepers LE", "duration": 476, "enemy_mmr": 4055, "expected_winrate": 0.48234546801180256}, {"time_played_at": "2019-12-03T18:55:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4007, "mmr_diff": 82, "enemy_nickname": "&lt;IBeA\u015aI&gt;<sp/>Bummsjordy", "map_name": "Eternal Empire LE", "duration": 328, "enemy_mmr": 3925, "expected_winrate": 0.5534349310880278}, {"time_played_at": "2019-12-03T19:10:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4026, "mmr_diff": -78, "enemy_nickname": "Orian", "map_name": "World of Sleepers LE", "duration": 817, "enemy_mmr": 4104, "expected_winrate": 0.4491531823693559}, {"time_played_at": "2019-12-05T19:21:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4007, "mmr_diff": 18, "enemy_nickname": "AlexMacedon", "map_name": "World of Sleepers LE", "duration": 585, "enemy_mmr": 3989, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2019-12-05T19:43:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4028, "mmr_diff": 27, "enemy_nickname": "Niinja", "map_name": "World of Sleepers LE", "duration": 1308, "enemy_mmr": 4001, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2019-12-09T20:18:26+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4049, "mmr_diff": -188, "enemy_nickname": "Delaam", "map_name": "Eternal Empire LE", "duration": 307, "enemy_mmr": 4237, "expected_winrate": 0.3794423330829675}, {"time_played_at": "2019-12-09T20:28:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4032, "mmr_diff": -129, "enemy_nickname": "PeterLax", "map_name": "Simulacrum LE", "duration": 557, "enemy_mmr": 4161, "expected_winrate": 0.4164076397687468}, {"time_played_at": "2019-12-09T20:36:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4015, "mmr_diff": -9, "enemy_nickname": "&lt;OGCO\u0421K&gt;<sp/>ShushYo", "map_name": "Nightshade LE", "duration": 454, "enemy_mmr": 4024, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-12-09T20:39:03+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4036, "mmr_diff": -72, "enemy_nickname": "Heradrass", "map_name": "Eternal Empire LE", "duration": 122, "enemy_mmr": 4108, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2019-12-10T19:05:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4017, "mmr_diff": -108, "enemy_nickname": "NS\u0192Faxo", "map_name": "Eternal Empire LE", "duration": 755, "enemy_mmr": 4125, "expected_winrate": 0.42981892053631354}, {"time_played_at": "2019-12-11T20:04:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4042, "mmr_diff": 14, "enemy_nickname": "&lt;PiGPan&gt;<sp/>TNTea", "map_name": "Eternal Empire LE", "duration": 552, "enemy_mmr": 4028, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-12-11T20:23:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4020, "mmr_diff": 8, "enemy_nickname": "Legionaru", "map_name": "Eternal Empire LE", "duration": 1090, "enemy_mmr": 4012, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-12-12T18:10:58+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4041, "mmr_diff": 49, "enemy_nickname": "Ciprian", "map_name": "Eternal Empire LE", "duration": 955, "enemy_mmr": 3992, "expected_winrate": 0.5320091949397798}, {"time_played_at": "2019-12-12T18:48:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4061, "mmr_diff": -83, "enemy_nickname": "&lt;Nutri&gt;<sp/>Highscribe", "map_name": "Nightshade LE", "duration": 733, "enemy_mmr": 4144, "expected_winrate": 0.44591848727364963}, {"time_played_at": "2019-12-12T19:02:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4042, "mmr_diff": 13, "enemy_nickname": "contremaitre", "map_name": "World of Sleepers LE", "duration": 772, "enemy_mmr": 4029, "expected_winrate": 0.5085030455441815}, {"time_played_at": "2019-12-12T19:21:45+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4063, "mmr_diff": 12, "enemy_nickname": "Fraze", "map_name": "Nightshade LE", "duration": 1163, "enemy_mmr": 4051, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2019-12-12T19:28:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4041, "mmr_diff": -90, "enemy_nickname": "NazelHut", "map_name": "Simulacrum LE", "duration": 317, "enemy_mmr": 4131, "expected_winrate": 0.44139765822811194}, {"time_played_at": "2019-12-12T19:42:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4022, "mmr_diff": -385, "enemy_nickname": "cloud", "map_name": "Eternal Empire LE", "duration": 398, "enemy_mmr": 4407, "expected_winrate": 0.2674927102443324}, {"time_played_at": "2019-12-12T19:53:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4001, "mmr_diff": -36, "enemy_nickname": "Xaenor", "map_name": "Nightshade LE", "duration": 650, "enemy_mmr": 4037, "expected_winrate": 0.47646823150757606}, {"time_played_at": "2019-12-12T20:52:10+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3980, "mmr_diff": 15, "enemy_nickname": "&lt;snajpu&gt;<sp/>Auddi", "map_name": "Simulacrum LE", "duration": 356, "enemy_mmr": 3965, "expected_winrate": 0.5098108929820042}, {"time_played_at": "2019-12-12T21:03:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4001, "mmr_diff": 57, "enemy_nickname": "&lt;snajpu&gt;<sp/>Auddi", "map_name": "Nightshade LE", "duration": 619, "enemy_mmr": 3944, "expected_winrate": 0.5372172158592833}, {"time_played_at": "2019-12-12T21:16:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3978, "mmr_diff": -191, "enemy_nickname": "Vidra", "map_name": "Nightshade LE", "duration": 765, "enemy_mmr": 4169, "expected_winrate": 0.3775957486362336}, {"time_played_at": "2019-12-12T21:29:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 75, "enemy_nickname": "Noobofsc", "map_name": "Simulacrum LE", "duration": 709, "enemy_mmr": 3882, "expected_winrate": 0.5489039163154777}, {"time_played_at": "2019-12-14T10:50:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3933, "mmr_diff": -85, "enemy_nickname": "&lt;Div303&gt;<sp/>Dupsko", "map_name": "Simulacrum LE", "duration": 930, "enemy_mmr": 4018, "expected_winrate": 0.4446258750331179}, {"time_played_at": "2019-12-18T16:35:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3957, "mmr_diff": -109, "enemy_nickname": "&lt;IndyK&gt;<sp/>HaPe", "map_name": "Eternal Empire LE", "duration": 235, "enemy_mmr": 4066, "expected_winrate": 0.42917778277580165}, {"time_played_at": "2019-12-18T16:53:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3938, "mmr_diff": 110, "enemy_nickname": "FrozenZerg", "map_name": "Simulacrum LE", "duration": 960, "enemy_mmr": 3828, "expected_winrate": 0.5714631174083814}, {"time_played_at": "2019-12-20T18:17:10+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 0, "enemy_nickname": "&lt;\u01aeesXG&gt;<sp/>Rocky", "map_name": "World of Sleepers LE", "duration": 257, "enemy_mmr": 3957, "expected_winrate": 0.5}, {"time_played_at": "2019-12-20T18:36:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3935, "mmr_diff": -246, "enemy_nickname": "utopike", "map_name": "World of Sleepers LE", "duration": 1112, "enemy_mmr": 4181, "expected_winrate": 0.3444157777997608}, {"time_played_at": "2019-12-20T18:42:21+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3955, "mmr_diff": -205, "enemy_nickname": "Nyx", "map_name": "Simulacrum LE", "duration": 329, "enemy_mmr": 4160, "expected_winrate": 0.36902597468573733}, {"time_played_at": "2019-12-20T18:59:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3939, "mmr_diff": 53, "enemy_nickname": "CapSto", "map_name": "Eternal Empire LE", "duration": 338, "enemy_mmr": 3886, "expected_winrate": 0.5346141487768358}, {"time_played_at": "2019-12-20T19:06:55+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3959, "mmr_diff": -4, "enemy_nickname": "&lt;TAW&gt;<sp/>Pote", "map_name": "World of Sleepers LE", "duration": 453, "enemy_mmr": 3963, "expected_winrate": 0.49738344991611666}, {"time_played_at": "2019-12-20T19:21:46+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3937, "mmr_diff": 62, "enemy_nickname": "Neydark", "map_name": "Simulacrum LE", "duration": 862, "enemy_mmr": 3875, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2019-12-21T13:30:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 1, "enemy_nickname": "Albus", "map_name": "Simulacrum LE", "duration": 426, "enemy_mmr": 3956, "expected_winrate": 0.5006541431191143}, {"time_played_at": "2019-12-21T13:41:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3936, "mmr_diff": -40, "enemy_nickname": "tiwai", "map_name": "Eternal Empire LE", "duration": 611, "enemy_mmr": 3976, "expected_winrate": 0.47385811986038295}, {"time_played_at": "2019-12-21T13:54:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 6, "enemy_nickname": "tiwai", "map_name": "Eternal Empire LE", "duration": 730, "enemy_mmr": 3953, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-12-21T14:00:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3937, "mmr_diff": 180, "enemy_nickname": "RXX", "map_name": "Simulacrum LE", "duration": 299, "enemy_mmr": 3757, "expected_winrate": 0.6156164673184111}, {"time_played_at": "2019-12-21T14:10:12+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3915, "mmr_diff": -92, "enemy_nickname": "xYn", "map_name": "Simulacrum LE", "duration": 492, "enemy_mmr": 4007, "expected_winrate": 0.44010774162905025}, {"time_played_at": "2019-12-21T14:27:45+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3896, "mmr_diff": -15, "enemy_nickname": "Stefan", "map_name": "Eternal Empire LE", "duration": 1009, "enemy_mmr": 3911, "expected_winrate": 0.49018910701799573}, {"time_played_at": "2019-12-21T16:46:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3918, "mmr_diff": -49, "enemy_nickname": "Xenocide", "map_name": "Simulacrum LE", "duration": 826, "enemy_mmr": 3967, "expected_winrate": 0.4679908050602201}, {"time_played_at": "2019-12-21T16:49:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3941, "mmr_diff": -994, "enemy_nickname": "&lt;\u0413\u043d\u043e\u043c\u0438\u043a&gt;<sp/>IndeX", "map_name": "Eternal Empire LE", "duration": 107, "enemy_mmr": 4935, "expected_winrate": 0.06908215857285668}, {"time_played_at": "2019-12-22T20:55:54+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3965, "mmr_diff": 67, "enemy_nickname": "Bingo", "map_name": "Nightshade LE", "duration": 182, "enemy_mmr": 3898, "expected_winrate": 0.5437157089668173}, {"time_played_at": "2019-12-22T21:04:09+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3941, "mmr_diff": 61, "enemy_nickname": "Jungla", "map_name": "Eternal Empire LE", "duration": 472, "enemy_mmr": 3880, "expected_winrate": 0.5398182558231894}, {"time_played_at": "2019-12-22T21:07:48+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3918, "mmr_diff": -9, "enemy_nickname": "DeepMind", "map_name": "World of Sleepers LE", "duration": 175, "enemy_mmr": 3927, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-12-22T21:11:02+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3897, "mmr_diff": -51, "enemy_nickname": "DeepMind", "map_name": "Nightshade LE", "duration": 159, "enemy_mmr": 3948, "expected_winrate": 0.4666881010864951}, {"time_played_at": "2019-12-22T21:26:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3877, "mmr_diff": 44, "enemy_nickname": "Nyxeu", "map_name": "Eternal Empire LE", "duration": 895, "enemy_mmr": 3833, "expected_winrate": 0.5287505638922686}, {"time_played_at": "2019-12-23T16:23:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3897, "mmr_diff": 3, "enemy_nickname": "IntrinsiCat", "map_name": "Eternal Empire LE", "duration": 870, "enemy_mmr": 3894, "expected_winrate": 0.5019624204002703}, {"time_played_at": "2019-12-23T16:30:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3898, "mmr_diff": 116, "enemy_nickname": "\u00e6\u00e6\u00e6", "map_name": "Eternal Empire LE", "duration": 17, "enemy_mmr": 3782, "expected_winrate": 0.5753034142357183}, {"time_played_at": "2019-12-23T16:51:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3873, "mmr_diff": 87, "enemy_nickname": "Listig", "map_name": "Nightshade LE", "duration": 1132, "enemy_mmr": 3786, "expected_winrate": 0.5566659882772446}, {"time_played_at": "2019-12-24T11:03:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3892, "mmr_diff": 47, "enemy_nickname": "&lt;W\u00f8&gt;<sp/>poichiche", "map_name": "Simulacrum LE", "duration": 629, "enemy_mmr": 3845, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2019-12-24T11:17:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3869, "mmr_diff": 6, "enemy_nickname": "&lt;isIMBA&gt;<sp/>naincraft", "map_name": "Eternal Empire LE", "duration": 283, "enemy_mmr": 3863, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-12-24T11:33:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3847, "mmr_diff": -119, "enemy_nickname": "ARCMAN", "map_name": "Simulacrum LE", "duration": 971, "enemy_mmr": 3966, "expected_winrate": 0.4227798108220997}, {"time_played_at": "2019-12-24T18:36:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3872, "mmr_diff": 8, "enemy_nickname": "Vakhtang", "map_name": "Eternal Empire LE", "duration": 771, "enemy_mmr": 3864, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-12-24T18:53:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3893, "mmr_diff": 50, "enemy_nickname": "Vakhtang", "map_name": "Nightshade LE", "duration": 1004, "enemy_mmr": 3843, "expected_winrate": 0.5326606025904235}, {"time_played_at": "2019-12-24T19:08:58+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3914, "mmr_diff": 74, "enemy_nickname": "PPO", "map_name": "World of Sleepers LE", "duration": 920, "enemy_mmr": 3840, "expected_winrate": 0.5482559480584295}, {"time_played_at": "2019-12-27T20:24:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3933, "mmr_diff": -100, "enemy_nickname": "HiveMind", "map_name": "World of Sleepers LE", "duration": 262, "enemy_mmr": 4033, "expected_winrate": 0.4349563270554942}, {"time_played_at": "2019-12-27T20:40:39+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3914, "mmr_diff": 0, "enemy_nickname": "Racin", "map_name": "Nightshade LE", "duration": 911, "enemy_mmr": 3914, "expected_winrate": 0.5}, {"time_played_at": "2019-12-27T21:24:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3936, "mmr_diff": -41, "enemy_nickname": "&lt;DemuCl&gt;<sp/>Jazzz", "map_name": "Nightshade LE", "duration": 1277, "enemy_mmr": 3977, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2019-12-28T20:58:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 22, "enemy_nickname": "rOoSter", "map_name": "Simulacrum LE", "duration": 76, "enemy_mmr": 3937, "expected_winrate": 0.5143871841659987}, {"time_played_at": "2019-12-28T21:06:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3980, "mmr_diff": -260, "enemy_nickname": "contremaitre", "map_name": "Nightshade LE", "duration": 478, "enemy_mmr": 4240, "expected_winrate": 0.3361922887074761}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<section id="separate-matchup-mmrs" class="level1">
<h1>Separate matchup MMRs</h1>
<p>This is where the magic starts. Where, before, we had a single MMR estimation, we’ll now have three, one for each matchup: <img src="https://latex.codecogs.com/png.latex?%5Cmu%5En%20%5Csim%20%5Ctext%7BNormal%7D(4000,%20300)%20%5Ctext%7B%20for%20%7D%20n%20%5Ctext%7B%20in%20%7D%20%5C%7B1,%202,%203%5C%7D"></p>
<p>And likewise for the fluctuation value: <img src="https://latex.codecogs.com/png.latex?%5Csigma%5En%20%5Csim%20%5Ctext%7BHalfNormal%7D(100)"></p>
<p>And that, honestly, is about it! When I realized it, I wanted to title this post “How Can It Be That Simple, Like, What The Hell”. But I did have to tinker with the model for a good while to find out the optimal way of doing things. It turns out the first idea I had was optimal. Who knew.</p>
<p>We’ll use some fancy new PyMC3 3.9 and ArviZ 0.8.3 functionality to replace the old <code>shapes</code> arguments with <code>dims</code>, for cleaner code.</p>
<p>Note: to reproduce, use the GitHub master release of ArviZ for now.</p>
<div id="cell-7" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pymc3 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pm</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arviz <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> az</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fancy new functionality for xarray output - I'll explain later!</span></span>
<span id="cb3-5">coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb3-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"replay"</span>: data.index,</span>
<span id="cb3-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"race"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Terran"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Protoss"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Zerg"</span>],</span>
<span id="cb3-8">}</span></code></pre></div>
</div>
<p>We now assign the new priors for <img src="https://latex.codecogs.com/png.latex?%5Cmu%5En"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma%5En">, three of each - and then we’ll add a helper variable for each of the replays. Note how the new syntax is a good bit cleaner than hardcoding the shapes in.</p>
<div id="cell-9" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pm.Model(coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>coords) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> split_model:</span>
<span id="cb4-2">    mmr_μ_matchup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Normal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'μ'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'race'</span>)</span>
<span id="cb4-3">    mmr_σ_matchup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.HalfNormal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'σ'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'race'</span>)</span>
<span id="cb4-4">    mmr_σ_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Normal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'helper'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span></code></pre></div>
</div>
<p>And the next change we have to make is indexing the per-race average and fluctuation values based on the enemy races, so that each game in our dataset gets the MMR for its particular matchup.</p>
<p>We’ll have to assign a numerical index for each possible enemy race. We’ll choose zeroes for Terran and two for Zerg, so that, at least in indices, Protoss <a href="https://youtu.be/PfYnvDL0Qcw?t=28">can be number one</a>.</p>
<div id="cell-11" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">race_encoding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Terran"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-2">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Protoss"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb5-3">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Zerg"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>} </span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> split_model:</span>
<span id="cb5-6">    enemy_races <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Data(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enemy_race"</span>, data.enemy_race.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(race_encoding).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>), dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span>
<span id="cb5-7">    mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Deterministic(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MMR'</span>, mmr_μ_matchup[enemy_races] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> mmr_σ_matchup[enemy_races] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> mmr_σ_norm, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span></code></pre></div>
</div>
<p>And now it’s smooth sailing from here on out! I forgot to add it last time, but PyMC3 can create a neat graph for your model using GraphViz. If I had remembered to do so, the only difference between this model and ours would be the 3 for <img src="https://latex.codecogs.com/png.latex?%5Cmu,%20%5Csigma"> - since we now have three of each - and adding the <code>enemy_race</code> as <code>pymc3.Data</code>.</p>
<div id="cell-13" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> split_model:</span>
<span id="cb6-2">    enemy_mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Data(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enemy_mmr"</span>, data.enemy_mmr, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span>
<span id="cb6-3">    diffs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Deterministic(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MMR_diff'</span>, mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> enemy_mmr, dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span>
<span id="cb6-4">    p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Deterministic(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'winrate'</span>, MMR_winrate(diffs), dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span>
<span id="cb6-5">    wl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Bernoulli(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'win'</span>, p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>p, observed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data.win, dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span>
<span id="cb6-6">pm.model_to_graphviz(split_model)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-2_files/figure-html/cell-7-output-1.svg" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<section id="first-run" class="level2">
<h2 class="anchored" data-anchor-id="first-run">First run</h2>
<p>And now, let’s <code>sample</code>! We’ll add a predictive prior and posterior sample: this lets us easily see what sort of data we’d see from our initial assumptions and from the fully “learned” (“taught”?) model.</p>
<div id="cell-15" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">predictive_var_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"win μ σ winrate"</span>.split()</span>
<span id="cb7-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> split_model:</span>
<span id="cb7-3">    trace <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.sample(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, tune<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, chains<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, random_seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-4">    output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> az.from_pymc3(trace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>trace,</span>
<span id="cb7-5">                           prior<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pm.sample_prior_predictive(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span> , var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predictive_var_names, random_seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb7-6">                           posterior_predictive<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pm.sample_posterior_predictive(trace, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predictive_var_names, random_seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb7-7">                          )</span>
<span id="cb7-8">output</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Multiprocess sampling (4 chains in 2 jobs)
NUTS: [helper, σ, μ]</code></pre>
</div>
<div class="cell-output cell-output-display">

    <div>
        <style>
            /* Turns off some styling */
            progress {
                /* gets rid of default border in Firefox and Opera. */
                border: none;
                /* Needs to be in here for Safari polyfill so background images work as expected. */
                background-size: auto;
            }
            .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
                background: #F44336;
            }
        </style>
      <progress value="16000" class="" max="16000" style="width:300px; height:20px; vertical-align: middle;"></progress>
      100.00% [16000/16000 00:17&lt;00:00 Sampling 4 chains, 7 divergences]
    </div>
    
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Sampling 4 chains for 2_000 tune and 2_000 draw iterations (8_000 + 8_000 draws total) took 18 seconds.
There were 4 divergences after tuning. Increase `target_accept` or reparameterize.
There were 3 divergences after tuning. Increase `target_accept` or reparameterize.</code></pre>
</div>
<div class="cell-output cell-output-display">

    <div>
        <style>
            /* Turns off some styling */
            progress {
                /* gets rid of default border in Firefox and Opera. */
                border: none;
                /* Needs to be in here for Safari polyfill so background images work as expected. */
                background-size: auto;
            }
            .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
                background: #F44336;
            }
        </style>
      <progress value="8000" class="" max="8000" style="width:300px; height:20px; vertical-align: middle;"></progress>
      100.00% [8000/8000 00:07&lt;00:00]
    </div>
    
</div>
<div class="cell-output cell-output-display" data-execution_count="28">

            <div>
              <div class="xr-header">
                <div class="xr-obj-type">arviz.InferenceData</div>
              </div>
              <ul class="xr-sections">
              
            <li class="xr-section-item">
                  <input id="idata_posterior394b06e9-8c0d-418b-9418-914d84c2574c" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_posterior394b06e9-8c0d-418b-9418-914d84c2574c" class="xr-section-summary">posterior</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-8e1620a6-f3c3-4ead-8f3b-3c435d49cb77" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-8e1620a6-f3c3-4ead-8f3b-3c435d49cb77" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 4</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">race</span>: 3</li><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-57e3c2bf-7b98-4306-a911-1d4426865b62" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-57e3c2bf-7b98-4306-a911-1d4426865b62" class="xr-section-summary">Coordinates: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3</div><input id="attrs-7e616339-3644-43e0-bf35-06c3146f5367" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-7e616339-3644-43e0-bf35-06c3146f5367" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-b1627f7c-6727-4b45-b536-8f20d723bd05" class="xr-var-data-in" type="checkbox"><label for="data-b1627f7c-6727-4b45-b536-8f20d723bd05" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 2, 3])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-b636e3af-1ed6-433d-9265-f6899a9be5d8" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-b636e3af-1ed6-433d-9265-f6899a9be5d8" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-055b9424-f859-4f16-8708-c0bc52d05759" class="xr-var-data-in" type="checkbox"><label for="data-055b9424-f859-4f16-8708-c0bc52d05759" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">race</span></div><div class="xr-var-dims">(race)</div><div class="xr-var-dtype">&lt;U7</div><div class="xr-var-preview xr-preview">'Terran' 'Protoss' 'Zerg'</div><input id="attrs-85f606b4-a922-4034-b681-bab2ef50dc3d" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-85f606b4-a922-4034-b681-bab2ef50dc3d" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-dce8e753-7d4d-40b4-80a8-8d3d8e999184" class="xr-var-data-in" type="checkbox"><label for="data-dce8e753-7d4d-40b4-80a8-8d3d8e999184" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array(['Terran', 'Protoss', 'Zerg'], dtype='&lt;U7')</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-fcd3d38a-4494-432b-9738-ba9e9b34f61e" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-fcd3d38a-4494-432b-9738-ba9e9b34f61e" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-e52af836-cfce-466d-b20d-b499b8189b35" class="xr-var-data-in" type="checkbox"><label for="data-e52af836-cfce-466d-b20d-b499b8189b35" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-2d8a0254-d458-414a-8faa-9b9687909c6f" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-2d8a0254-d458-414a-8faa-9b9687909c6f" class="xr-section-summary">Data variables: <span>(6)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>μ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">4.303e+03 3.375e+03 ... 3.955e+03</div><input id="attrs-bca33145-a8bf-45da-aab6-c6b0191cac8a" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-bca33145-a8bf-45da-aab6-c6b0191cac8a" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-f2bf2a95-8632-45ed-accf-3efac64956a8" class="xr-var-data-in" type="checkbox"><label for="data-f2bf2a95-8632-45ed-accf-3efac64956a8" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[4302.79553938, 3375.01011989, 4048.86315149],
        [4323.86457361, 3295.74222841, 3954.05048638],
        [4239.6739907 , 3448.28894514, 4235.71022401],
        ...,
        [4250.95500899, 3592.96680679, 3907.78214913],
        [4321.36051851, 3657.60296464, 4041.53244852],
        [4378.58347689, 3680.20202035, 4041.44904971]],

       [[4141.06331072, 3385.94471985, 4135.36324411],
        [4138.80737046, 3670.4073407 , 4045.58916728],
        [4194.72695819, 3676.40161761, 3931.11602939],
        ...,
        [4066.10358294, 3429.85753425, 4004.41005399],
        [4049.09082588, 3382.29455772, 3954.15834981],
        [4422.29348522, 3549.2372973 , 4066.31337586]],

       [[4212.20435522, 3476.71136441, 4104.05998443],
        [4139.66832504, 3371.93545224, 4198.27086105],
        [4369.19834033, 3797.3129873 , 3828.50248262],
        ...,
        [4320.92217993, 3755.9095065 , 4165.54070368],
        [4231.08308098, 3713.65002654, 3964.55758405],
        [4274.41509776, 3407.86141075, 3931.29076179]],

       [[4314.0372303 , 3573.73152574, 4058.10772914],
        [4114.59770596, 3463.36390945, 4018.74209014],
        [4464.57525582, 3705.14913054, 4089.96639073],
        ...,
        [4504.44403668, 3638.42652115, 3911.16769539],
        [4256.83526394, 3886.43065114, 3954.52402571],
        [4256.83526394, 3886.43065114, 3954.52402571]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>helper</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.7894 0.5491 ... 1.849 -0.6287</div><input id="attrs-40e94bbe-1bdd-45a0-8519-efafa553ab3b" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-40e94bbe-1bdd-45a0-8519-efafa553ab3b" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-b04ff784-8ca7-4f92-9bbe-33054717577b" class="xr-var-data-in" type="checkbox"><label for="data-b04ff784-8ca7-4f92-9bbe-33054717577b" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[ 0.78936952,  0.5490887 ,  0.16650833, ...,  0.08329766,
         -0.65050062,  0.29929534],
        [ 1.58545972, -0.65388647, -0.65379105, ...,  1.82456396,
         -0.19362754,  1.51704283],
        [-0.95306398,  1.74037107, -1.06139752, ...,  0.49580659,
         -1.65596289,  0.84096651],
        ...,
        [ 0.83862077,  0.72070695,  0.48932378, ..., -0.2039098 ,
         -1.29151567,  1.33576567],
        [ 0.36248347,  1.46751904,  2.691205  , ...,  1.45830882,
         -0.35768443,  2.55530514],
        [ 1.08745544,  1.27714706,  0.61058664, ...,  1.29672473,
         -0.50342047,  2.35664708]],

       [[ 1.03478446,  0.34214246, -0.02786286, ..., -1.94344799,
         -1.74622235,  0.23291672],
        [-1.13226371,  0.59456024, -0.63842647, ...,  0.36564697,
         -0.64213818,  1.34387537],
        [-1.13076226,  0.23707974, -1.6545314 , ..., -0.40823523,
         -2.01952747,  1.78589938],
        ...,
        [ 1.07091423, -0.57066178,  0.11606562, ..., -1.94859916,
         -0.54562754,  0.47149236],
        [ 1.73615185, -0.27786063, -0.27283103, ..., -1.55429249,
         -0.73246607,  0.73910541],
        [-0.65499351,  1.15010742,  0.65100113, ..., -0.51231793,
         -0.53271042,  1.44304005]],

       [[ 0.49833716, -0.51620112,  0.13741193, ...,  0.501271  ,
          1.09108997, -0.73316122],
        [-0.25632797,  0.70929871, -0.30192588, ...,  0.74061067,
          0.88777097,  0.1928401 ],
        [ 0.24746999, -0.78483546,  0.05723709, ..., -0.06153329,
         -2.12186644,  0.20316985],
        ...,
        [ 2.14989454,  1.12821892,  0.49014978, ...,  0.70910716,
         -0.11305358, -0.26844358],
        [ 0.79712821, -0.98653506,  0.27999657, ...,  0.02147621,
          0.45285935, -0.223395  ],
        [ 1.17281098, -0.88489812,  2.22847395, ...,  0.52398786,
         -0.19246968,  0.97882991]],

       [[ 0.15828557, -0.38448579, -0.2247607 , ...,  0.09849247,
         -0.17279176,  0.79657494],
        [ 0.3954921 , -0.67537986, -0.07942884, ...,  1.00072493,
         -0.15591947,  0.71581227],
        [ 2.66366278,  0.60968907, -0.42128861, ..., -0.09888939,
          0.52831846,  0.29878227],
        ...,
        [-0.54199678, -0.4028017 , -1.59414456, ...,  2.31936087,
          0.07555759,  0.57843756],
        [ 1.20184084,  0.51496559,  0.73758509, ...,  1.82835713,
          1.8487901 , -0.62868765],
        [ 1.20184084,  0.51496559,  0.73758509, ...,  1.82835713,
          1.8487901 , -0.62868765]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>σ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">140.4 252.7 183.9 ... 72.88 55.78</div><input id="attrs-050b63f2-57f4-48ef-8d90-50c400afccb4" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-050b63f2-57f4-48ef-8d90-50c400afccb4" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-67c2087a-bca0-46d9-9a91-85d815d19233" class="xr-var-data-in" type="checkbox"><label for="data-67c2087a-bca0-46d9-9a91-85d815d19233" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[140.36011672, 252.69076651, 183.8904596 ],
        [161.51391431,  82.67823509, 212.55352477],
        [108.91799094,  66.69192358,  88.42575348],
        ...,
        [ 31.69679346, 101.09097511,  32.56956811],
        [148.25558444,  50.48937963, 103.02389557],
        [170.53973503,  42.45131739,   7.22075687]],

       [[ 81.39860974,  97.00223551,   5.23367679],
        [ 28.60567987, 120.58701662, 119.74595091],
        [ 24.85236716,  47.00875165,  62.47517088],
        ...,
        [ 27.08894035, 109.52428738,  89.74107174],
        [101.36114868,  44.00684249,  63.21585206],
        [ 45.44140301,  42.24565628,  32.21911083]],

       [[ 85.15403518,  72.24973621, 101.9819129 ],
        [ 69.33515359,  91.23129494, 140.7847575 ],
        [ 45.56776301, 101.34687473,  65.85446419],
        ...,
        [ 39.67975301,  28.28842643,  52.09586543],
        [227.54401728,  35.04100696,  46.01622763],
        [141.84401665, 229.02600795,   5.01932257]],

       [[170.73574582,   6.64000168, 256.76699449],
        [ 77.7241646 ,  58.94863209,  63.38158179],
        [ 92.43500404,  57.06879911,  99.61428138],
        ...,
        [ 34.21264796,  52.28070628, 126.57472452],
        [179.13659055,  72.88096661,  55.7761304 ],
        [179.13659055,  72.88096661,  55.7761304 ]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>MMR</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">3.574e+03 3.514e+03 ... 3.919e+03</div><input id="attrs-bdb35179-7eaa-44bf-816a-817351d23211" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-bdb35179-7eaa-44bf-816a-817351d23211" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-150fc308-194b-4ee9-aeaa-bfa0a6da434b" class="xr-var-data-in" type="checkbox"><label for="data-150fc308-194b-4ee9-aeaa-bfa0a6da434b" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[3574.47650843, 3513.75976477, 4079.48244533, ...,
         4314.48720853, 4211.49119573, 4103.90070894],
        [3426.82524018, 3241.68004931, 3815.08489516, ...,
         4618.55704024, 4292.59103243, 4276.50328733],
        [3384.72727505, 3564.35763932, 4141.85534813, ...,
         4293.67624891, 4059.3098399 , 4310.07332137],
        ...,
        [3677.74379789, 3665.82377497, 3923.71921341, ...,
         4244.49172209, 4210.01810344, 3951.28746012],
        [3675.90453027, 3731.69709048, 4318.79087106, ...,
         4537.56294544, 4268.33180356, 4304.78993801],
        [3726.36593656, 3734.41859557, 4045.85794741, ...,
         4599.72656921, 4292.73028387, 4058.46582531]],

       [[3486.32112569, 3419.1333035 , 4135.21741888, ...,
         3982.86934633, 3998.92323941, 4136.58225494],
        [3533.87103837, 3742.10358598, 3969.14018261, ...,
         4149.26695054, 4120.43857122, 4206.51280099],
        [3623.24589541, 3687.54644032, 3827.74889736, ...,
         4184.58134634, 4144.53692   , 4042.69039863],
        ...,
        [3547.14865165, 3367.35620982, 4014.82590683, ...,
         4013.31809649, 4051.32311109, 4046.72228372],
        [3458.69711886, 3370.06678874, 3936.91110358, ...,
         3891.5459539 , 3974.84722316, 4000.8815279 ],
        [3521.5666664 , 3597.8243401 , 4087.28805338, ...,
         4399.01303974, 4398.08637637, 4112.80684303]],

       [[3512.71609283, 3439.41596971, 4118.0735164 , ...,
         4254.88960386, 4305.11506861, 4029.29080031],
        [3348.55031945, 3436.64569193, 4155.76429966, ...,
         4191.01867944, 4201.22206179, 4225.4198078 ],
        [3822.39329786, 3717.77236616, 3832.27180076, ...,
         4366.39440592, 4272.50963317, 3841.88212429],
        ...,
        [3816.72664015, 3787.82504444, 4191.07548085, ...,
         4349.0593768 , 4316.43624179, 4151.55590297],
        [3741.58220182, 3679.08084456, 3977.44197015, ...,
         4235.96986521, 4334.12851785, 3954.27778896],
        [3676.46562714, 3205.19672793, 3942.47619137, ...,
         4348.73963984, 4247.11442498, 3936.20382483]],

       [[3574.78254219, 3571.17853943, 4000.39660036, ...,
         4330.853415  , 4284.53550087, 4262.64188132],
        [3486.67762767, 3423.55119059, 4013.70776491, ...,
         4192.37821489, 4102.47899548, 4064.11140391],
        [3857.16116685, 3739.94335347, 4048.00002814, ...,
         4455.43441496, 4513.41037517, 4119.72937191],
        ...,
        [3610.09054683, 3617.36776396, 3709.38928727, ...,
         4583.79551357, 4507.02906206, 3984.38327026],
        [3974.02197305, 3923.96184115, 3995.66366771, ...,
         4584.36092651, 4588.0212183 , 3919.4582613 ],
        [3974.02197305, 3923.96184115, 3995.66366771, ...,
         4584.36092651, 4588.0212183 , 3919.4582613 ]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>MMR_diff</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-173.5 -432.2 ... 651.0 -320.5</div><input id="attrs-f19e882a-dde1-458a-90a3-5ce9d2297369" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-f19e882a-dde1-458a-90a3-5ce9d2297369" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-debfe233-cde6-4934-92d1-bc6c1472d710" class="xr-var-data-in" type="checkbox"><label for="data-debfe233-cde6-4934-92d1-bc6c1472d710" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[-173.52349157, -432.24023523,  277.48244533, ...,
          337.48720853,  274.49119573, -136.09929106],
        [-321.17475982, -704.31995069,   13.08489516, ...,
          641.55704024,  355.59103243,   36.50328733],
        [-363.27272495, -381.64236068,  339.85534813, ...,
          316.67624891,  122.3098399 ,   70.07332137],
        ...,
        [ -70.25620211, -280.17622503,  121.71921341, ...,
          267.49172209,  273.01810344, -288.71253988],
        [ -72.09546973, -214.30290952,  516.79087106, ...,
          560.56294544,  331.33180356,   64.78993801],
        [ -21.63406344, -211.58140443,  243.85794741, ...,
          622.72656921,  355.73028387, -181.53417469]],

       [[-261.67887431, -526.8666965 ,  333.21741888, ...,
            5.86934633,   61.92323941, -103.41774506],
        [-214.12896163, -203.89641402,  167.14018261, ...,
          172.26695054,  183.43857122,  -33.48719901],
        [-124.75410459, -258.45355968,   25.74889736, ...,
          207.58134634,  207.53692   , -197.30960137],
        ...,
        [-200.85134835, -578.64379018,  212.82590683, ...,
           36.31809649,  114.32311109, -193.27771628],
        [-289.30288114, -575.93321126,  134.91110358, ...,
          -85.4540461 ,   37.84722316, -239.1184721 ],
        [-226.4333336 , -348.1756599 ,  285.28805338, ...,
          422.01303974,  461.08637637, -127.19315697]],

       [[-235.28390717, -506.58403029,  316.0735164 , ...,
          277.88960386,  368.11506861, -210.70919969],
        [-399.44968055, -509.35430807,  353.76429966, ...,
          214.01867944,  264.22206179,  -14.5801922 ],
        [  74.39329786, -228.22763384,   30.27180076, ...,
          389.39440592,  335.50963317, -398.11787571],
        ...,
        [  68.72664015, -158.17495556,  389.07548085, ...,
          372.0593768 ,  379.43624179,  -88.44409703],
        [  -6.41779818, -266.91915544,  175.44197015, ...,
          258.96986521,  397.12851785, -285.72221104],
        [ -71.53437286, -740.80327207,  140.47619137, ...,
          371.73963984,  310.11442498, -303.79617517]],

       [[-173.21745781, -374.82146057,  198.39660036, ...,
          353.853415  ,  347.53550087,   22.64188132],
        [-261.32237233, -522.44880941,  211.70776491, ...,
          215.37821489,  165.47899548, -175.88859609],
        [ 109.16116685, -206.05664653,  246.00002814, ...,
          478.43441496,  576.41037517, -120.27062809],
        ...,
        [-137.90945317, -328.63223604,  -92.61071273, ...,
          606.79551357,  570.02906206, -255.61672974],
        [ 226.02197305,  -22.03815885,  193.66366771, ...,
          607.36092651,  651.0212183 , -320.5417387 ],
        [ 226.02197305,  -22.03815885,  193.66366771, ...,
          607.36092651,  651.0212183 , -320.5417387 ]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>winrate</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.3884 0.244 ... 0.846 0.3018</div><input id="attrs-87a6c1e2-d9d3-4a26-8e2f-e95ec0f83ad2" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-87a6c1e2-d9d3-4a26-8e2f-e95ec0f83ad2" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-6250ae32-8e5c-4a41-8767-240483572b7c" class="xr-var-data-in" type="checkbox"><label for="data-6250ae32-8e5c-4a41-8767-240483572b7c" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[0.38840135, 0.24397871, 0.67393861, ..., 0.70745598,
         0.67221636, 0.41190061],
        [0.30145528, 0.13670806, 0.50855856, ..., 0.84272985,
         0.71716256, 0.52386025],
        [0.27877826, 0.26921766, 0.70873675, ..., 0.69606027,
         0.57933223, 0.54571002],
        ...,
        [0.45417135, 0.32451442, 0.57895556, ..., 0.66816823,
         0.67136651, 0.31963761],
        [0.45297858, 0.36337639, 0.79449259, ..., 0.81256357,
         0.70411153, 0.5422807 ],
        [0.485852  , 0.36502532, 0.65431758, ..., 0.83608882,
         0.71723646, 0.38343406]],

       [[0.33521265, 0.20123624, 0.7051384 , ..., 0.50383932,
         0.5404183 , 0.43275976],
        [0.36348169, 0.3696986 , 0.60762375, ..., 0.61081735,
         0.61774329, 0.47810857],
        [0.41910992, 0.3370959 , 0.51683711, ..., 0.63254534,
         0.63251832, 0.37372364],
        ...,
        [0.37155715, 0.18033725, 0.6357291 , ..., 0.52373938,
         0.57423102, 0.37619612],
        [0.31930178, 0.181388  , 0.58734606, ..., 0.44433253,
         0.5247373 , 0.34849273],
        [0.35606613, 0.28678965, 0.67841064, ..., 0.75105153,
         0.76967316, 0.41755699]],

       [[0.35077423, 0.20990227, 0.69572652, ..., 0.67417267,
         0.7237621 , 0.36555445],
        [0.26014989, 0.20870266, 0.71619203, ..., 0.63645155,
         0.66626863, 0.49046362],
        [0.54851081, 0.35499039, 0.51979175, ..., 0.73475424,
         0.70638391, 0.26082117],
        ...,
        [0.54483632, 0.39798298, 0.73459157, ..., 0.72582073,
         0.72964516, 0.4424017 ],
        [0.49580194, 0.33216402, 0.61279042, ..., 0.66320592,
         0.73867943, 0.32134157],
        [0.45334239, 0.12582742, 0.59087079, ..., 0.72565421,
         0.69241571, 0.31111641]],

       [[0.38859158, 0.27274337, 0.62694182, ..., 0.71623942,
         0.71286761, 0.51480671],
        [0.33542055, 0.20310077, 0.63505131, ..., 0.63727424,
         0.60658696, 0.38693233],
        [0.57092553, 0.36838244, 0.65558424, ..., 0.7776215 ,
         0.81879732, 0.42196867],
        ...,
        [0.41075375, 0.29736221, 0.43971402, ..., 0.83029583,
         0.81630679, 0.33875661],
        [0.64368704, 0.48558788, 0.62404084, ..., 0.83050419,
         0.84598416, 0.30180419],
        [0.64368704, 0.48558788, 0.62404084, ..., 0.83050419,
         0.84598416, 0.30180419]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-6e04723e-a787-4a0d-a5af-76375ee9ed11" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-6e04723e-a787-4a0d-a5af-76375ee9ed11" class="xr-section-summary">Attributes: <span>(6)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T10:35:36.555638</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd><dt><span>sampling_time :</span></dt><dd>18.211029291152954</dd><dt><span>tuning_steps :</span></dt><dd>2000</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_posterior_predictiveb18d5784-d840-4def-af03-a6caec8cd5cb" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_posterior_predictiveb18d5784-d840-4def-af03-a6caec8cd5cb" class="xr-section-summary">posterior_predictive</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-aa4b1141-ffe8-4688-875b-fa50c870afcb" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-aa4b1141-ffe8-4688-875b-fa50c870afcb" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 4</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">race</span>: 3</li><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-a03fbace-0976-4c72-bd38-9533e5b16bf4" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-a03fbace-0976-4c72-bd38-9533e5b16bf4" class="xr-section-summary">Coordinates: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3</div><input id="attrs-7028bbf5-d3b6-4966-bbff-6e19c6042c3d" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-7028bbf5-d3b6-4966-bbff-6e19c6042c3d" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-f086a0e2-1db5-4e7d-9b32-92c47ff8eb28" class="xr-var-data-in" type="checkbox"><label for="data-f086a0e2-1db5-4e7d-9b32-92c47ff8eb28" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 2, 3])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-5041a05f-c391-4ee9-9e8c-cde04f45e52f" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-5041a05f-c391-4ee9-9e8c-cde04f45e52f" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-ce1f4a07-5be1-4e57-a76e-2955ade3e011" class="xr-var-data-in" type="checkbox"><label for="data-ce1f4a07-5be1-4e57-a76e-2955ade3e011" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-27d038c8-f91d-4e32-8dd1-154b97cfcb40" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-27d038c8-f91d-4e32-8dd1-154b97cfcb40" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-6edd5b07-1a5b-4679-a2db-544920bf861e" class="xr-var-data-in" type="checkbox"><label for="data-6edd5b07-1a5b-4679-a2db-544920bf861e" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">race</span></div><div class="xr-var-dims">(race)</div><div class="xr-var-dtype">&lt;U7</div><div class="xr-var-preview xr-preview">'Terran' 'Protoss' 'Zerg'</div><input id="attrs-63b7f406-d698-4442-bea2-912867dae9a1" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-63b7f406-d698-4442-bea2-912867dae9a1" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-cce8b911-9cbf-4917-8bae-9050fb4b6ebc" class="xr-var-data-in" type="checkbox"><label for="data-cce8b911-9cbf-4917-8bae-9050fb4b6ebc" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array(['Terran', 'Protoss', 'Zerg'], dtype='&lt;U7')</pre></li></ul></div></li><li class="xr-section-item"><input id="section-dc26900f-b4d9-4793-a651-67fdeec9669a" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-dc26900f-b4d9-4793-a651-67fdeec9669a" class="xr-section-summary">Data variables: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>win</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 0 1 1 0 0 1 0 ... 1 0 1 0 1 1 1 0</div><input id="attrs-a308fd8c-f6f3-49b8-bc18-8ae7a5c87ca0" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-a308fd8c-f6f3-49b8-bc18-8ae7a5c87ca0" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-7b52c79a-9f6c-4543-a917-71558e1fa113" class="xr-var-data-in" type="checkbox"><label for="data-7b52c79a-9f6c-4543-a917-71558e1fa113" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[0, 0, 1, ..., 1, 0, 0],
        [1, 0, 0, ..., 1, 0, 0],
        [0, 0, 1, ..., 1, 0, 0],
        ...,
        [1, 0, 0, ..., 1, 1, 1],
        [1, 1, 1, ..., 1, 1, 1],
        [0, 0, 1, ..., 1, 1, 1]],

       [[1, 0, 0, ..., 0, 1, 0],
        [1, 0, 1, ..., 1, 1, 0],
        [0, 0, 1, ..., 1, 1, 0],
        ...,
        [1, 0, 1, ..., 0, 0, 1],
        [1, 0, 1, ..., 1, 1, 0],
        [1, 0, 1, ..., 0, 1, 0]],

       [[1, 1, 0, ..., 0, 0, 0],
        [1, 0, 1, ..., 1, 1, 0],
        [0, 1, 0, ..., 1, 1, 1],
        ...,
        [1, 0, 0, ..., 1, 1, 0],
        [0, 1, 1, ..., 1, 1, 0],
        [1, 0, 0, ..., 1, 1, 0]],

       [[0, 0, 1, ..., 1, 1, 1],
        [0, 0, 1, ..., 1, 0, 0],
        [0, 1, 0, ..., 1, 0, 1],
        ...,
        [0, 0, 0, ..., 0, 1, 1],
        [1, 0, 0, ..., 1, 0, 0],
        [0, 0, 0, ..., 1, 1, 0]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>μ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">4.303e+03 3.375e+03 ... 3.955e+03</div><input id="attrs-8c0df000-d29a-4792-b00b-a5e4486c2974" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-8c0df000-d29a-4792-b00b-a5e4486c2974" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-96e71955-1aaa-4118-912e-68e5ebf0b90d" class="xr-var-data-in" type="checkbox"><label for="data-96e71955-1aaa-4118-912e-68e5ebf0b90d" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[4302.79553938, 3375.01011989, 4048.86315149],
        [4323.86457361, 3295.74222841, 3954.05048638],
        [4239.6739907 , 3448.28894514, 4235.71022401],
        ...,
        [4250.95500899, 3592.96680679, 3907.78214913],
        [4321.36051851, 3657.60296464, 4041.53244852],
        [4378.58347689, 3680.20202035, 4041.44904971]],

       [[4141.06331072, 3385.94471985, 4135.36324411],
        [4138.80737046, 3670.4073407 , 4045.58916728],
        [4194.72695819, 3676.40161761, 3931.11602939],
        ...,
        [4066.10358294, 3429.85753425, 4004.41005399],
        [4049.09082588, 3382.29455772, 3954.15834981],
        [4422.29348522, 3549.2372973 , 4066.31337586]],

       [[4212.20435522, 3476.71136441, 4104.05998443],
        [4139.66832504, 3371.93545224, 4198.27086105],
        [4369.19834033, 3797.3129873 , 3828.50248262],
        ...,
        [4320.92217993, 3755.9095065 , 4165.54070368],
        [4231.08308098, 3713.65002654, 3964.55758405],
        [4274.41509776, 3407.86141075, 3931.29076179]],

       [[4314.0372303 , 3573.73152574, 4058.10772914],
        [4114.59770596, 3463.36390945, 4018.74209014],
        [4464.57525582, 3705.14913054, 4089.96639073],
        ...,
        [4504.44403668, 3638.42652115, 3911.16769539],
        [4256.83526394, 3886.43065114, 3954.52402571],
        [4256.83526394, 3886.43065114, 3954.52402571]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>σ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">140.4 252.7 183.9 ... 72.88 55.78</div><input id="attrs-75a7076c-2f38-4414-aede-2b9a1deefbee" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-75a7076c-2f38-4414-aede-2b9a1deefbee" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-d448de8a-1b9a-476b-bb76-07bbf9162868" class="xr-var-data-in" type="checkbox"><label for="data-d448de8a-1b9a-476b-bb76-07bbf9162868" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[140.36011672, 252.69076651, 183.8904596 ],
        [161.51391431,  82.67823509, 212.55352477],
        [108.91799094,  66.69192358,  88.42575348],
        ...,
        [ 31.69679346, 101.09097511,  32.56956811],
        [148.25558444,  50.48937963, 103.02389557],
        [170.53973503,  42.45131739,   7.22075687]],

       [[ 81.39860974,  97.00223551,   5.23367679],
        [ 28.60567987, 120.58701662, 119.74595091],
        [ 24.85236716,  47.00875165,  62.47517088],
        ...,
        [ 27.08894035, 109.52428738,  89.74107174],
        [101.36114868,  44.00684249,  63.21585206],
        [ 45.44140301,  42.24565628,  32.21911083]],

       [[ 85.15403518,  72.24973621, 101.9819129 ],
        [ 69.33515359,  91.23129494, 140.7847575 ],
        [ 45.56776301, 101.34687473,  65.85446419],
        ...,
        [ 39.67975301,  28.28842643,  52.09586543],
        [227.54401728,  35.04100696,  46.01622763],
        [141.84401665, 229.02600795,   5.01932257]],

       [[170.73574582,   6.64000168, 256.76699449],
        [ 77.7241646 ,  58.94863209,  63.38158179],
        [ 92.43500404,  57.06879911,  99.61428138],
        ...,
        [ 34.21264796,  52.28070628, 126.57472452],
        [179.13659055,  72.88096661,  55.7761304 ],
        [179.13659055,  72.88096661,  55.7761304 ]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>winrate</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.3884 0.244 ... 0.846 0.3018</div><input id="attrs-2ddf2c89-d5db-4547-b4f0-2e50033851f4" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-2ddf2c89-d5db-4547-b4f0-2e50033851f4" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-81faa2bb-d293-40f4-ae58-3642b8b2f17e" class="xr-var-data-in" type="checkbox"><label for="data-81faa2bb-d293-40f4-ae58-3642b8b2f17e" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[0.38840135, 0.24397871, 0.67393861, ..., 0.70745598,
         0.67221636, 0.41190061],
        [0.30145528, 0.13670806, 0.50855856, ..., 0.84272985,
         0.71716256, 0.52386025],
        [0.27877826, 0.26921766, 0.70873675, ..., 0.69606027,
         0.57933223, 0.54571002],
        ...,
        [0.45417135, 0.32451442, 0.57895556, ..., 0.66816823,
         0.67136651, 0.31963761],
        [0.45297858, 0.36337639, 0.79449259, ..., 0.81256357,
         0.70411153, 0.5422807 ],
        [0.485852  , 0.36502532, 0.65431758, ..., 0.83608882,
         0.71723646, 0.38343406]],

       [[0.33521265, 0.20123624, 0.7051384 , ..., 0.50383932,
         0.5404183 , 0.43275976],
        [0.36348169, 0.3696986 , 0.60762375, ..., 0.61081735,
         0.61774329, 0.47810857],
        [0.41910992, 0.3370959 , 0.51683711, ..., 0.63254534,
         0.63251832, 0.37372364],
        ...,
        [0.37155715, 0.18033725, 0.6357291 , ..., 0.52373938,
         0.57423102, 0.37619612],
        [0.31930178, 0.181388  , 0.58734606, ..., 0.44433253,
         0.5247373 , 0.34849273],
        [0.35606613, 0.28678965, 0.67841064, ..., 0.75105153,
         0.76967316, 0.41755699]],

       [[0.35077423, 0.20990227, 0.69572652, ..., 0.67417267,
         0.7237621 , 0.36555445],
        [0.26014989, 0.20870266, 0.71619203, ..., 0.63645155,
         0.66626863, 0.49046362],
        [0.54851081, 0.35499039, 0.51979175, ..., 0.73475424,
         0.70638391, 0.26082117],
        ...,
        [0.54483632, 0.39798298, 0.73459157, ..., 0.72582073,
         0.72964516, 0.4424017 ],
        [0.49580194, 0.33216402, 0.61279042, ..., 0.66320592,
         0.73867943, 0.32134157],
        [0.45334239, 0.12582742, 0.59087079, ..., 0.72565421,
         0.69241571, 0.31111641]],

       [[0.38859158, 0.27274337, 0.62694182, ..., 0.71623942,
         0.71286761, 0.51480671],
        [0.33542055, 0.20310077, 0.63505131, ..., 0.63727424,
         0.60658696, 0.38693233],
        [0.57092553, 0.36838244, 0.65558424, ..., 0.7776215 ,
         0.81879732, 0.42196867],
        ...,
        [0.41075375, 0.29736221, 0.43971402, ..., 0.83029583,
         0.81630679, 0.33875661],
        [0.64368704, 0.48558788, 0.62404084, ..., 0.83050419,
         0.84598416, 0.30180419],
        [0.64368704, 0.48558788, 0.62404084, ..., 0.83050419,
         0.84598416, 0.30180419]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-14d79bc5-540f-4017-a7b5-c15bd72db34e" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-14d79bc5-540f-4017-a7b5-c15bd72db34e" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T10:35:37.090348</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_log_likelihood08fe7f75-9fc8-4056-acfb-6dfe4a8ae512" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_log_likelihood08fe7f75-9fc8-4056-acfb-6dfe4a8ae512" class="xr-section-summary">log_likelihood</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-45570116-90f5-40c8-9ff1-8a468d465d8b" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-45570116-90f5-40c8-9ff1-8a468d465d8b" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 4</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-a17cf165-6955-4f54-9ce7-d846d23e20cb" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-a17cf165-6955-4f54-9ce7-d846d23e20cb" class="xr-section-summary">Coordinates: <span>(3)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3</div><input id="attrs-299af286-d5a0-4291-962d-2ebe685d37dd" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-299af286-d5a0-4291-962d-2ebe685d37dd" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-a4862919-0c4d-4ec3-803b-b6d3eae229f7" class="xr-var-data-in" type="checkbox"><label for="data-a4862919-0c4d-4ec3-803b-b6d3eae229f7" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 2, 3])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-01e81547-3c4b-495a-89e7-24ffe235ed0a" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-01e81547-3c4b-495a-89e7-24ffe235ed0a" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-0bb6a713-d635-44d7-86d6-436f1cc15432" class="xr-var-data-in" type="checkbox"><label for="data-0bb6a713-d635-44d7-86d6-436f1cc15432" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-099f30c1-c7d7-4da3-b572-7628c3f607f5" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-099f30c1-c7d7-4da3-b572-7628c3f607f5" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-e0e4e039-d9d8-4d31-9d46-1adbaf09c125" class="xr-var-data-in" type="checkbox"><label for="data-e0e4e039-d9d8-4d31-9d46-1adbaf09c125" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-c2d8bef7-a435-415a-900b-b69672ce6d6f" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-c2d8bef7-a435-415a-900b-b69672ce6d6f" class="xr-section-summary">Data variables: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>win</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-0.9457 -0.2797 ... -0.1673 -1.198</div><input id="attrs-c523d72f-1ab0-4009-b620-8bb83964ceff" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-c523d72f-1ab0-4009-b620-8bb83964ceff" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-70ebf309-039c-409c-99c7-eb5ea5634955" class="xr-var-data-in" type="checkbox"><label for="data-70ebf309-039c-409c-99c7-eb5ea5634955" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[-0.94571606, -0.27968575, -1.1206696 , ..., -0.34607987,
         -0.39717502, -0.88697319],
        [-1.1991336 , -0.14700236, -0.7104125 , ..., -0.17110883,
         -0.33245274, -0.64653033],
        [-1.27733859, -0.31363962, -1.23352778, ..., -0.36231903,
         -0.54587916, -0.60566754],
        ...,
        [-0.78928073, -0.39232348, -0.86501689, ..., -0.40321529,
         -0.39844008, -1.14056741],
        [-0.79191044, -0.45157668, -1.58227317, ..., -0.20756113,
         -0.35081851, -0.61197151],
        [-0.72185124, -0.45417016, -1.0622348 , ..., -0.17902043,
         -0.3323497 , -0.95858761]],

       [[-1.09299019, -0.22469005, -1.2212492 , ..., -0.68549787,
         -0.61541181, -0.83757254],
        [-1.01202636, -0.46155716, -0.93553407, ..., -0.4929573 ,
         -0.48168229, -0.73791744],
        [-0.86962207, -0.41112495, -0.72740143, ..., -0.45800338,
         -0.4580461 , -0.9842387 ],
        ...,
        [-0.99005259, -0.1988623 , -1.00985747, ..., -0.64676108,
         -0.5547235 , -0.97764469],
        [-1.1416186 , -0.20014505, -0.88514597, ..., -0.81118206,
         -0.64485752, -1.0541379 ],
        [-1.03263881, -0.33797888, -1.13447981, ..., -0.28628102,
         -0.26178932, -0.87333424]],

       [[-1.04761249, -0.23559864, -1.18982837, ..., -0.39426901,
         -0.32329253, -1.00634002],
        [-1.34649731, -0.23408148, -1.25945741, ..., -0.45184699,
         -0.40606233, -0.71240417],
        [-0.60054829, -0.43849007, -0.73353543, ..., -0.30821921,
         -0.34759641, -1.34392027],
        ...,
        [-0.60726986, -0.50746956, -1.3264854 , ..., -0.32045223,
         -0.31519695, -0.81553699],
        [-0.70157875, -0.40371268, -0.94878918, ..., -0.41066975,
         -0.30289124, -1.13525063],
        [-0.7911076 , -0.13447746, -0.89372426, ..., -0.32068168,
         -0.36756877, -1.16758814]],

       [[-0.9452264 , -0.31847587, -0.98602091, ..., -0.33374078,
         -0.33845955, -0.66396377],
        [-1.09237016, -0.22702705, -1.00799851, ..., -0.45055519,
         -0.49990719, -0.94950547],
        [-0.56049651, -0.45947119, -1.06590574, ..., -0.25151537,
         -0.1999187 , -0.86282421],
        ...,
        [-0.88976139, -0.35291376, -0.57930794, ..., -0.18597321,
         -0.20296503, -1.08247338],
        [-0.44054263, -0.66473054, -0.97827477, ..., -0.1857223 ,
         -0.16725464, -1.19797685],
        [-0.44054263, -0.66473054, -0.97827477, ..., -0.1857223 ,
         -0.16725464, -1.19797685]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-1341b687-438c-42e2-b520-e24c742a481c" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-1341b687-438c-42e2-b520-e24c742a481c" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T10:35:37.087198</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_sample_stats3dd36f24-651a-40fa-9baa-425f9d4c7f20" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_sample_stats3dd36f24-651a-40fa-9baa-425f9d4c7f20" class="xr-section-summary">sample_stats</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-64552945-49d2-40e7-b09f-f081b375cc67" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-64552945-49d2-40e7-b09f-f081b375cc67" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 4</li><li><span class="xr-has-index">draw</span>: 2000</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-0cd59e4e-f338-4246-80d4-d4fa69af2c9a" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-0cd59e4e-f338-4246-80d4-d4fa69af2c9a" class="xr-section-summary">Coordinates: <span>(2)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3</div><input id="attrs-0a50f7f6-b5ef-4ca8-96be-407f077f520f" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-0a50f7f6-b5ef-4ca8-96be-407f077f520f" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-c26a28f3-be43-4f5d-ae5d-10b6b769c906" class="xr-var-data-in" type="checkbox"><label for="data-c26a28f3-be43-4f5d-ae5d-10b6b769c906" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 2, 3])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-b5944021-0075-4a10-9f60-32ac4977a194" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-b5944021-0075-4a10-9f60-32ac4977a194" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-4027926a-95d8-48c5-a5d6-6e4e283ca043" class="xr-var-data-in" type="checkbox"><label for="data-4027926a-95d8-48c5-a5d6-6e4e283ca043" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-a92fec18-c469-4d81-b7d3-b6a90ab7c6ba" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-a92fec18-c469-4d81-b7d3-b6a90ab7c6ba" class="xr-section-summary">Data variables: <span>(10)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>step_size_bar</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.4374 0.4374 ... 0.4903 0.4903</div><input id="attrs-04c691a9-85e0-42e9-ad7d-1a892ec0b131" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-04c691a9-85e0-42e9-ad7d-1a892ec0b131" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-64e0e07c-164f-4e06-95ad-4b1e9f0ee9c2" class="xr-var-data-in" type="checkbox"><label for="data-64e0e07c-164f-4e06-95ad-4b1e9f0ee9c2" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[0.4374115 , 0.4374115 , 0.4374115 , ..., 0.4374115 , 0.4374115 ,
        0.4374115 ],
       [0.45402308, 0.45402308, 0.45402308, ..., 0.45402308, 0.45402308,
        0.45402308],
       [0.41388167, 0.41388167, 0.41388167, ..., 0.41388167, 0.41388167,
        0.41388167],
       [0.49034327, 0.49034327, 0.49034327, ..., 0.49034327, 0.49034327,
        0.49034327]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>energy_error</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-1.016 0.3132 ... 0.6163 0.0</div><input id="attrs-0b7e07c4-27c3-49f5-a9ee-604d15b7f1e9" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-0b7e07c4-27c3-49f5-a9ee-604d15b7f1e9" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-c4f39603-c92c-4d1d-938d-6e144d8fe408" class="xr-var-data-in" type="checkbox"><label for="data-c4f39603-c92c-4d1d-938d-6e144d8fe408" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[-1.01642236,  0.31318099, -0.14019916, ..., -0.00712864,
        -0.41741377, -0.08385882],
       [-0.38042493, -1.50079731, -0.16318778, ..., -0.24735973,
        -0.2886005 , -0.17678952],
       [-2.01224887, -0.89066887,  0.47713108, ..., -1.70039887,
         0.31851951,  0.11482341],
       [ 1.43938357,  0.2229521 ,  0.32288281, ..., -0.04535445,
         0.61629039,  0.        ]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>step_size</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.4386 0.4386 ... 0.425 0.425</div><input id="attrs-7e9a7bf2-4f2c-4345-807b-d3a6599ae702" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-7e9a7bf2-4f2c-4345-807b-d3a6599ae702" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-d58e55fc-1c9f-4db2-b589-285b6b953a80" class="xr-var-data-in" type="checkbox"><label for="data-d58e55fc-1c9f-4db2-b589-285b6b953a80" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[0.43855251, 0.43855251, 0.43855251, ..., 0.43855251, 0.43855251,
        0.43855251],
       [0.48249608, 0.48249608, 0.48249608, ..., 0.48249608, 0.48249608,
        0.48249608],
       [0.44391835, 0.44391835, 0.44391835, ..., 0.44391835, 0.44391835,
        0.44391835],
       [0.42501071, 0.42501071, 0.42501071, ..., 0.42501071, 0.42501071,
        0.42501071]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>max_energy_error</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-1.287 1.11 -0.4291 ... 1.535 5.196</div><input id="attrs-973150ba-078a-450c-850a-1d56eb11f397" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-973150ba-078a-450c-850a-1d56eb11f397" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-bf1819e3-394b-46ae-8d4b-e1b81c0d5415" class="xr-var-data-in" type="checkbox"><label for="data-bf1819e3-394b-46ae-8d4b-e1b81c0d5415" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[-1.28737009,  1.11007453, -0.42910467, ...,  0.91347544,
         0.52800764,  0.47859559],
       [-0.48591337, -1.50079731,  2.16250099, ..., -0.24735973,
         3.77015272, -0.76572754],
       [-2.328056  ,  1.01810228,  0.80442549, ..., -1.70039887,
        -0.55804924, 74.25084326],
       [38.71084628,  1.20965313,  0.49249056, ...,  1.35746487,
         1.53478843,  5.19565611]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>diverging</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">bool</div><div class="xr-var-preview xr-preview">False False False ... False False</div><input id="attrs-19d79305-0615-4962-b416-09bb7e3c7ba7" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-19d79305-0615-4962-b416-09bb7e3c7ba7" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-c7b08c58-cc91-4d19-a491-6240c90781ce" class="xr-var-data-in" type="checkbox"><label for="data-c7b08c58-cc91-4d19-a491-6240c90781ce" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[False, False, False, ..., False, False, False],
       [False, False, False, ..., False, False, False],
       [False, False, False, ..., False, False, False],
       [False, False, False, ..., False, False, False]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>depth</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">4 3 3 4 4 3 3 3 ... 3 3 3 3 3 3 3 3</div><input id="attrs-bcae2ec0-da1c-47a9-b8fd-80d777883880" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-bcae2ec0-da1c-47a9-b8fd-80d777883880" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-d2658544-5d49-4931-aada-bb0d860dbbdd" class="xr-var-data-in" type="checkbox"><label for="data-d2658544-5d49-4931-aada-bb0d860dbbdd" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[4, 3, 3, ..., 3, 3, 4],
       [3, 3, 3, ..., 3, 3, 3],
       [4, 3, 3, ..., 4, 4, 4],
       [3, 3, 3, ..., 3, 3, 3]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>mean_tree_accept</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.9054 0.7214 ... 0.4055 0.07633</div><input id="attrs-d40127c2-785c-4331-8657-0c868985f75f" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-d40127c2-785c-4331-8657-0c868985f75f" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-b7a661fa-e0b2-4572-b9a2-de206ffadd24" class="xr-var-data-in" type="checkbox"><label for="data-b7a661fa-e0b2-4572-b9a2-de206ffadd24" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[0.90541692, 0.72142566, 0.93134252, ..., 0.85369685, 0.9554831 ,
        0.86302654],
       [0.99759711, 0.99963932, 0.88165678, ..., 0.96310244, 0.78523323,
        0.97673572],
       [0.99816125, 0.88683585, 0.75217549, ..., 0.96863687, 0.92512264,
        0.86677524],
       [0.40260816, 0.83998264, 0.84497975, ..., 0.76832421, 0.4055396 ,
        0.07633182]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>energy</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">356.5 384.7 373.6 ... 368.5 373.4</div><input id="attrs-9ec3f95a-eed4-4e0f-b2cd-5c0ebb311224" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-9ec3f95a-eed4-4e0f-b2cd-5c0ebb311224" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-ce679c8f-5bcc-4346-a97e-020e092cbed1" class="xr-var-data-in" type="checkbox"><label for="data-ce679c8f-5bcc-4346-a97e-020e092cbed1" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[356.54520829, 384.72052031, 373.61948961, ..., 390.95997962,
        395.89754948, 395.0117275 ],
       [410.94614041, 383.5146222 , 361.83684381, ..., 373.49242948,
        364.71453224, 360.19568382],
       [391.28602749, 376.75745726, 387.21260602, ..., 390.37738103,
        377.07691302, 389.32502442],
       [358.39179418, 363.878841  , 377.07222589, ..., 378.63812646,
        368.46859802, 373.42582631]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>lp</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-302.1 -305.8 ... -302.2 -302.2</div><input id="attrs-f7af4775-d3a2-4580-b410-e18126655d77" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-f7af4775-d3a2-4580-b410-e18126655d77" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-7d995da9-86a6-4171-bfba-f05a06daf599" class="xr-var-data-in" type="checkbox"><label for="data-7d995da9-86a6-4171-bfba-f05a06daf599" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[-302.08558028, -305.77270943, -300.43477915, ..., -320.70266421,
        -315.38015305, -311.86956419],
       [-324.9312429 , -298.99886287, -298.64220017, ..., -301.73942136,
        -301.70998423, -295.83681186],
       [-310.88193965, -301.57205804, -313.61330102, ..., -309.33294253,
        -310.28663405, -315.73379124],
       [-294.91496388, -306.34122894, -309.38563566, ..., -304.01227822,
        -302.20722956, -302.20722956]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>tree_size</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">15.0 7.0 7.0 15.0 ... 7.0 7.0 7.0</div><input id="attrs-033437a0-b774-458e-ae67-293f96a3fd2e" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-033437a0-b774-458e-ae67-293f96a3fd2e" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-33594d9e-6091-4329-9ad6-e5419aaeba39" class="xr-var-data-in" type="checkbox"><label for="data-33594d9e-6091-4329-9ad6-e5419aaeba39" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[15.,  7.,  7., ...,  7.,  7., 15.],
       [ 7.,  7.,  7., ...,  7.,  7.,  7.],
       [15.,  7.,  7., ..., 15., 15., 15.],
       [ 7.,  7.,  7., ...,  7.,  7.,  7.]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-61225f98-87b3-4c52-b314-de65bbd4850a" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-61225f98-87b3-4c52-b314-de65bbd4850a" class="xr-section-summary">Attributes: <span>(6)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T10:35:36.562793</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd><dt><span>sampling_time :</span></dt><dd>18.211029291152954</dd><dt><span>tuning_steps :</span></dt><dd>2000</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_prior4b825228-7d07-464b-89f9-5257204480be" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_prior4b825228-7d07-464b-89f9-5257204480be" class="xr-section-summary">prior</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-3b59401d-7912-43de-b06c-e980f133d4a3" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-3b59401d-7912-43de-b06c-e980f133d4a3" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 1</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">race</span>: 3</li><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-e86e605a-0a33-4312-a2f6-7e2cadba7c4e" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-e86e605a-0a33-4312-a2f6-7e2cadba7c4e" class="xr-section-summary">Coordinates: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0</div><input id="attrs-87c8c2a5-72d6-49f5-ad85-3b916f533763" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-87c8c2a5-72d6-49f5-ad85-3b916f533763" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-b0b85436-ca0a-4b06-a551-cfd511b5adcf" class="xr-var-data-in" type="checkbox"><label for="data-b0b85436-ca0a-4b06-a551-cfd511b5adcf" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-f3cc3e70-0e75-4441-9ccb-8e7c54bfe67a" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-f3cc3e70-0e75-4441-9ccb-8e7c54bfe67a" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-57d20498-73c5-4a0e-ab24-b2e18b956446" class="xr-var-data-in" type="checkbox"><label for="data-57d20498-73c5-4a0e-ab24-b2e18b956446" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">race</span></div><div class="xr-var-dims">(race)</div><div class="xr-var-dtype">&lt;U7</div><div class="xr-var-preview xr-preview">'Terran' 'Protoss' 'Zerg'</div><input id="attrs-b422d00a-f523-408a-bf3b-346d4b92e4d9" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-b422d00a-f523-408a-bf3b-346d4b92e4d9" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-4686cc0d-aef7-4520-9c5a-bf002cb309ee" class="xr-var-data-in" type="checkbox"><label for="data-4686cc0d-aef7-4520-9c5a-bf002cb309ee" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array(['Terran', 'Protoss', 'Zerg'], dtype='&lt;U7')</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-538a6a35-d4de-4b18-bdeb-66ac0133349b" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-538a6a35-d4de-4b18-bdeb-66ac0133349b" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-fb61811a-813c-4e85-8aeb-5b98a73478fc" class="xr-var-data-in" type="checkbox"><label for="data-fb61811a-813c-4e85-8aeb-5b98a73478fc" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-5a112860-1b97-49c3-94a9-2456f41f1c25" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-5a112860-1b97-49c3-94a9-2456f41f1c25" class="xr-section-summary">Data variables: <span>(3)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>μ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">4.487e+03 3.816e+03 ... 4.079e+03</div><input id="attrs-19023433-86ac-40f9-a181-bd3e0538db91" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-19023433-86ac-40f9-a181-bd3e0538db91" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-cf538678-b4c0-483a-99ad-94c77d4fc7db" class="xr-var-data-in" type="checkbox"><label for="data-cf538678-b4c0-483a-99ad-94c77d4fc7db" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[4487.3036091 , 3816.4730759 , 3841.54847432],
        [3678.10941335, 4259.6222888 , 3309.53839094],
        [4523.44352926, 3771.63792973, 4095.71172882],
        ...,
        [3793.7352304 , 3936.80991215, 3897.05804332],
        [4287.27113474, 4067.38137671, 3856.85673442],
        [3792.63645476, 3763.38063103, 4079.25539045]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>σ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">10.45 53.54 169.3 ... 210.5 146.2</div><input id="attrs-538743a0-71a8-4e57-95e0-cc3c532a342a" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-538743a0-71a8-4e57-95e0-cc3c532a342a" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-c7cc63b1-ad62-41a1-a22d-01ebc9b67112" class="xr-var-data-in" type="checkbox"><label for="data-c7cc63b1-ad62-41a1-a22d-01ebc9b67112" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[ 10.45030045,  53.53690568, 169.32540234],
        [ 23.57617238,  10.93212404,  83.18141646],
        [125.6331917 ,  94.68059879, 168.58509729],
        ...,
        [ 54.01739286, 112.35908554, 107.02562404],
        [144.26356103,  77.82838645,   9.93539497],
        [ 81.81960096, 210.54208204, 146.24259794]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>winrate</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.4452 0.4443 ... 0.4049 0.3675</div><input id="attrs-d4d5c274-aa11-4418-a763-a1de760d0d17" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-d4d5c274-aa11-4418-a763-a1de760d0d17" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-c33cfd6d-e80f-457a-a987-0bcf4142fe52" class="xr-var-data-in" type="checkbox"><label for="data-c33cfd6d-e80f-457a-a987-0bcf4142fe52" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[0.44516586, 0.44432904, 0.49543905, ..., 0.79673329,
         0.80140205, 0.28212387],
        [0.7972168 , 0.68737573, 0.21071926, ..., 0.31760374,
         0.3228919 , 0.08274033],
        [0.46947403, 0.43159697, 0.78947532, ..., 0.82439068,
         0.80940984, 0.32718542],
        ...,
        [0.74439685, 0.57396175, 0.48594935, ..., 0.37104134,
         0.37754386, 0.3333573 ],
        [0.70701564, 0.56655281, 0.54098671, ..., 0.57389202,
         0.76269576, 0.26823939],
        [0.59530994, 0.28697282, 0.72372083, ..., 0.36763267,
         0.40492739, 0.36749525]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-1ad04271-e6a9-410b-b7b6-8604f0a93aa8" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-1ad04271-e6a9-410b-b7b6-8604f0a93aa8" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T10:35:37.093692</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_prior_predictivedb6107aa-fede-4544-8f62-6d24f4ac8d50" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_prior_predictivedb6107aa-fede-4544-8f62-6d24f4ac8d50" class="xr-section-summary">prior_predictive</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-7f3c4a74-ff7a-4cb1-b67d-3bda6423ab9f" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-7f3c4a74-ff7a-4cb1-b67d-3bda6423ab9f" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 1</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-d87a25e7-02fd-44ca-951e-bacd3f449625" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-d87a25e7-02fd-44ca-951e-bacd3f449625" class="xr-section-summary">Coordinates: <span>(3)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0</div><input id="attrs-0d1308b8-bf98-4de5-ac61-e46b6831274e" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-0d1308b8-bf98-4de5-ac61-e46b6831274e" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-12466aa5-da3a-48f9-a708-ff56e8f97835" class="xr-var-data-in" type="checkbox"><label for="data-12466aa5-da3a-48f9-a708-ff56e8f97835" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-97a7c3ca-ff61-4cb6-85e5-f4cdabaa0e31" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-97a7c3ca-ff61-4cb6-85e5-f4cdabaa0e31" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-837656f0-f6af-492a-aaff-58d7b284824f" class="xr-var-data-in" type="checkbox"><label for="data-837656f0-f6af-492a-aaff-58d7b284824f" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-e293bb5b-0903-4b8e-b912-af56fa47d1d4" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-e293bb5b-0903-4b8e-b912-af56fa47d1d4" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-1546dfa6-6495-43a6-93b9-137ba6f86d57" class="xr-var-data-in" type="checkbox"><label for="data-1546dfa6-6495-43a6-93b9-137ba6f86d57" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-9829f17a-a295-4326-a412-78a9f93b6156" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-9829f17a-a295-4326-a412-78a9f93b6156" class="xr-section-summary">Data variables: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>win</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">1 1 0 0 1 1 1 0 ... 0 0 0 1 1 0 0 0</div><input id="attrs-be65abcc-91dd-40f4-a8c8-cc314e8ae386" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-be65abcc-91dd-40f4-a8c8-cc314e8ae386" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-f9d35f33-35f6-45ac-ba2b-8f83f218c5e8" class="xr-var-data-in" type="checkbox"><label for="data-f9d35f33-35f6-45ac-ba2b-8f83f218c5e8" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[1, 1, 0, ..., 1, 1, 0],
        [1, 1, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 1, 1, 0],
        ...,
        [1, 1, 0, ..., 0, 0, 0],
        [1, 1, 0, ..., 1, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-5925957a-7581-4041-9641-05bdfa2dff1d" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-5925957a-7581-4041-9641-05bdfa2dff1d" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T10:35:37.095318</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_observed_dataf78fa813-9244-478e-ba39-ed9b28b2f5f0" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_observed_dataf78fa813-9244-478e-ba39-ed9b28b2f5f0" class="xr-section-summary">observed_data</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-160a41d0-e573-4ec3-b402-ada7684c8784" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-160a41d0-e573-4ec3-b402-ada7684c8784" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-f0fdbe28-e5c4-4d7f-99a4-15e06985f7f2" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-f0fdbe28-e5c4-4d7f-99a4-15e06985f7f2" class="xr-section-summary">Coordinates: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-7750f67f-41e6-4d01-ae4f-d779dccf8328" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-7750f67f-41e6-4d01-ae4f-d779dccf8328" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-9d18dcea-41d0-4dc2-b662-e00294f980a3" class="xr-var-data-in" type="checkbox"><label for="data-9d18dcea-41d0-4dc2-b662-e00294f980a3" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-3a233cfd-2068-4748-9703-017245ea6b62" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-3a233cfd-2068-4748-9703-017245ea6b62" class="xr-section-summary">Data variables: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>win</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">1.0 0.0 0.0 1.0 ... 1.0 1.0 1.0 1.0</div><input id="attrs-f6faefeb-4a58-45e8-98ae-58be371f0c89" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-f6faefeb-4a58-45e8-98ae-58be371f0c89" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-aa56f9ae-d8ea-4c3a-8c9f-83044a6cd249" class="xr-var-data-in" type="checkbox"><label for="data-aa56f9ae-d8ea-4c3a-8c9f-83044a6cd249" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1.,
       1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0.,
       0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1.,
       0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1.,
       1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0.,
       0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0.,
       1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1.,
       0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1.,
       1., 1.])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-50b95208-f4ca-47d3-bb54-62608513bab2" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-50b95208-f4ca-47d3-bb54-62608513bab2" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T10:35:37.096098</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_constant_data840eaa82-f86b-4a4d-b22a-a6464ffaa9dc" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_constant_data840eaa82-f86b-4a4d-b22a-a6464ffaa9dc" class="xr-section-summary">constant_data</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-a3e07adb-edbf-4e2c-a6d9-0c0a7bcf7564" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-a3e07adb-edbf-4e2c-a6d9-0c0a7bcf7564" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-21bad325-5a2b-427d-bc4a-367c35acebf7" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-21bad325-5a2b-427d-bc4a-367c35acebf7" class="xr-section-summary">Coordinates: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-5e1768c1-c863-444b-a498-27d712b21974" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-5e1768c1-c863-444b-a498-27d712b21974" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-9c1862c3-50d4-4d90-89c8-51cb38fc7468" class="xr-var-data-in" type="checkbox"><label for="data-9c1862c3-50d4-4d90-89c8-51cb38fc7468" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-c5c94853-1d91-408d-a408-e6565c49050a" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-c5c94853-1d91-408d-a408-e6565c49050a" class="xr-section-summary">Data variables: <span>(2)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>enemy_race</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int32</div><div class="xr-var-preview xr-preview">1 1 2 2 1 1 2 1 ... 2 2 0 2 2 0 0 2</div><input id="attrs-3c2b20a4-224c-4087-aefc-ba64cba2a9f5" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-3c2b20a4-224c-4087-aefc-ba64cba2a9f5" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-25012ef9-aa8b-4821-ad62-63451423e08b" class="xr-var-data-in" type="checkbox"><label for="data-25012ef9-aa8b-4821-ad62-63451423e08b" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 0, 2, 2, 0, 0, 2, 0, 2,
       2, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 1, 2, 1, 1, 2, 2, 2, 1, 0,
       0, 1, 0, 2, 2, 2, 1, 0, 2, 1, 0, 2, 1, 0, 1, 1, 2, 2, 2, 2, 1, 2,
       1, 2, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 2, 2, 1,
       2, 1, 0, 2, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 0, 0, 1, 0, 2, 0, 2,
       0, 1, 0, 0, 2, 0, 0, 0, 2, 1, 0, 1, 1, 0, 2, 1, 0, 2, 0, 1, 2, 2,
       0, 2, 2, 0, 0, 2], dtype=int32)</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>enemy_mmr</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int32</div><div class="xr-var-preview xr-preview">3748 3946 3802 ... 3977 3937 4240</div><input id="attrs-da291a27-7386-4db1-bbda-d8851c33a187" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-da291a27-7386-4db1-bbda-d8851c33a187" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-4f61db60-d20a-46ae-8578-393099b82110" class="xr-var-data-in" type="checkbox"><label for="data-4f61db60-d20a-46ae-8578-393099b82110" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([3748, 3946, 3802, 3816, 3701, 3861, 3907, 4066, 3757, 4350, 3964,
       3894, 3932, 3952, 3955, 3912, 3744, 3492, 4642, 3756, 3664, 3769,
       3871, 3631, 3631, 3685, 3626, 3647, 3626, 3736, 3784, 3856, 3866,
       3847, 3883, 3761, 3686, 3827, 3771, 3752, 3803, 3922, 3888, 3900,
       3962, 3992, 3798, 3797, 3790, 3966, 3881, 3823, 3904, 3920, 3907,
       3961, 3874, 3570, 4359, 4009, 3859, 3988, 3885, 4020, 3935, 3908,
       4596, 4851, 3941, 3808, 3942, 3854, 3956, 3976, 3998, 3953, 4068,
       3960, 4016, 4055, 3925, 4104, 3989, 4001, 4237, 4161, 4024, 4108,
       4125, 4028, 4012, 3992, 4144, 4029, 4051, 4131, 4407, 4037, 3965,
       3944, 4169, 3882, 4018, 4066, 3828, 3957, 4181, 4160, 3886, 3963,
       3875, 3956, 3976, 3953, 3757, 4007, 3911, 3967, 4935, 3898, 3880,
       3927, 3948, 3833, 3894, 3782, 3786, 3845, 3863, 3966, 3864, 3843,
       3840, 4033, 3914, 3977, 3937, 4240], dtype=int32)</pre></li></ul></div></li><li class="xr-section-item"><input id="section-c6ca5fdc-6dc0-46be-a733-2413868f03aa" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-c6ca5fdc-6dc0-46be-a733-2413868f03aa" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T10:35:37.097169</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
              </ul>
            </div>
            <style> /* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
.xr-wrap{width:700px!important;} </style>
</div>
</div>
<p>That <code>InferenceData</code> ArviZ object lets us see everything the model picked up. It’s really, really neat.</p>
<p>We had a few divergences; not too many, though Let’s take a look at how the sampling went:</p>
<div id="cell-17" class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">var_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"μ σ"</span>.split()</span>
<span id="cb10-2">az.plot_trace(output, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>var_names)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-2_files/figure-html/cell-9-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-18" class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">az.summary(output, var_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var_names)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="35">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">mean</th>
<th data-quarto-table-cell-role="th">sd</th>
<th data-quarto-table-cell-role="th">hdi_3%</th>
<th data-quarto-table-cell-role="th">hdi_97%</th>
<th data-quarto-table-cell-role="th">mcse_mean</th>
<th data-quarto-table-cell-role="th">mcse_sd</th>
<th data-quarto-table-cell-role="th">ess_mean</th>
<th data-quarto-table-cell-role="th">ess_sd</th>
<th data-quarto-table-cell-role="th">ess_bulk</th>
<th data-quarto-table-cell-role="th">ess_tail</th>
<th data-quarto-table-cell-role="th">r_hat</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">μ[0]</td>
<td>4275.797</td>
<td>116.495</td>
<td>4066.919</td>
<td>4504.642</td>
<td>1.418</td>
<td>1.005</td>
<td>6750.0</td>
<td>6715.0</td>
<td>6767.0</td>
<td>4891.0</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">μ[1]</td>
<td>3625.102</td>
<td>122.610</td>
<td>3403.476</td>
<td>3865.610</td>
<td>1.407</td>
<td>0.995</td>
<td>7597.0</td>
<td>7597.0</td>
<td>7622.0</td>
<td>4916.0</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">μ[2]</td>
<td>3984.044</td>
<td>105.523</td>
<td>3785.491</td>
<td>4182.183</td>
<td>1.353</td>
<td>0.957</td>
<td>6082.0</td>
<td>6082.0</td>
<td>6082.0</td>
<td>4802.0</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">σ[0]</td>
<td>78.531</td>
<td>59.788</td>
<td>0.019</td>
<td>184.598</td>
<td>0.819</td>
<td>0.692</td>
<td>5331.0</td>
<td>3737.0</td>
<td>4413.0</td>
<td>3198.0</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">σ[1]</td>
<td>76.320</td>
<td>58.370</td>
<td>0.030</td>
<td>180.889</td>
<td>0.773</td>
<td>0.547</td>
<td>5699.0</td>
<td>5699.0</td>
<td>4607.0</td>
<td>3176.0</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">σ[2]</td>
<td>85.882</td>
<td>64.475</td>
<td>0.266</td>
<td>201.367</td>
<td>0.970</td>
<td>0.686</td>
<td>4420.0</td>
<td>4420.0</td>
<td>3717.0</td>
<td>3351.0</td>
<td>1.0</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="cell-19" class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">az.plot_pair(output, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'μ'</span>, divergences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-2_files/figure-html/cell-11-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-20" class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">az.plot_pair(output, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'σ'</span>, divergences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-2_files/figure-html/cell-12-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="slower-sampling" class="level1">
<h1>Slower sampling</h1>
<p>Once again, we have a few divergences, but they don’t seem to say anything concrete as far as I can tell. These could be false positives; we could increase <code>target_accept</code>, which is basically an inverse timestep for the simulation (shorter timesteps usually mean larger accuracy at the cost of more computational time).</p>
<div id="cell-22" class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> split_model:</span>
<span id="cb14-2">    trace <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.sample(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, tune<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, chains<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, random_seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, target_accept<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb14-3">    output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> az.from_pymc3(trace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>trace,</span>
<span id="cb14-4">                           prior<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pm.sample_prior_predictive(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span> , var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predictive_var_names, random_seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb14-5">                           posterior_predictive<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pm.sample_posterior_predictive(trace, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predictive_var_names, random_seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb14-6">                          )</span>
<span id="cb14-7">output</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Multiprocess sampling (4 chains in 2 jobs)
NUTS: [helper, σ, μ]</code></pre>
</div>
<div class="cell-output cell-output-display">

    <div>
        <style>
            /* Turns off some styling */
            progress {
                /* gets rid of default border in Firefox and Opera. */
                border: none;
                /* Needs to be in here for Safari polyfill so background images work as expected. */
                background-size: auto;
            }
            .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
                background: #F44336;
            }
        </style>
      <progress value="16000" class="" max="16000" style="width:300px; height:20px; vertical-align: middle;"></progress>
      100.00% [16000/16000 00:34&lt;00:00 Sampling 4 chains, 0 divergences]
    </div>
    
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Sampling 4 chains for 2_000 tune and 2_000 draw iterations (8_000 + 8_000 draws total) took 34 seconds.</code></pre>
</div>
<div class="cell-output cell-output-display">

    <div>
        <style>
            /* Turns off some styling */
            progress {
                /* gets rid of default border in Firefox and Opera. */
                border: none;
                /* Needs to be in here for Safari polyfill so background images work as expected. */
                background-size: auto;
            }
            .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
                background: #F44336;
            }
        </style>
      <progress value="8000" class="" max="8000" style="width:300px; height:20px; vertical-align: middle;"></progress>
      100.00% [8000/8000 00:07&lt;00:00]
    </div>
    
</div>
<div class="cell-output cell-output-display" data-execution_count="38">

            <div>
              <div class="xr-header">
                <div class="xr-obj-type">arviz.InferenceData</div>
              </div>
              <ul class="xr-sections">
              
            <li class="xr-section-item">
                  <input id="idata_posteriorf3a14953-ccd9-4ca1-9ebe-835d9a2183d9" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_posteriorf3a14953-ccd9-4ca1-9ebe-835d9a2183d9" class="xr-section-summary">posterior</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-e32c5631-dc83-4f21-8545-2dad61ee190c" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-e32c5631-dc83-4f21-8545-2dad61ee190c" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 4</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">race</span>: 3</li><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-d4e1e70d-0414-4a7e-a73b-278140f4aef4" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-d4e1e70d-0414-4a7e-a73b-278140f4aef4" class="xr-section-summary">Coordinates: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3</div><input id="attrs-cee9b193-d1df-4fed-999f-6d496fcbecaf" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-cee9b193-d1df-4fed-999f-6d496fcbecaf" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-cab1ae23-72bc-4432-a9d0-c74d210df369" class="xr-var-data-in" type="checkbox"><label for="data-cab1ae23-72bc-4432-a9d0-c74d210df369" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 2, 3])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-da87c3b2-675e-48f7-94b9-adf615f53f61" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-da87c3b2-675e-48f7-94b9-adf615f53f61" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-563c7f5b-b9de-463d-b277-3da1320c368c" class="xr-var-data-in" type="checkbox"><label for="data-563c7f5b-b9de-463d-b277-3da1320c368c" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">race</span></div><div class="xr-var-dims">(race)</div><div class="xr-var-dtype">&lt;U7</div><div class="xr-var-preview xr-preview">'Terran' 'Protoss' 'Zerg'</div><input id="attrs-1486e646-6cf5-4f86-b125-6ef75530350e" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-1486e646-6cf5-4f86-b125-6ef75530350e" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-07b36b69-a94e-4ddf-a681-b66116b5a84b" class="xr-var-data-in" type="checkbox"><label for="data-07b36b69-a94e-4ddf-a681-b66116b5a84b" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array(['Terran', 'Protoss', 'Zerg'], dtype='&lt;U7')</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-afc56a75-34d4-4ac7-a714-2b6b99d01e25" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-afc56a75-34d4-4ac7-a714-2b6b99d01e25" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-26466813-57e7-40a8-ab50-230e10eeef3c" class="xr-var-data-in" type="checkbox"><label for="data-26466813-57e7-40a8-ab50-230e10eeef3c" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-71199181-1723-4cbc-b849-46758e2d565a" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-71199181-1723-4cbc-b849-46758e2d565a" class="xr-section-summary">Data variables: <span>(6)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>μ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">4.192e+03 3.663e+03 ... 3.958e+03</div><input id="attrs-d01eb2f2-f87d-433c-8620-310b73e072e7" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-d01eb2f2-f87d-433c-8620-310b73e072e7" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-558fff03-dbb7-47e8-8014-3b0e17bf7380" class="xr-var-data-in" type="checkbox"><label for="data-558fff03-dbb7-47e8-8014-3b0e17bf7380" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[4191.82605585, 3662.56685124, 3976.78290968],
        [4257.97578329, 3613.94126582, 3981.76487183],
        [4298.83077594, 3669.01287593, 3980.01052311],
        ...,
        [4166.91919982, 3629.16545514, 3964.33087075],
        [4253.24812539, 3840.22261721, 3984.01357522],
        [4227.20217537, 3489.99729021, 3910.30300021]],

       [[4239.12879032, 3801.8761701 , 4067.56023194],
        [4217.78015886, 3898.22751246, 3973.50400805],
        [4484.11725818, 3779.99293822, 4016.31411823],
        ...,
        [4258.99732702, 3596.77273898, 4039.48381277],
        [4274.35096163, 3547.99306416, 4022.58218725],
        [4212.3466215 , 3574.92200423, 4175.91083343]],

       [[4108.92610165, 3552.9706627 , 3829.50707736],
        [4384.06283782, 3691.27109238, 4135.1039508 ],
        [4446.44987489, 3741.85060453, 4086.13686973],
        ...,
        [4335.40009373, 3731.15106938, 3962.55328323],
        [4307.456269  , 3749.69690735, 4120.08021688],
        [4190.8374136 , 3794.59313277, 4101.57910293]],

       [[4272.61598805, 3719.24049327, 4048.31502213],
        [4228.36765588, 3600.03935061, 3874.50140572],
        [4293.21198926, 3603.78459054, 3897.61309849],
        ...,
        [4389.92203176, 3410.26310882, 3951.09193896],
        [4282.64108689, 3725.26346768, 3981.54442129],
        [4266.90287295, 3532.39900759, 3958.19034856]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>helper</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-0.3586 -1.85 ... 0.02351 -1.151</div><input id="attrs-729b3556-c4e9-46d7-8e66-f749c90ac71d" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-729b3556-c4e9-46d7-8e66-f749c90ac71d" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-985335e6-5712-49d0-8471-6b2319690150" class="xr-var-data-in" type="checkbox"><label for="data-985335e6-5712-49d0-8471-6b2319690150" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[-3.58569651e-01, -1.84989802e+00,  2.29563873e-01, ...,
          9.50090310e-01,  1.56085276e+00,  8.22590552e-01],
        [ 9.06258881e-01, -5.14902909e-01, -1.04868401e-01, ...,
         -1.62571690e+00,  6.70900325e-01, -1.51883191e-01],
        [-6.40631182e-01,  6.12057059e-01,  3.17121019e-01, ...,
          1.36327897e+00, -1.11966799e+00,  1.72247767e-01],
        ...,
        [ 1.20412968e+00, -3.51638910e-01,  5.88442964e-01, ...,
          9.28011498e-02, -5.64504440e-01, -7.09598482e-01],
        [-1.96695828e+00, -6.73132651e-01,  4.44071882e-02, ...,
          3.86901656e-01,  4.41467830e-01,  3.20274641e-01],
        [ 1.42440822e+00,  6.00126327e-01, -3.94391564e-01, ...,
         -4.39375166e-01, -4.45562672e-01, -1.77496465e+00]],

       [[ 6.54007611e-01, -8.24447681e-01,  1.05125375e+00, ...,
          1.17847687e+00, -6.69548837e-01, -1.15841741e+00],
        [ 1.37685327e+00, -9.87904032e-01, -1.09741324e-02, ...,
          2.88743415e-01, -1.12658686e+00, -1.38173770e+00],
        [-3.18193693e-03,  2.41073061e-01, -1.22760501e-01, ...,
         -7.64371279e-02, -4.78951612e-01,  2.60067221e-01],
        ...,
        [-6.27546050e-01,  9.98509713e-01, -1.11550676e+00, ...,
         -2.26676217e-01, -1.38838943e-01, -9.93353582e-01],
        [ 5.13204543e-01, -1.58241396e+00, -1.08417712e-01, ...,
          4.68034271e-01,  3.76969235e-01, -4.04638391e-01],
        [-1.76788541e-01,  9.32990055e-01,  4.28135341e-05, ...,
          1.02912759e+00, -3.42634612e-02, -2.14568024e-01]],

       [[ 8.77482038e-01,  5.66063006e-01, -4.11165561e-01, ...,
          5.01402289e-01, -3.55815931e-02, -8.21029200e-01],
        [-6.08466799e-01, -1.15355056e+00,  1.68031486e+00, ...,
         -4.10245950e-01,  4.59513709e-01,  8.49965623e-01],
        [-7.64269406e-01, -1.05121556e+00,  7.99346402e-01, ...,
          1.65078612e-01,  1.01143791e+00, -1.84026189e-01],
        ...,
        [ 5.68352677e-01, -6.28746748e-01,  7.97804290e-01, ...,
         -3.36482081e-01,  1.62106906e-01, -2.15009903e+00],
        [ 1.59171993e+00, -3.55615603e-02,  2.37360931e+00, ...,
         -1.80848977e+00,  7.13096344e-01, -2.17528450e-01],
        [ 4.66494945e-01, -2.97893117e-01,  2.06685738e+00, ...,
         -9.37338897e-01,  1.00084739e+00, -3.86379260e-01]],

       [[ 1.67365693e+00,  7.21526403e-01,  1.06145479e+00, ...,
          5.28478191e-01,  1.54626828e+00, -5.33971064e-01],
        [-1.32996411e+00,  4.15343513e-01, -1.47097832e+00, ...,
         -9.36878676e-01, -1.04900111e+00,  8.36467466e-01],
        [-1.11769228e-01,  2.42671312e+00, -8.76540192e-01, ...,
         -2.52865488e-01, -1.46753688e+00, -1.76933513e-01],
        ...,
        [ 8.56890908e-02,  2.39181911e-01, -8.68460585e-01, ...,
         -2.21486333e+00, -1.43487594e-01, -5.96289347e-01],
        [ 7.22463030e-02, -1.56334275e-01,  5.66600313e-01, ...,
          2.37982042e+00,  3.10878601e-01,  1.35762265e+00],
        [-4.91907389e-02,  3.76161952e-01, -6.80508953e-01, ...,
         -1.94831032e+00,  2.35097946e-02, -1.15050624e+00]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>σ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">204.2 76.8 32.59 ... 31.32 94.91</div><input id="attrs-58188278-0e5d-462b-9f86-e05a0db17c1f" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-58188278-0e5d-462b-9f86-e05a0db17c1f" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-da59adc8-78bf-457f-ae99-489c88445ae3" class="xr-var-data-in" type="checkbox"><label for="data-da59adc8-78bf-457f-ae99-489c88445ae3" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[2.04242226e+02, 7.68008837e+01, 3.25943353e+01],
        [4.18171668e+01, 7.45761818e+01, 1.19526142e+02],
        [8.97354023e+01, 6.62820028e+01, 3.64307641e+01],
        ...,
        [1.60576390e+02, 2.31497996e+00, 2.58897070e+01],
        [1.78390681e+01, 8.50597976e+00, 1.68203140e+02],
        [7.31420294e+01, 1.27927535e+02, 4.83013062e+00]],

       [[1.09849691e+02, 2.82949807e+01, 1.37658429e+02],
        [1.87770432e+02, 3.34908584e+01, 1.10070610e+02],
        [3.44636450e+01, 2.64758758e+02, 6.32728066e+01],
        ...,
        [1.08545694e+02, 1.90329689e+02, 7.53971341e+00],
        [9.69128164e+01, 1.47267519e+02, 4.71936992e+01],
        [3.24385154e+01, 1.87935685e+02, 1.02406167e+02]],

       [[2.49993613e+02, 7.63470122e+01, 1.28194539e+02],
        [1.22753266e+02, 1.00566005e+02, 1.26635005e+01],
        [3.82276057e+01, 5.74721016e+01, 1.87588800e+01],
        ...,
        [4.63901695e+01, 1.47619023e+00, 1.38726849e+02],
        [2.26734894e+02, 5.42758590e+01, 2.25301282e+01],
        [5.77676739e+01, 1.64411686e+02, 8.20206053e+01]],

       [[5.11084577e+01, 2.58581172e+02, 6.86281538e+01],
        [1.08308154e+02, 2.44693323e-01, 1.58790827e+02],
        [1.99750479e+02, 1.51796727e+00, 9.00794021e+01],
        ...,
        [6.66429227e+01, 1.34972643e+02, 9.20364312e+01],
        [1.06224961e+02, 3.81711978e+01, 9.23637668e+01],
        [4.57938897e+01, 3.13248774e+01, 9.49120778e+01]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>MMR</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">3.635e+03 3.52e+03 ... 3.849e+03</div><input id="attrs-4ba9af54-96a9-4ee8-9d70-985630ccb4b7" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-4ba9af54-96a9-4ee8-9d70-985630ccb4b7" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-7ad52077-01c0-48dd-afb6-c92b82e959c9" class="xr-var-data-in" type="checkbox"><label for="data-7ad52077-01c0-48dd-afb6-c92b82e959c9" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[3635.02838514, 3520.49304836, 3984.26539153, ...,
         4385.87461587, 4510.6180973 , 4003.59470195],
        [3681.5265929 , 3575.54177283, 3969.2303564 , ...,
         4189.99290857, 4286.03093408, 3963.61085993],
        [3626.55055818, 3709.58124363, 3991.56348415, ...,
         4421.16516306, 4198.35691828, 3986.28564086],
        ...,
        [3631.95299122, 3628.35141811, 3979.56548664, ...,
         4181.82087345, 4076.27311465, 3945.95957399],
        [3823.49170987, 3834.49696451, 3991.48300371, ...,
         4260.15009037, 4261.12350006, 4037.88477541],
        [3672.21832284, 3566.76997226, 3908.39803744, ...,
         4195.06538405, 4194.6128173 , 3901.72968909]],

       [[3820.3813028 , 3778.54843892, 4212.27417155, ...,
         4368.58411007, 4165.57905776, 3908.09431138],
        [3944.33951023, 3865.14175844, 3972.2960786 , ...,
         4271.99763448, 4006.24045846, 3821.41529706],
        [3779.15049255, 3843.81914225, 4008.54671677, ...,
         4481.48295614, 4467.61083985, 4032.76930122],
        ...,
        [3477.33209465, 3786.8187819 , 4031.07321149, ...,
         4234.3925996 , 4243.92695754, 4031.99421144],
        [3623.57142381, 3314.95488652, 4017.46555434, ...,
         4319.70948106, 4310.88411195, 4003.48580472],
        [3541.69712857, 3750.26412962, 4175.9152178 , ...,
         4245.72999278, 4211.23516568, 4153.93774455]],

       [[3619.96379451, 3596.18788193, 3776.79789789, ...,
         4234.27347158, 4100.03093064, 3724.25561768],
        [3630.08001753, 3575.26312196, 4156.3826188 , ...,
         4333.70380745, 4440.4696466 , 4145.86749087],
        [3697.92643555, 3681.43503719, 4101.13171294, ...,
         4452.76043496, 4485.11472444, 4082.68474453],
        ...,
        [3731.99006605, 3730.22291957, 4073.23015874, ...,
         4319.79063297, 4342.92026057, 3664.27681853],
        [3836.08887366, 3747.76677311, 4173.55793881, ...,
         3897.40853377, 4469.14009285, 4115.17927302],
        [3871.290353  , 3745.61602321, 4271.10399599, ...,
         4136.6895259 , 4248.65403921, 4069.88804217]],

       [[4152.01666383, 3905.81363602, 4121.16070472, ...,
         4299.62569332, 4351.64337494, 4011.66957382],
        [3599.71391728, 3600.1409824 , 3640.92354229, ...,
         4126.8960557 , 4114.7522814 , 4007.32476636],
        [3603.61492851, 3607.46826165, 3818.6548821 , ...,
         4242.70198684, 4000.07079332, 3881.67503342],
        ...,
        [3421.82879184, 3442.54612337, 3871.1619261 , ...,
         4242.31706615, 4380.35959915, 3896.21159555],
        [3728.0211956 , 3719.29600116, 4033.87776046, ...,
         4535.43741766, 4315.66415412, 4106.93956281],
        [3530.85811372, 3544.18223464, 3893.60182986, ...,
         4177.68216515, 4267.9794779 , 3848.99341069]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>MMR_diff</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-113.0 -425.5 ... 331.0 -391.0</div><input id="attrs-afc83289-f4b1-4b8a-ae5d-9531f8ef34bf" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-afc83289-f4b1-4b8a-ae5d-9531f8ef34bf" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-419f4055-0a09-4677-89f1-b2e3e86775a3" class="xr-var-data-in" type="checkbox"><label for="data-419f4055-0a09-4677-89f1-b2e3e86775a3" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[-112.97161486, -425.50695164,  182.26539153, ...,
          408.87461587,  573.6180973 , -236.40529805],
        [ -66.4734071 , -370.45822717,  167.2303564 , ...,
          212.99290857,  349.03093408, -276.38914007],
        [-121.44944182, -236.41875637,  189.56348415, ...,
          444.16516306,  261.35691828, -253.71435914],
        ...,
        [-116.04700878, -317.64858189,  177.56548664, ...,
          204.82087345,  139.27311465, -294.04042601],
        [  75.49170987, -111.50303549,  189.48300371, ...,
          283.15009037,  324.12350006, -202.11522459],
        [ -75.78167716, -379.23002774,  106.39803744, ...,
          218.06538405,  257.6128173 , -338.27031091]],

       [[  72.3813028 , -167.45156108,  410.27417155, ...,
          391.58411007,  228.57905776, -331.90568862],
        [ 196.33951023,  -80.85824156,  170.2960786 , ...,
          294.99763448,   69.24045846, -418.58470294],
        [  31.15049255, -102.18085775,  206.54671677, ...,
          504.48295614,  530.61083985, -207.23069878],
        ...,
        [-270.66790535, -159.1812181 ,  229.07321149, ...,
          257.3925996 ,  306.92695754, -208.00578856],
        [-124.42857619, -631.04511348,  215.46555434, ...,
          342.70948106,  373.88411195, -236.51419528],
        [-206.30287143, -195.73587038,  373.9152178 , ...,
          268.72999278,  274.23516568,  -86.06225545]],

       [[-128.03620549, -349.81211807,  -25.20210211, ...,
          257.27347158,  163.03093064, -515.74438232],
        [-117.91998247, -370.73687804,  354.3826188 , ...,
          356.70380745,  503.4696466 ,  -94.13250913],
        [ -50.07356445, -264.56496281,  299.13171294, ...,
          475.76043496,  548.11472444, -157.31525547],
        ...,
        [ -16.00993395, -215.77708043,  271.23015874, ...,
          342.79063297,  405.92026057, -575.72318147],
        [  88.08887366, -198.23322689,  371.55793881, ...,
          -79.59146623,  532.14009285, -124.82072698],
        [ 123.290353  , -200.38397679,  469.10399599, ...,
          159.6895259 ,  311.65403921, -170.11195783]],

       [[ 404.01666383,  -40.18636398,  319.16070472, ...,
          322.62569332,  414.64337494, -228.33042618],
        [-148.28608272, -345.8590176 , -161.07645771, ...,
          149.8960557 ,  177.7522814 , -232.67523364],
        [-144.38507149, -338.53173835,   16.6548821 , ...,
          265.70198684,   63.07079332, -358.32496658],
        ...,
        [-326.17120816, -503.45387663,   69.1619261 , ...,
          265.31706615,  443.35959915, -343.78840445],
        [ -19.9788044 , -226.70399884,  231.87776046, ...,
          558.43741766,  378.66415412, -133.06043719],
        [-217.14188628, -401.81776536,   91.60182986, ...,
          200.68216515,  330.9794779 , -391.00658931]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>winrate</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.4266 0.2472 ... 0.7039 0.2644</div><input id="attrs-2e153011-ea06-4f8d-a251-dad800d5fda4" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-2e153011-ea06-4f8d-a251-dad800d5fda4" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-c5a3c522-4cd5-48c5-8691-5d567e104231" class="xr-var-data-in" type="checkbox"><label for="data-c5a3c522-4cd5-48c5-8691-5d567e104231" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[0.4266338 , 0.24724307, 0.61701816, ..., 0.74456852,
         0.81771078, 0.35010631],
        [0.45662615, 0.2750138 , 0.60768   , ..., 0.63583029,
         0.71366787, 0.32669033],
        [0.42121652, 0.3500983 , 0.62152047, ..., 0.7617306 ,
         0.6645996 , 0.33987251],
        ...,
        [0.42466653, 0.30340175, 0.61410799, ..., 0.63086488,
         0.59010958, 0.31661356],
        [0.54922247, 0.42757404, 0.62147094, ..., 0.67718895,
         0.70016698, 0.37078528],
        [0.4505897 , 0.2704613 , 0.56915351, ..., 0.63889797,
         0.66241233, 0.29212013]],

       [[0.54720674, 0.39218202, 0.74526436, ..., 0.73586936,
         0.64522013, 0.29557572],
        [0.62568207, 0.44730353, 0.60959075, ..., 0.68392811,
         0.54516971, 0.25062949],
        [0.52036562, 0.4335544 , 0.63191587, ..., 0.78918453,
         0.80033389, 0.36766795],
        ...,
        [0.3299917 , 0.39735231, 0.64551605, ..., 0.66228347,
         0.69063659, 0.36719657],
        [0.4193173 , 0.16095004, 0.63732707, ..., 0.71027596,
         0.72676986, 0.35004148],
        [0.36823254, 0.37468792, 0.72678602, ..., 0.66888622,
         0.67206874, 0.44393964]],

       [[0.41702061, 0.28591462, 0.48352018, ..., 0.66221375,
         0.6050573 , 0.20595485],
        [0.4234696 , 0.27486845, 0.71652076, ..., 0.71775279,
         0.78874307, 0.43873325],
        [0.46729148, 0.33353189, 0.68626179, ..., 0.77640925,
         0.8075522 , 0.39852206],
        ...,
        [0.48952874, 0.36248454, 0.67033349, ..., 0.71031966,
         0.74309555, 0.18146961],
        [0.55736901, 0.37315816, 0.72555955, ..., 0.44812312,
         0.80097255, 0.41906748],
        [0.57995735, 0.37184275, 0.77337113, ..., 0.60296614,
         0.69327302, 0.39052391]],

       [[0.74214352, 0.47373655, 0.69743382, ..., 0.69934358,
         0.74742865, 0.35492881],
        [0.40419849, 0.28803111, 0.39616541, ..., 0.59681559,
         0.61422381, 0.35233025],
        [0.40665901, 0.2919787 , 0.51089296, ..., 0.66712911,
         0.54116397, 0.28138867],
        ...,
        [0.29870941, 0.2112638 , 0.54511876, ..., 0.66690541,
         0.76134783, 0.28914344],
        [0.48693397, 0.35590376, 0.64719344, ..., 0.81171504,
         0.72924646, 0.41382809],
        [0.3616597 , 0.25895906, 0.55963552, ..., 0.62833948,
         0.70391943, 0.26442445]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-6f99f1f7-16c7-46d0-b165-2487e1ae16f4" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-6f99f1f7-16c7-46d0-b165-2487e1ae16f4" class="xr-section-summary">Attributes: <span>(6)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:25:20.065376</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd><dt><span>sampling_time :</span></dt><dd>34.35768222808838</dd><dt><span>tuning_steps :</span></dt><dd>2000</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_posterior_predictive8002f17e-661d-484a-8014-55356a842cfb" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_posterior_predictive8002f17e-661d-484a-8014-55356a842cfb" class="xr-section-summary">posterior_predictive</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-1fa3f692-a49c-42a3-bfcd-0d96fc0f3cdf" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-1fa3f692-a49c-42a3-bfcd-0d96fc0f3cdf" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 4</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">race</span>: 3</li><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-0ee040b6-167f-4d02-833c-0a1b31995b7d" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-0ee040b6-167f-4d02-833c-0a1b31995b7d" class="xr-section-summary">Coordinates: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3</div><input id="attrs-69bf070b-c4e5-4fb4-aa63-8bbddd9d004d" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-69bf070b-c4e5-4fb4-aa63-8bbddd9d004d" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-2ed26ad6-b0fa-45c1-b190-af35b19a8da4" class="xr-var-data-in" type="checkbox"><label for="data-2ed26ad6-b0fa-45c1-b190-af35b19a8da4" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 2, 3])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-fdecde24-55fb-4661-b077-c5317cd1c67f" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-fdecde24-55fb-4661-b077-c5317cd1c67f" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-db57c958-af38-4a6e-a6d0-3e11fc2f292a" class="xr-var-data-in" type="checkbox"><label for="data-db57c958-af38-4a6e-a6d0-3e11fc2f292a" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-bd9bcaf5-ed60-4a9f-bafe-6024eeb63dda" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-bd9bcaf5-ed60-4a9f-bafe-6024eeb63dda" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-a0fe6f56-6ee5-4cc6-9a2c-796df94c3338" class="xr-var-data-in" type="checkbox"><label for="data-a0fe6f56-6ee5-4cc6-9a2c-796df94c3338" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">race</span></div><div class="xr-var-dims">(race)</div><div class="xr-var-dtype">&lt;U7</div><div class="xr-var-preview xr-preview">'Terran' 'Protoss' 'Zerg'</div><input id="attrs-4058f622-eef7-4266-8a9d-9b5cf7119f79" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-4058f622-eef7-4266-8a9d-9b5cf7119f79" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-c05e55ae-329e-41ff-a581-4ff54e284775" class="xr-var-data-in" type="checkbox"><label for="data-c05e55ae-329e-41ff-a581-4ff54e284775" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array(['Terran', 'Protoss', 'Zerg'], dtype='&lt;U7')</pre></li></ul></div></li><li class="xr-section-item"><input id="section-b88c2945-4a7d-4282-9f21-73ad46f96aac" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-b88c2945-4a7d-4282-9f21-73ad46f96aac" class="xr-section-summary">Data variables: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>win</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 0 1 1 0 0 1 0 ... 1 0 1 0 0 1 1 0</div><input id="attrs-6f8caba9-78c5-4e1b-92ac-7d4a9b0949e7" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-6f8caba9-78c5-4e1b-92ac-7d4a9b0949e7" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-c4126e8f-3eeb-422b-a471-6eefef095d2c" class="xr-var-data-in" type="checkbox"><label for="data-c4126e8f-3eeb-422b-a471-6eefef095d2c" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[0, 0, 1, ..., 1, 1, 0],
        [1, 1, 1, ..., 1, 0, 1],
        [0, 0, 1, ..., 1, 0, 1],
        ...,
        [1, 0, 0, ..., 1, 1, 1],
        [0, 1, 1, ..., 1, 1, 0],
        [0, 0, 1, ..., 1, 1, 1]],

       [[0, 0, 0, ..., 1, 1, 0],
        [0, 0, 1, ..., 1, 1, 0],
        [1, 0, 1, ..., 1, 1, 0],
        ...,
        [1, 0, 1, ..., 0, 0, 1],
        [1, 0, 1, ..., 1, 1, 0],
        [1, 0, 1, ..., 0, 1, 0]],

       [[1, 1, 1, ..., 0, 0, 0],
        [1, 0, 1, ..., 1, 1, 0],
        [1, 1, 0, ..., 1, 1, 1],
        ...,
        [0, 0, 0, ..., 1, 1, 0],
        [1, 1, 1, ..., 0, 1, 0],
        [0, 1, 1, ..., 1, 1, 0]],

       [[1, 1, 1, ..., 1, 1, 0],
        [0, 0, 0, ..., 1, 0, 0],
        [1, 1, 0, ..., 1, 0, 1],
        ...,
        [0, 0, 1, ..., 0, 1, 1],
        [0, 0, 0, ..., 1, 0, 0],
        [1, 0, 0, ..., 1, 1, 0]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>μ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">4.192e+03 3.663e+03 ... 3.958e+03</div><input id="attrs-394018e2-394b-4583-a611-fda292dbe491" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-394018e2-394b-4583-a611-fda292dbe491" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-f97b566e-b69d-4dba-8840-451806923e56" class="xr-var-data-in" type="checkbox"><label for="data-f97b566e-b69d-4dba-8840-451806923e56" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[4191.82605585, 3662.56685124, 3976.78290968],
        [4257.97578329, 3613.94126582, 3981.76487183],
        [4298.83077594, 3669.01287593, 3980.01052311],
        ...,
        [4166.91919982, 3629.16545514, 3964.33087075],
        [4253.24812539, 3840.22261721, 3984.01357522],
        [4227.20217537, 3489.99729021, 3910.30300021]],

       [[4239.12879032, 3801.8761701 , 4067.56023194],
        [4217.78015886, 3898.22751246, 3973.50400805],
        [4484.11725818, 3779.99293822, 4016.31411823],
        ...,
        [4258.99732702, 3596.77273898, 4039.48381277],
        [4274.35096163, 3547.99306416, 4022.58218725],
        [4212.3466215 , 3574.92200423, 4175.91083343]],

       [[4108.92610165, 3552.9706627 , 3829.50707736],
        [4384.06283782, 3691.27109238, 4135.1039508 ],
        [4446.44987489, 3741.85060453, 4086.13686973],
        ...,
        [4335.40009373, 3731.15106938, 3962.55328323],
        [4307.456269  , 3749.69690735, 4120.08021688],
        [4190.8374136 , 3794.59313277, 4101.57910293]],

       [[4272.61598805, 3719.24049327, 4048.31502213],
        [4228.36765588, 3600.03935061, 3874.50140572],
        [4293.21198926, 3603.78459054, 3897.61309849],
        ...,
        [4389.92203176, 3410.26310882, 3951.09193896],
        [4282.64108689, 3725.26346768, 3981.54442129],
        [4266.90287295, 3532.39900759, 3958.19034856]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>σ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">204.2 76.8 32.59 ... 31.32 94.91</div><input id="attrs-25e64813-3733-4267-a5aa-50afaf694904" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-25e64813-3733-4267-a5aa-50afaf694904" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-f389f9d1-cfcb-4251-9cfb-6965ce82e6b3" class="xr-var-data-in" type="checkbox"><label for="data-f389f9d1-cfcb-4251-9cfb-6965ce82e6b3" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[2.04242226e+02, 7.68008837e+01, 3.25943353e+01],
        [4.18171668e+01, 7.45761818e+01, 1.19526142e+02],
        [8.97354023e+01, 6.62820028e+01, 3.64307641e+01],
        ...,
        [1.60576390e+02, 2.31497996e+00, 2.58897070e+01],
        [1.78390681e+01, 8.50597976e+00, 1.68203140e+02],
        [7.31420294e+01, 1.27927535e+02, 4.83013062e+00]],

       [[1.09849691e+02, 2.82949807e+01, 1.37658429e+02],
        [1.87770432e+02, 3.34908584e+01, 1.10070610e+02],
        [3.44636450e+01, 2.64758758e+02, 6.32728066e+01],
        ...,
        [1.08545694e+02, 1.90329689e+02, 7.53971341e+00],
        [9.69128164e+01, 1.47267519e+02, 4.71936992e+01],
        [3.24385154e+01, 1.87935685e+02, 1.02406167e+02]],

       [[2.49993613e+02, 7.63470122e+01, 1.28194539e+02],
        [1.22753266e+02, 1.00566005e+02, 1.26635005e+01],
        [3.82276057e+01, 5.74721016e+01, 1.87588800e+01],
        ...,
        [4.63901695e+01, 1.47619023e+00, 1.38726849e+02],
        [2.26734894e+02, 5.42758590e+01, 2.25301282e+01],
        [5.77676739e+01, 1.64411686e+02, 8.20206053e+01]],

       [[5.11084577e+01, 2.58581172e+02, 6.86281538e+01],
        [1.08308154e+02, 2.44693323e-01, 1.58790827e+02],
        [1.99750479e+02, 1.51796727e+00, 9.00794021e+01],
        ...,
        [6.66429227e+01, 1.34972643e+02, 9.20364312e+01],
        [1.06224961e+02, 3.81711978e+01, 9.23637668e+01],
        [4.57938897e+01, 3.13248774e+01, 9.49120778e+01]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>winrate</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.4266 0.2472 ... 0.7039 0.2644</div><input id="attrs-682138f8-df23-45b0-87e1-04d9ced3426c" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-682138f8-df23-45b0-87e1-04d9ced3426c" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-cae1f696-876a-48ab-b71a-c7adedee8576" class="xr-var-data-in" type="checkbox"><label for="data-cae1f696-876a-48ab-b71a-c7adedee8576" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[0.4266338 , 0.24724307, 0.61701816, ..., 0.74456852,
         0.81771078, 0.35010631],
        [0.45662615, 0.2750138 , 0.60768   , ..., 0.63583029,
         0.71366787, 0.32669033],
        [0.42121652, 0.3500983 , 0.62152047, ..., 0.7617306 ,
         0.6645996 , 0.33987251],
        ...,
        [0.42466653, 0.30340175, 0.61410799, ..., 0.63086488,
         0.59010958, 0.31661356],
        [0.54922247, 0.42757404, 0.62147094, ..., 0.67718895,
         0.70016698, 0.37078528],
        [0.4505897 , 0.2704613 , 0.56915351, ..., 0.63889797,
         0.66241233, 0.29212013]],

       [[0.54720674, 0.39218202, 0.74526436, ..., 0.73586936,
         0.64522013, 0.29557572],
        [0.62568207, 0.44730353, 0.60959075, ..., 0.68392811,
         0.54516971, 0.25062949],
        [0.52036562, 0.4335544 , 0.63191587, ..., 0.78918453,
         0.80033389, 0.36766795],
        ...,
        [0.3299917 , 0.39735231, 0.64551605, ..., 0.66228347,
         0.69063659, 0.36719657],
        [0.4193173 , 0.16095004, 0.63732707, ..., 0.71027596,
         0.72676986, 0.35004148],
        [0.36823254, 0.37468792, 0.72678602, ..., 0.66888622,
         0.67206874, 0.44393964]],

       [[0.41702061, 0.28591462, 0.48352018, ..., 0.66221375,
         0.6050573 , 0.20595485],
        [0.4234696 , 0.27486845, 0.71652076, ..., 0.71775279,
         0.78874307, 0.43873325],
        [0.46729148, 0.33353189, 0.68626179, ..., 0.77640925,
         0.8075522 , 0.39852206],
        ...,
        [0.48952874, 0.36248454, 0.67033349, ..., 0.71031966,
         0.74309555, 0.18146961],
        [0.55736901, 0.37315816, 0.72555955, ..., 0.44812312,
         0.80097255, 0.41906748],
        [0.57995735, 0.37184275, 0.77337113, ..., 0.60296614,
         0.69327302, 0.39052391]],

       [[0.74214352, 0.47373655, 0.69743382, ..., 0.69934358,
         0.74742865, 0.35492881],
        [0.40419849, 0.28803111, 0.39616541, ..., 0.59681559,
         0.61422381, 0.35233025],
        [0.40665901, 0.2919787 , 0.51089296, ..., 0.66712911,
         0.54116397, 0.28138867],
        ...,
        [0.29870941, 0.2112638 , 0.54511876, ..., 0.66690541,
         0.76134783, 0.28914344],
        [0.48693397, 0.35590376, 0.64719344, ..., 0.81171504,
         0.72924646, 0.41382809],
        [0.3616597 , 0.25895906, 0.55963552, ..., 0.62833948,
         0.70391943, 0.26442445]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-7645b295-9e71-485e-babd-87ac2c80b8e2" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-7645b295-9e71-485e-babd-87ac2c80b8e2" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:25:20.600612</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_log_likelihoodad62c503-40f4-44f9-8494-4e75a927ffbf" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_log_likelihoodad62c503-40f4-44f9-8494-4e75a927ffbf" class="xr-section-summary">log_likelihood</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-2f011521-92ef-488d-af31-22bc4834f3ee" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-2f011521-92ef-488d-af31-22bc4834f3ee" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 4</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-5c58e4b8-375b-4d4a-a94d-5d8a198d732c" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-5c58e4b8-375b-4d4a-a94d-5d8a198d732c" class="xr-section-summary">Coordinates: <span>(3)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3</div><input id="attrs-0f1ed51d-e917-431b-b751-9c61d1c92058" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-0f1ed51d-e917-431b-b751-9c61d1c92058" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-c0620d3c-d9fa-4539-b346-b3008efae1f2" class="xr-var-data-in" type="checkbox"><label for="data-c0620d3c-d9fa-4539-b346-b3008efae1f2" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 2, 3])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-546de673-16b4-4932-90f6-714074ee40ce" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-546de673-16b4-4932-90f6-714074ee40ce" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-84b1497d-c884-402c-ab05-c60522fee470" class="xr-var-data-in" type="checkbox"><label for="data-84b1497d-c884-402c-ab05-c60522fee470" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-a3f9251f-531a-440c-a519-2a81c1cc5fbd" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-a3f9251f-531a-440c-a519-2a81c1cc5fbd" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-8ef112f7-ce44-4605-b9a0-95971c5f1cb0" class="xr-var-data-in" type="checkbox"><label for="data-8ef112f7-ce44-4605-b9a0-95971c5f1cb0" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-594332b7-977f-4a7f-abb7-e75f9d342560" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-594332b7-977f-4a7f-abb7-e75f9d342560" class="xr-section-summary">Data variables: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>win</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-0.8518 -0.284 ... -0.3511 -1.33</div><input id="attrs-6e88f710-05ed-4d07-9f19-1012936f5e04" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-6e88f710-05ed-4d07-9f19-1012936f5e04" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-3cb2ea59-f604-4f3e-b552-f0f15d66f4f7" class="xr-var-data-in" type="checkbox"><label for="data-3cb2ea59-f604-4f3e-b552-f0f15d66f4f7" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[-0.85182925, -0.28401291, -0.9597677 , ..., -0.2949504 ,
         -0.20124657, -1.04951843],
        [-0.78389028, -0.32160266, -0.93567745, ..., -0.45282359,
         -0.33733759, -1.11874255],
        [-0.86460828, -0.43093415, -0.9715933 , ..., -0.27216232,
         -0.40857053, -1.07918469],
        ...,
        [-0.85645105, -0.36154643, -0.95219772, ..., -0.46066357,
         -0.52744702, -1.1500733 ],
        [-0.5992517 , -0.55787188, -0.97146243, ..., -0.38980495,
         -0.35643643, -0.99213215],
        [-0.79719812, -0.31534286, -0.84200343, ..., -0.44801051,
         -0.41186706, -1.23059016]],

       [[-0.6029286 , -0.49787982, -1.36752899, ..., -0.30670267,
         -0.43816374, -1.21883022],
        [-0.46891291, -0.59294631, -0.94055973, ..., -0.37990247,
         -0.60665814, -1.38377958],
        [-0.6532236 , -0.56837423, -0.99944377, ..., -0.23675511,
         -0.22272627, -1.00057507],
        ...,
        [-1.10868777, -0.50642252, -1.03709221, ..., -0.41206162,
         -0.37014152, -1.00185797],
        [-0.86912737, -0.17548503, -1.01425387, ..., -0.3421017 ,
         -0.31914541, -1.04970362],
        [-0.99904063, -0.46950443, -1.2975    , ..., -0.40214131,
         -0.39739466, -0.81206668]],

       [[-0.87461964, -0.33675275, -0.66071906, ..., -0.4121669 ,
         -0.50243211, -1.58009829],
        [-0.85927356, -0.32140219, -1.26061639, ..., -0.33163007,
         -0.23731465, -0.82386367],
        [-0.76080206, -0.40576299, -1.15919636, ..., -0.25307552,
         -0.21374759, -0.91999242],
        ...,
        [-0.71431211, -0.45017676, -1.10967372, ..., -0.34204019,
         -0.29693065, -1.70666705],
        [-0.58452777, -0.46706102, -1.29302097, ..., -0.80268726,
         -0.2219286 , -0.86972333],
        [-0.54480071, -0.46496474, -1.48444153, ..., -0.50589424,
         -0.36633139, -0.94026608]],

       [[-0.29821263, -0.64195333, -1.19545525, ..., -0.35761313,
         -0.29111643, -1.03583805],
        [-0.90584921, -0.33972107, -0.50445498, ..., -0.51614711,
         -0.48739591, -1.04318632],
        [-0.89978025, -0.3452811 , -0.71517392, ..., -0.40477168,
         -0.61403296, -1.26801841],
        ...,
        [-1.20828404, -0.23732337, -0.7877189 , ..., -0.40510705,
         -0.27266496, -1.2408324 ],
        [-0.71962675, -0.43990713, -1.04183536, ..., -0.20860593,
         -0.31574353, -0.88230464],
        [-1.01705156, -0.2996994 , -0.82015253, ..., -0.46467469,
         -0.35109138, -1.33019969]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-4ff87dff-8fdc-4f4a-95b0-737f71141c89" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-4ff87dff-8fdc-4f4a-95b0-737f71141c89" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:25:20.597504</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_sample_stats11d28afc-cd16-4b4c-835c-d8551040b29c" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_sample_stats11d28afc-cd16-4b4c-835c-d8551040b29c" class="xr-section-summary">sample_stats</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-8e90e9b7-917b-49db-b10d-44829eda5189" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-8e90e9b7-917b-49db-b10d-44829eda5189" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 4</li><li><span class="xr-has-index">draw</span>: 2000</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-434fcc6e-18a6-49bb-9f6a-7691e7afe3d8" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-434fcc6e-18a6-49bb-9f6a-7691e7afe3d8" class="xr-section-summary">Coordinates: <span>(2)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3</div><input id="attrs-6323e850-8689-4d87-ad5d-4716cf884a0f" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-6323e850-8689-4d87-ad5d-4716cf884a0f" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-42e5f4eb-2257-4882-8dc7-5ad86401e9f6" class="xr-var-data-in" type="checkbox"><label for="data-42e5f4eb-2257-4882-8dc7-5ad86401e9f6" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 2, 3])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-69087296-ac16-41c0-8d3e-950d9d4be214" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-69087296-ac16-41c0-8d3e-950d9d4be214" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-264990bc-e84b-4236-a4ae-d1adba8d4200" class="xr-var-data-in" type="checkbox"><label for="data-264990bc-e84b-4236-a4ae-d1adba8d4200" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-90b3d51a-ed21-4d97-a1e0-5dbfff18192b" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-90b3d51a-ed21-4d97-a1e0-5dbfff18192b" class="xr-section-summary">Data variables: <span>(10)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>step_size_bar</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.294 0.294 0.294 ... 0.2907 0.2907</div><input id="attrs-34d4882d-b304-4fd5-89e6-99be80a3d28e" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-34d4882d-b304-4fd5-89e6-99be80a3d28e" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-807756b3-6732-4618-83e3-60c5f12627ee" class="xr-var-data-in" type="checkbox"><label for="data-807756b3-6732-4618-83e3-60c5f12627ee" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[0.29398781, 0.29398781, 0.29398781, ..., 0.29398781, 0.29398781,
        0.29398781],
       [0.32832862, 0.32832862, 0.32832862, ..., 0.32832862, 0.32832862,
        0.32832862],
       [0.3100242 , 0.3100242 , 0.3100242 , ..., 0.3100242 , 0.3100242 ,
        0.3100242 ],
       [0.29071728, 0.29071728, 0.29071728, ..., 0.29071728, 0.29071728,
        0.29071728]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>energy_error</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-1.165 0.1154 ... 0.2452 -0.1032</div><input id="attrs-c4f87fa8-e100-4bbe-8c09-f7e4baf51587" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-c4f87fa8-e100-4bbe-8c09-f7e4baf51587" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-96aacead-64bd-4e99-a674-b0312fd72cb5" class="xr-var-data-in" type="checkbox"><label for="data-96aacead-64bd-4e99-a674-b0312fd72cb5" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[-1.16545649,  0.11543079,  0.05534909, ..., -0.02356721,
         0.01416864,  0.22002702],
       [-0.27486769,  0.46115983,  0.41228911, ..., -0.07802792,
         0.1259835 , -0.33367031],
       [-1.04578413,  0.16843381,  0.26006434, ..., -0.22386483,
        -0.24002094,  0.22646569],
       [-0.079549  ,  0.96347628,  0.0941145 , ...,  0.06526721,
         0.24516089, -0.10319888]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>step_size</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.2628 0.2628 ... 0.3427 0.3427</div><input id="attrs-f7d8e07e-9022-4535-b5cf-27a7e072601f" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-f7d8e07e-9022-4535-b5cf-27a7e072601f" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-74f0a554-2e8f-4a28-928c-7f8352459f57" class="xr-var-data-in" type="checkbox"><label for="data-74f0a554-2e8f-4a28-928c-7f8352459f57" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[0.26275736, 0.26275736, 0.26275736, ..., 0.26275736, 0.26275736,
        0.26275736],
       [0.32445057, 0.32445057, 0.32445057, ..., 0.32445057, 0.32445057,
        0.32445057],
       [0.33329653, 0.33329653, 0.33329653, ..., 0.33329653, 0.33329653,
        0.33329653],
       [0.34267612, 0.34267612, 0.34267612, ..., 0.34267612, 0.34267612,
        0.34267612]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>max_energy_error</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-1.165 0.2965 ... 0.5785 -0.4783</div><input id="attrs-8817bfe5-2851-4932-9e06-1fc790ae9cbe" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-8817bfe5-2851-4932-9e06-1fc790ae9cbe" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-ef0cc777-6a96-4e6b-a103-d0889f155a60" class="xr-var-data-in" type="checkbox"><label for="data-ef0cc777-6a96-4e6b-a103-d0889f155a60" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[-1.16545649,  0.2964833 , -0.21895137, ...,  0.48664513,
         0.40310784, -0.67851845],
       [ 0.67112042,  0.55722514,  0.41228911, ..., -0.28722158,
         0.20634744, -0.3871516 ],
       [ 1.49793689,  0.32854877,  0.92926063, ...,  1.32199749,
         7.60500613,  1.06863903],
       [-0.32793756,  3.07300588,  3.39102021, ...,  0.42629728,
         0.57845417, -0.47834955]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>diverging</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">bool</div><div class="xr-var-preview xr-preview">False False False ... False False</div><input id="attrs-7da43c52-2bf7-4e3d-a1d2-e482cafa9f78" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-7da43c52-2bf7-4e3d-a1d2-e482cafa9f78" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-0de99b6f-7c7b-47e6-8118-c3215a07fe25" class="xr-var-data-in" type="checkbox"><label for="data-0de99b6f-7c7b-47e6-8118-c3215a07fe25" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[False, False, False, ..., False, False, False],
       [False, False, False, ..., False, False, False],
       [False, False, False, ..., False, False, False],
       [False, False, False, ..., False, False, False]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>depth</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">4 4 4 4 4 4 4 4 ... 4 4 4 4 4 4 4 4</div><input id="attrs-c19a9e75-d7bc-4915-9754-8258c85e08a7" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-c19a9e75-d7bc-4915-9754-8258c85e08a7" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-c7d99370-ada8-44ec-8c3e-5f9359b7d723" class="xr-var-data-in" type="checkbox"><label for="data-c7d99370-ada8-44ec-8c3e-5f9359b7d723" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[4, 4, 4, ..., 4, 4, 4],
       [4, 4, 4, ..., 4, 4, 4],
       [4, 4, 4, ..., 4, 4, 4],
       [4, 4, 4, ..., 4, 4, 4]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>mean_tree_accept</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.9887 0.9228 ... 0.7224 0.9945</div><input id="attrs-db430a43-8eb8-464c-82e1-ad4d6a7df616" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-db430a43-8eb8-464c-82e1-ad4d6a7df616" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-38443ca3-58f9-4ae6-91cc-f7fcdaae1931" class="xr-var-data-in" type="checkbox"><label for="data-38443ca3-58f9-4ae6-91cc-f7fcdaae1931" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[0.9886637 , 0.92280831, 0.97142841, ..., 0.8910868 , 0.88488932,
        0.93672292],
       [0.90066886, 0.80011353, 0.90867509, ..., 0.99015461, 0.92949944,
        0.99230292],
       [0.95258493, 0.82788819, 0.61444807, ..., 0.95654644, 0.9694625 ,
        0.6588462 ],
       [0.99969745, 0.35548557, 0.94576827, ..., 0.83801927, 0.72241791,
        0.99445689]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>energy</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">372.8 372.4 379.1 ... 383.8 366.4</div><input id="attrs-d567451f-fdc6-4ec0-a96b-1f218083053d" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-d567451f-fdc6-4ec0-a96b-1f218083053d" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-f0c3f255-df21-419d-aa3e-b70e04043a2b" class="xr-var-data-in" type="checkbox"><label for="data-f0c3f255-df21-419d-aa3e-b70e04043a2b" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[372.76445605, 372.4047956 , 379.13879775, ..., 388.4625056 ,
        379.20274373, 363.47543194],
       [364.17887204, 357.96746207, 377.37892682, ..., 370.05542217,
        371.67089236, 364.45527508],
       [376.65409707, 351.05076247, 380.10629174, ..., 389.53229808,
        377.4382392 , 382.51445418],
       [390.21491721, 407.90760972, 391.36807296, ..., 382.1347993 ,
        383.81306147, 366.41006492]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>lp</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-301.0 -307.2 ... -306.8 -301.5</div><input id="attrs-f35a15f4-cde1-4e1b-add3-e157d7ce0623" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-f35a15f4-cde1-4e1b-add3-e157d7ce0623" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-c67f09e6-b6cd-4604-9a01-1dbbe8d7d3fe" class="xr-var-data-in" type="checkbox"><label for="data-c67f09e6-b6cd-4604-9a01-1dbbe8d7d3fe" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[-300.95481382, -307.18827597, -308.94357562, ..., -307.24068004,
        -299.47974489, -306.848432  ],
       [-288.68782192, -302.46946337, -313.96012231, ..., -305.47765428,
        -306.96534549, -299.15644208],
       [-292.01283788, -290.82367657, -296.9325567 , ..., -309.11026093,
        -303.66544734, -307.93238498],
       [-311.48221322, -321.23575274, -318.54558226, ..., -303.81632684,
        -306.83830943, -301.48182129]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>tree_size</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">15.0 15.0 15.0 ... 15.0 15.0 15.0</div><input id="attrs-ed8289a1-93f5-4910-b7ad-e0ce53e147a7" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-ed8289a1-93f5-4910-b7ad-e0ce53e147a7" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-8b17fe23-26f4-471b-ad05-990383007777" class="xr-var-data-in" type="checkbox"><label for="data-8b17fe23-26f4-471b-ad05-990383007777" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[15., 15., 15., ..., 15., 15., 15.],
       [15., 15., 15., ..., 15., 15., 15.],
       [15., 15., 15., ..., 15., 15., 15.],
       [15., 15., 15., ..., 15., 15., 15.]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-f2e589d1-58d4-4ee5-9638-d37e89969749" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-f2e589d1-58d4-4ee5-9638-d37e89969749" class="xr-section-summary">Attributes: <span>(6)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:25:20.072749</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd><dt><span>sampling_time :</span></dt><dd>34.35768222808838</dd><dt><span>tuning_steps :</span></dt><dd>2000</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_prior58e9a552-e9aa-4752-82ba-cb4be72ac6da" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_prior58e9a552-e9aa-4752-82ba-cb4be72ac6da" class="xr-section-summary">prior</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-8154d3cb-755b-4f57-b641-5896a8776d1e" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-8154d3cb-755b-4f57-b641-5896a8776d1e" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 1</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">race</span>: 3</li><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-b147db18-dbd5-40a8-8281-f83972f6f448" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-b147db18-dbd5-40a8-8281-f83972f6f448" class="xr-section-summary">Coordinates: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0</div><input id="attrs-99bb6d65-9d4a-4f3a-bbea-dd17d2c95f03" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-99bb6d65-9d4a-4f3a-bbea-dd17d2c95f03" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-f7941292-3d0a-42c9-8b77-bef272dff689" class="xr-var-data-in" type="checkbox"><label for="data-f7941292-3d0a-42c9-8b77-bef272dff689" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-7b6f338a-d4bd-4d4e-871f-45c82f1e6fc1" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-7b6f338a-d4bd-4d4e-871f-45c82f1e6fc1" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-950b61a4-7ed7-48c8-b950-a79512bf4e26" class="xr-var-data-in" type="checkbox"><label for="data-950b61a4-7ed7-48c8-b950-a79512bf4e26" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">race</span></div><div class="xr-var-dims">(race)</div><div class="xr-var-dtype">&lt;U7</div><div class="xr-var-preview xr-preview">'Terran' 'Protoss' 'Zerg'</div><input id="attrs-fa5265f9-3e87-4522-ab9e-099e176aacfc" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-fa5265f9-3e87-4522-ab9e-099e176aacfc" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-46dc7fe5-169f-49ac-999c-a0c6dca94eff" class="xr-var-data-in" type="checkbox"><label for="data-46dc7fe5-169f-49ac-999c-a0c6dca94eff" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array(['Terran', 'Protoss', 'Zerg'], dtype='&lt;U7')</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-3190fdf2-3695-4256-b9c8-7622a312d2e7" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-3190fdf2-3695-4256-b9c8-7622a312d2e7" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-36a73fca-32f2-4f06-91a2-78696637f164" class="xr-var-data-in" type="checkbox"><label for="data-36a73fca-32f2-4f06-91a2-78696637f164" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-d2c89bb0-8e1e-47f3-b1c3-19e79e8b3b50" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-d2c89bb0-8e1e-47f3-b1c3-19e79e8b3b50" class="xr-section-summary">Data variables: <span>(3)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>μ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">4.487e+03 3.816e+03 ... 4.079e+03</div><input id="attrs-9751c298-67f4-4c93-8acc-9d8dcd1a0c07" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-9751c298-67f4-4c93-8acc-9d8dcd1a0c07" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-7b099bfc-0e22-413d-8697-6f8b7c0c3c88" class="xr-var-data-in" type="checkbox"><label for="data-7b099bfc-0e22-413d-8697-6f8b7c0c3c88" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[4487.3036091 , 3816.4730759 , 3841.54847432],
        [3678.10941335, 4259.6222888 , 3309.53839094],
        [4523.44352926, 3771.63792973, 4095.71172882],
        ...,
        [3793.7352304 , 3936.80991215, 3897.05804332],
        [4287.27113474, 4067.38137671, 3856.85673442],
        [3792.63645476, 3763.38063103, 4079.25539045]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>σ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">10.45 53.54 169.3 ... 210.5 146.2</div><input id="attrs-5a83d688-a43a-42e1-a18a-38f78e0a2d0d" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-5a83d688-a43a-42e1-a18a-38f78e0a2d0d" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-2bea4567-b6cd-444a-8c9b-41c78070b07e" class="xr-var-data-in" type="checkbox"><label for="data-2bea4567-b6cd-444a-8c9b-41c78070b07e" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[ 10.45030045,  53.53690568, 169.32540234],
        [ 23.57617238,  10.93212404,  83.18141646],
        [125.6331917 ,  94.68059879, 168.58509729],
        ...,
        [ 54.01739286, 112.35908554, 107.02562404],
        [144.26356103,  77.82838645,   9.93539497],
        [ 81.81960096, 210.54208204, 146.24259794]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>winrate</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.4452 0.4443 ... 0.4049 0.3675</div><input id="attrs-79e8007b-52ea-409f-99f1-35fd7b649e6d" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-79e8007b-52ea-409f-99f1-35fd7b649e6d" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-d70054c3-4772-4482-9c4d-b8ca393299a1" class="xr-var-data-in" type="checkbox"><label for="data-d70054c3-4772-4482-9c4d-b8ca393299a1" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[0.44516586, 0.44432904, 0.49543905, ..., 0.79673329,
         0.80140205, 0.28212387],
        [0.7972168 , 0.68737573, 0.21071926, ..., 0.31760374,
         0.3228919 , 0.08274033],
        [0.46947403, 0.43159697, 0.78947532, ..., 0.82439068,
         0.80940984, 0.32718542],
        ...,
        [0.74439685, 0.57396175, 0.48594935, ..., 0.37104134,
         0.37754386, 0.3333573 ],
        [0.70701564, 0.56655281, 0.54098671, ..., 0.57389202,
         0.76269576, 0.26823939],
        [0.59530994, 0.28697282, 0.72372083, ..., 0.36763267,
         0.40492739, 0.36749525]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-bbf004f3-e694-43a8-b890-869e99370ab1" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-bbf004f3-e694-43a8-b890-869e99370ab1" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:25:20.604059</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_prior_predictive34529cf3-c0aa-4a66-8bc3-91d6ee078141" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_prior_predictive34529cf3-c0aa-4a66-8bc3-91d6ee078141" class="xr-section-summary">prior_predictive</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-2b93f012-7ac6-4a81-a4a1-645fe612f8d8" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-2b93f012-7ac6-4a81-a4a1-645fe612f8d8" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 1</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-af0c327c-4ebc-4b1e-8778-e18eaa48e20b" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-af0c327c-4ebc-4b1e-8778-e18eaa48e20b" class="xr-section-summary">Coordinates: <span>(3)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0</div><input id="attrs-04a059a2-c3da-417d-8aa6-2fa7358400ea" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-04a059a2-c3da-417d-8aa6-2fa7358400ea" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-6407f906-ad02-40d3-b20c-4add3dddebe5" class="xr-var-data-in" type="checkbox"><label for="data-6407f906-ad02-40d3-b20c-4add3dddebe5" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-caed2d85-0021-424d-b75a-f21703c1c5d3" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-caed2d85-0021-424d-b75a-f21703c1c5d3" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-355c3758-1459-4474-9498-3988b6a682e0" class="xr-var-data-in" type="checkbox"><label for="data-355c3758-1459-4474-9498-3988b6a682e0" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-2b6ec0c4-89b1-4e68-82f8-741ae9570241" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-2b6ec0c4-89b1-4e68-82f8-741ae9570241" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-0e389fc2-7a88-4a4e-82dd-1c1ea46c96b1" class="xr-var-data-in" type="checkbox"><label for="data-0e389fc2-7a88-4a4e-82dd-1c1ea46c96b1" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-67b0ebca-9131-4f5e-9dd1-46c9c28b5cb1" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-67b0ebca-9131-4f5e-9dd1-46c9c28b5cb1" class="xr-section-summary">Data variables: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>win</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">1 1 0 0 1 1 1 0 ... 0 0 0 1 1 0 0 0</div><input id="attrs-746a83d1-5a88-42a5-940f-85defa804b0e" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-746a83d1-5a88-42a5-940f-85defa804b0e" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-87fc671f-3d97-46c4-ac7a-56b9e0b52a45" class="xr-var-data-in" type="checkbox"><label for="data-87fc671f-3d97-46c4-ac7a-56b9e0b52a45" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[1, 1, 0, ..., 1, 1, 0],
        [1, 1, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 1, 1, 0],
        ...,
        [1, 1, 0, ..., 0, 0, 0],
        [1, 1, 0, ..., 1, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-401eb3e3-2e3e-42a4-81ae-8c1f73628f8c" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-401eb3e3-2e3e-42a4-81ae-8c1f73628f8c" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:25:20.605812</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_observed_data7b257c16-ea69-4b4b-a2f1-d4c816a8c801" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_observed_data7b257c16-ea69-4b4b-a2f1-d4c816a8c801" class="xr-section-summary">observed_data</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-c8ddcd5a-2989-4bfd-a2fd-32620b0af9be" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-c8ddcd5a-2989-4bfd-a2fd-32620b0af9be" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-ee84d13b-36f8-4604-8975-b52a7e5a4b70" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-ee84d13b-36f8-4604-8975-b52a7e5a4b70" class="xr-section-summary">Coordinates: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-34d6f545-d5d0-4d81-b529-01ea53ef530c" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-34d6f545-d5d0-4d81-b529-01ea53ef530c" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-030dcd79-e724-43e1-8755-d9b861290a1a" class="xr-var-data-in" type="checkbox"><label for="data-030dcd79-e724-43e1-8755-d9b861290a1a" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-b5b851be-fb9c-4649-b24c-3b0bd3fc8213" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-b5b851be-fb9c-4649-b24c-3b0bd3fc8213" class="xr-section-summary">Data variables: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>win</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">1.0 0.0 0.0 1.0 ... 1.0 1.0 1.0 1.0</div><input id="attrs-37ae91ab-078d-47af-a955-63258b7fded6" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-37ae91ab-078d-47af-a955-63258b7fded6" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-94348683-161a-4865-9876-c14e385081e1" class="xr-var-data-in" type="checkbox"><label for="data-94348683-161a-4865-9876-c14e385081e1" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([1., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1.,
       1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0.,
       0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1.,
       0., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 0., 0., 1.,
       1., 1., 0., 1., 1., 0., 0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0.,
       0., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0.,
       1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 1.,
       0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 0., 1., 1.,
       1., 1.])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-b7c982b4-bb3b-43cc-aacc-1b33e0afc2f2" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-b7c982b4-bb3b-43cc-aacc-1b33e0afc2f2" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:25:20.606613</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_constant_data7f6db79c-1a41-4d1f-b893-3de8150bb94b" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_constant_data7f6db79c-1a41-4d1f-b893-3de8150bb94b" class="xr-section-summary">constant_data</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-748cbfa7-e9e2-4bed-a5a5-4c89f628f12c" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-748cbfa7-e9e2-4bed-a5a5-4c89f628f12c" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">replay</span>: 138</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-9965cbb3-7341-4478-b2e1-b43e8b45c711" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-9965cbb3-7341-4478-b2e1-b43e8b45c711" class="xr-section-summary">Coordinates: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">8 325 54 346 138 ... 25 208 59 364</div><input id="attrs-47212b07-e808-430d-87cc-b9894257df23" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-47212b07-e808-430d-87cc-b9894257df23" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-065e9c1a-2abb-43de-ae9c-0d7b2edb85cb" class="xr-var-data-in" type="checkbox"><label for="data-065e9c1a-2abb-43de-ae9c-0d7b2edb85cb" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([  8, 325,  54, 346, 138, 405,  20, 129, 104,  46, 302, 408, 101, 219,
       316, 126,  98, 231, 241, 385, 193, 198,  90, 329, 137, 200,  80, 355,
       317,  33,  64, 213, 368,  49, 435, 134, 254, 330,  60,  39, 218, 109,
       301, 133, 328, 181, 156, 395,  43, 249,  27, 153, 211, 420, 366, 186,
       163,  63, 202,  45,  69,  31, 167, 177,  95, 151, 392, 387,  18, 286,
       102, 290, 195, 428, 403,  97, 406, 412, 374, 263, 371,  41, 212,  52,
       238, 345,   4, 117, 407,  56, 103, 118, 319,  57, 128, 294,  15, 273,
       327, 281, 378, 121, 113, 284, 422, 389, 216,  58, 418, 309, 123, 116,
       222, 122,  11, 361, 179, 255, 239, 225, 381, 424, 343, 287, 341, 184,
       380, 196, 174, 306, 252, 148, 416, 391,  25, 208,  59, 364])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-c36a40ef-cbb9-4bfb-9f98-f9ce188704d9" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-c36a40ef-cbb9-4bfb-9f98-f9ce188704d9" class="xr-section-summary">Data variables: <span>(2)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>enemy_race</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int32</div><div class="xr-var-preview xr-preview">1 1 2 2 1 1 2 1 ... 2 2 0 2 2 0 0 2</div><input id="attrs-1ee9d7eb-63e7-4df3-922e-e28e4d45b4de" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-1ee9d7eb-63e7-4df3-922e-e28e4d45b4de" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-8f1726fb-d066-4d8b-a2d2-2962a50faf5e" class="xr-var-data-in" type="checkbox"><label for="data-8f1726fb-d066-4d8b-a2d2-2962a50faf5e" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 0, 2, 2, 0, 0, 2, 0, 2,
       2, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 1, 2, 1, 1, 2, 2, 2, 1, 0,
       0, 1, 0, 2, 2, 2, 1, 0, 2, 1, 0, 2, 1, 0, 1, 1, 2, 2, 2, 2, 1, 2,
       1, 2, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 2, 2, 1,
       2, 1, 0, 2, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 0, 0, 1, 0, 2, 0, 2,
       0, 1, 0, 0, 2, 0, 0, 0, 2, 1, 0, 1, 1, 0, 2, 1, 0, 2, 0, 1, 2, 2,
       0, 2, 2, 0, 0, 2], dtype=int32)</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>enemy_mmr</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int32</div><div class="xr-var-preview xr-preview">3748 3946 3802 ... 3977 3937 4240</div><input id="attrs-732e5598-c56a-4019-ba55-32051d4d86d6" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-732e5598-c56a-4019-ba55-32051d4d86d6" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-597e7c28-14da-4963-8ead-556fa95ec9e0" class="xr-var-data-in" type="checkbox"><label for="data-597e7c28-14da-4963-8ead-556fa95ec9e0" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([3748, 3946, 3802, 3816, 3701, 3861, 3907, 4066, 3757, 4350, 3964,
       3894, 3932, 3952, 3955, 3912, 3744, 3492, 4642, 3756, 3664, 3769,
       3871, 3631, 3631, 3685, 3626, 3647, 3626, 3736, 3784, 3856, 3866,
       3847, 3883, 3761, 3686, 3827, 3771, 3752, 3803, 3922, 3888, 3900,
       3962, 3992, 3798, 3797, 3790, 3966, 3881, 3823, 3904, 3920, 3907,
       3961, 3874, 3570, 4359, 4009, 3859, 3988, 3885, 4020, 3935, 3908,
       4596, 4851, 3941, 3808, 3942, 3854, 3956, 3976, 3998, 3953, 4068,
       3960, 4016, 4055, 3925, 4104, 3989, 4001, 4237, 4161, 4024, 4108,
       4125, 4028, 4012, 3992, 4144, 4029, 4051, 4131, 4407, 4037, 3965,
       3944, 4169, 3882, 4018, 4066, 3828, 3957, 4181, 4160, 3886, 3963,
       3875, 3956, 3976, 3953, 3757, 4007, 3911, 3967, 4935, 3898, 3880,
       3927, 3948, 3833, 3894, 3782, 3786, 3845, 3863, 3966, 3864, 3843,
       3840, 4033, 3914, 3977, 3937, 4240], dtype=int32)</pre></li></ul></div></li><li class="xr-section-item"><input id="section-de6d6b97-7276-40e3-8fa4-c8409af41f19" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-de6d6b97-7276-40e3-8fa4-c8409af41f19" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:25:20.607687</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
              </ul>
            </div>
            <style> /* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
.xr-wrap{width:700px!important;} </style>
</div>
</div>
<p>Looks like that helped!</p>
<div id="cell-24" class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">az.plot_trace(output, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>var_names)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-2_files/figure-html/cell-14-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>We can also plot the posteriors and the Highest Density Intervals, whose value for the threshold of 94% says that our model is 94% sure my PvT average MMR is located between 4045 and 4489:</p>
<div id="cell-26" class="cell" data-execution_count="41">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">az.plot_posterior(output, var_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var_names)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-2_files/figure-html/cell-15-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>This already shows us two things:</p>
<ul>
<li>there are large differences in average MMR in the three matchups - as we had expected! This basically means I could go to TopTierPractice and use these MMR ranges to find practice partners at appropriate levels for the both of us. Interestingly, this means I should have been seeking better Terran players. (Note that this is last year’s data).</li>
<li>The versus Zerg fluctuations are a tad larger than against the other races; this would mean there are more confounding variables. Game duration could be a factor; I feel much more confident in the midgame than in the extreme lategame or against early rushes.</li>
</ul>
<p>And this is honestly something you could start applying to your own data right now. Now, what I was going to do was to also apply a <strong>hierarchical model</strong> to this data; but, since it turns out I don’t really understand them all that well just yet, and I’m running out of time for my pre-set deadling for this post, I’ll postpone that for the next week.</p>
<p>Instead, what we’ll do is take a look at the current (this year’s) data, using this exact same technique for a cheap replica of time dependence:</p>
</section>
<section id="analysis-repeated-for-2020-easy-code-snippet" class="level1">
<h1>Analysis repeated for 2020 (easy code snippet!)</h1>
<div id="cell-28" class="cell" data-execution_count="45">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_data[(all_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-01-01'</span>)]</span>
<span id="cb19-2">display(data)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">time_played_at</th>
<th data-quarto-table-cell-role="th">win</th>
<th data-quarto-table-cell-role="th">race</th>
<th data-quarto-table-cell-role="th">enemy_race</th>
<th data-quarto-table-cell-role="th">mmr</th>
<th data-quarto-table-cell-role="th">mmr_diff</th>
<th data-quarto-table-cell-role="th">enemy_nickname</th>
<th data-quarto-table-cell-role="th">map_name</th>
<th data-quarto-table-cell-role="th">duration</th>
<th data-quarto-table-cell-role="th">enemy_mmr</th>
<th data-quarto-table-cell-role="th">expected_winrate</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">265</td>
<td>2020-01-04 19:04:15+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>4009</td>
<td>-29</td>
<td>Rêgo</td>
<td>Nightshade LE</td>
<td>935</td>
<td>4038</td>
<td>0.481039</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">223</td>
<td>2020-01-04 19:07:07+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Protoss</td>
<td>4031</td>
<td>-132</td>
<td>&amp;lt;unƊeaƊ&amp;gt;&lt;sp/&gt;òMégà</td>
<td>World of Sleepers LE</td>
<td>107</td>
<td>4163</td>
<td>0.414501</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">402</td>
<td>2020-01-04 19:19:31+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Terran</td>
<td>4057</td>
<td>-32</td>
<td>Tsumi</td>
<td>Eternal Empire LE</td>
<td>714</td>
<td>4089</td>
<td>0.479080</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">206</td>
<td>2020-01-05 14:03:19+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>4036</td>
<td>-160</td>
<td>&amp;lt;Lowko&amp;gt;&lt;sp/&gt;HardNeper</td>
<td>Eternal Empire LE</td>
<td>300</td>
<td>4196</td>
<td>0.396839</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">417</td>
<td>2020-01-05 14:18:07+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>4019</td>
<td>14</td>
<td>delmak</td>
<td>Eternal Empire LE</td>
<td>867</td>
<td>4005</td>
<td>0.509157</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">1</td>
<td>2020-06-09 17:11:15+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>4186</td>
<td>39</td>
<td>djakette</td>
<td>Eternal Empire LE</td>
<td>420</td>
<td>4147</td>
<td>0.525489</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">210</td>
<td>2020-06-09 17:24:17+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Terran</td>
<td>4164</td>
<td>-68</td>
<td>StaMinA</td>
<td>Eternal Empire LE</td>
<td>758</td>
<td>4232</td>
<td>0.455635</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">188</td>
<td>2020-06-10 11:18:56+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Protoss</td>
<td>4144</td>
<td>-41</td>
<td>Guinness</td>
<td>Ice and Chrome LE</td>
<td>299</td>
<td>4185</td>
<td>0.473206</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">131</td>
<td>2020-06-10 11:27:56+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Terran</td>
<td>4125</td>
<td>125</td>
<td>Oink</td>
<td>Eternal Empire LE</td>
<td>211</td>
<td>4000</td>
<td>0.581047</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">144</td>
<td>2020-06-10 11:35:16+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Protoss</td>
<td>4100</td>
<td>-88</td>
<td>&amp;lt;UATeam&amp;gt;&lt;sp/&gt;click</td>
<td>Submarine LE</td>
<td>343</td>
<td>4188</td>
<td>0.442688</td>
</tr>
</tbody>
</table>

<p>202 rows × 11 columns</p>
</div>
</div>
</div>
<div id="cell-29" class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">brush <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> altair.selection(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'interval'</span>)</span>
<span id="cb20-2">scatter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> altair.Chart(data).mark_circle().encode(</span>
<span id="cb20-3">    altair.X(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_mmr'</span>,</span>
<span id="cb20-4">             scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Scale(zero<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)),</span>
<span id="cb20-5">    altair.Y(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr'</span>,</span>
<span id="cb20-6">             scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Scale(zero<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)),</span>
<span id="cb20-7">    facet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_race'</span>,</span>
<span id="cb20-8">    size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'expected_winrate'</span>,</span>
<span id="cb20-9">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'win'</span>,</span>
<span id="cb20-10">    tooltip<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_nickname'</span>,</span>
<span id="cb20-11">).add_selection(brush)</span>
<span id="cb20-12"></span>
<span id="cb20-13">bar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> altair.Chart(data).mark_bar().encode(</span>
<span id="cb20-14">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.X(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean(win):Q'</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Scale(domain<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))),</span>
<span id="cb20-15">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_race:O'</span>,</span>
<span id="cb20-16">).transform_filter(brush)</span>
<span id="cb20-17"></span>
<span id="cb20-18">scatter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> bar</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="46">

<div id="altair-viz-295f5fa887f249bd8923217ff868cafe"></div>
<script type="text/javascript">
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-295f5fa887f249bd8923217ff868cafe") {
      outputDiv = document.getElementById("altair-viz-295f5fa887f249bd8923217ff868cafe");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm//vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm//vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm//vega-lite@4.8.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm//vega-embed@6?noext",
    };

    function loadScript(lib) {
      return new Promise(function(resolve, reject) {
        var s = document.createElement('script');
        s.src = paths[lib];
        s.async = true;
        s.onload = () => resolve(paths[lib]);
        s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
        document.getElementsByTagName("head")[0].appendChild(s);
      });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else if (typeof vegaEmbed === "function") {
      displayChart(vegaEmbed);
    } else {
      loadScript("vega")
        .then(() => loadScript("vega-lite"))
        .then(() => loadScript("vega-embed"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 400, "continuousHeight": 300}}, "vconcat": [{"mark": "circle", "encoding": {"color": {"type": "nominal", "field": "win"}, "facet": {"type": "nominal", "field": "enemy_race"}, "size": {"type": "quantitative", "field": "expected_winrate"}, "tooltip": {"type": "nominal", "field": "enemy_nickname"}, "x": {"type": "quantitative", "field": "enemy_mmr", "scale": {"zero": false}}, "y": {"type": "quantitative", "field": "mmr", "scale": {"zero": false}}}, "selection": {"selector012": {"type": "interval"}}}, {"mark": "bar", "encoding": {"x": {"type": "quantitative", "aggregate": "mean", "field": "win", "scale": {"domain": [0, 1]}}, "y": {"type": "ordinal", "field": "enemy_race"}}, "transform": [{"filter": {"selection": "selector012"}}]}], "data": {"name": "data-cc4fea315332d20ec04a9ba90e3d7555"}, "$schema": "https://vega.github.io/schema/vega-lite/v4.8.1.json", "datasets": {"data-cc4fea315332d20ec04a9ba90e3d7555": [{"time_played_at": "2020-01-04T19:04:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4009, "mmr_diff": -29, "enemy_nickname": "R\u00eago", "map_name": "Nightshade LE", "duration": 935, "enemy_mmr": 4038, "expected_winrate": 0.4810389357983972}, {"time_played_at": "2020-01-04T19:07:07+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4031, "mmr_diff": -132, "enemy_nickname": "&lt;un\u018aea\u018a&gt;<sp/>\u00f2M\u00e9g\u00e0", "map_name": "World of Sleepers LE", "duration": 107, "enemy_mmr": 4163, "expected_winrate": 0.4145013213281905}, {"time_played_at": "2020-01-04T19:19:31+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4057, "mmr_diff": -32, "enemy_nickname": "Tsumi", "map_name": "Eternal Empire LE", "duration": 714, "enemy_mmr": 4089, "expected_winrate": 0.47907962915091085}, {"time_played_at": "2020-01-05T14:03:19+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4036, "mmr_diff": -160, "enemy_nickname": "&lt;Lowko&gt;<sp/>HardNeper", "map_name": "Eternal Empire LE", "duration": 300, "enemy_mmr": 4196, "expected_winrate": 0.3968393991220355}, {"time_played_at": "2020-01-05T14:18:07+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4019, "mmr_diff": 14, "enemy_nickname": "delmak", "map_name": "Eternal Empire LE", "duration": 867, "enemy_mmr": 4005, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2020-01-05T14:40:17+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4040, "mmr_diff": -3, "enemy_nickname": "&lt;P\u00c2R\u0142AH&gt;<sp/>SolusRex", "map_name": "Eternal Empire LE", "duration": 297, "enemy_mmr": 4043, "expected_winrate": 0.4980375795997298}, {"time_played_at": "2020-01-05T14:47:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4019, "mmr_diff": -17, "enemy_nickname": "Sanedude", "map_name": "Nightshade LE", "duration": 405, "enemy_mmr": 4036, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2020-01-05T15:02:49+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4041, "mmr_diff": -37, "enemy_nickname": "Tomstar", "map_name": "World of Sleepers LE", "duration": 293, "enemy_mmr": 4078, "expected_winrate": 0.47581557748569775}, {"time_played_at": "2020-01-05T15:09:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4021, "mmr_diff": 93, "enemy_nickname": "Majcher", "map_name": "Nightshade LE", "duration": 388, "enemy_mmr": 3928, "expected_winrate": 0.5605369146027809}, {"time_played_at": "2020-01-05T20:23:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4039, "mmr_diff": 103, "enemy_nickname": "&lt;ORRO&gt;<sp/>jul", "map_name": "Simulacrum LE", "duration": 280, "enemy_mmr": 3936, "expected_winrate": 0.5669718993599533}, {"time_played_at": "2020-01-05T20:30:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4015, "mmr_diff": 27, "enemy_nickname": "oppresticles", "map_name": "Eternal Empire LE", "duration": 405, "enemy_mmr": 3988, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2020-01-05T20:34:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3992, "mmr_diff": -22, "enemy_nickname": "&lt;iksD&gt;<sp/>OzjaszGoldbe", "map_name": "World of Sleepers LE", "duration": 110, "enemy_mmr": 4014, "expected_winrate": 0.48561281583400134}, {"time_played_at": "2020-01-05T20:39:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3972, "mmr_diff": -56, "enemy_nickname": "lIlIlIIlIlIl", "map_name": "Eternal Empire LE", "duration": 274, "enemy_mmr": 4028, "expected_winrate": 0.46343336634463533}, {"time_played_at": "2020-01-13T20:21:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3995, "mmr_diff": 80, "enemy_nickname": "&lt;TARAGO&gt;<sp/>Revenge", "map_name": "Nightshade LE", "duration": 1033, "enemy_mmr": 3915, "expected_winrate": 0.5521412274584168}, {"time_played_at": "2020-01-13T20:26:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4014, "mmr_diff": 118, "enemy_nickname": "&lt;TARAGO&gt;<sp/>Revenge", "map_name": "Eternal Empire LE", "duration": 243, "enemy_mmr": 3896, "expected_winrate": 0.5765815195249419}, {"time_played_at": "2020-01-13T20:42:12+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3989, "mmr_diff": -28, "enemy_nickname": "MadProbe", "map_name": "Ephemeron LE", "duration": 149, "enemy_mmr": 4017, "expected_winrate": 0.48169217061119546}, {"time_played_at": "2020-01-13T20:56:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3968, "mmr_diff": -32, "enemy_nickname": "SUPERsKILLER", "map_name": "Nightshade LE", "duration": 825, "enemy_mmr": 4000, "expected_winrate": 0.47907962915091085}, {"time_played_at": "2020-01-14T17:17:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3948, "mmr_diff": 12, "enemy_nickname": "TerenceSkill", "map_name": "Simulacrum LE", "duration": 1171, "enemy_mmr": 3936, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2020-01-15T16:01:40+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3969, "mmr_diff": -68, "enemy_nickname": "&lt;aW&gt;<sp/>Jeatall", "map_name": "Nightshade LE", "duration": 204, "enemy_mmr": 4037, "expected_winrate": 0.45563522259336753}, {"time_played_at": "2020-01-16T20:58:17+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3931, "mmr_diff": 86, "enemy_nickname": "Exit", "map_name": "Nightshade LE", "duration": 994, "enemy_mmr": 3845, "expected_winrate": 0.556020151303233}, {"time_played_at": "2020-01-18T19:38:03+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3950, "mmr_diff": -30, "enemy_nickname": "&lt;SWWT&gt;<sp/>Epic", "map_name": "Ephemeron LE", "duration": 719, "enemy_mmr": 3980, "expected_winrate": 0.4803857658002591}, {"time_played_at": "2020-01-19T18:04:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3969, "mmr_diff": 80, "enemy_nickname": "StifleR", "map_name": "Simulacrum LE", "duration": 480, "enemy_mmr": 3889, "expected_winrate": 0.5521412274584168}, {"time_played_at": "2020-01-19T18:19:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3989, "mmr_diff": 10, "enemy_nickname": "&lt;Dytred&gt;<sp/>EmpiRE", "map_name": "Simulacrum LE", "duration": 879, "enemy_mmr": 3979, "expected_winrate": 0.506541061734927}, {"time_played_at": "2020-01-19T18:32:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4010, "mmr_diff": 13, "enemy_nickname": "MuKK", "map_name": "Nightshade LE", "duration": 714, "enemy_mmr": 3997, "expected_winrate": 0.5085030455441815}, {"time_played_at": "2020-01-31T12:42:59+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4031, "mmr_diff": -44, "enemy_nickname": "&lt;adR&gt;<sp/>rdmZoo", "map_name": "Simulacrum LE", "duration": 454, "enemy_mmr": 4075, "expected_winrate": 0.4712494361077314}, {"time_played_at": "2020-01-31T12:54:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4011, "mmr_diff": -104, "enemy_nickname": "Stick", "map_name": "Ephemeron LE", "duration": 591, "enemy_mmr": 4115, "expected_winrate": 0.4323858060178517}, {"time_played_at": "2020-01-31T13:10:03+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3992, "mmr_diff": 64, "enemy_nickname": "&lt;GELSEN&gt;<sp/>Masaru", "map_name": "Nightshade LE", "duration": 944, "enemy_mmr": 3928, "expected_winrate": 0.5417676213094246}, {"time_played_at": "2020-02-02T17:15:06+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4012, "mmr_diff": -80, "enemy_nickname": "&lt;0mg&gt;<sp/>Sroljo", "map_name": "World of Sleepers LE", "duration": 264, "enemy_mmr": 4092, "expected_winrate": 0.4478587725415832}, {"time_played_at": "2020-02-02T17:26:32+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3992, "mmr_diff": -14, "enemy_nickname": "djakette", "map_name": "Nightshade LE", "duration": 595, "enemy_mmr": 4006, "expected_winrate": 0.49084301506895067}, {"time_played_at": "2020-02-02T17:40:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3991, "mmr_diff": -4, "enemy_nickname": "VouS", "map_name": "Simulacrum LE", "duration": 766, "enemy_mmr": 3995, "expected_winrate": 0.49738344991611666}, {"time_played_at": "2020-02-02T17:48:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3970, "mmr_diff": -64, "enemy_nickname": "valera", "map_name": "Ephemeron LE", "duration": 403, "enemy_mmr": 4034, "expected_winrate": 0.4582323786905754}, {"time_played_at": "2020-02-02T18:09:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3993, "mmr_diff": 104, "enemy_nickname": "Jetix", "map_name": "Ephemeron LE", "duration": 1178, "enemy_mmr": 3889, "expected_winrate": 0.5676141939821483}, {"time_played_at": "2020-02-05T21:02:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3989, "mmr_diff": 89, "enemy_nickname": "MorroLord", "map_name": "Nightshade LE", "duration": 216, "enemy_mmr": 3900, "expected_winrate": 0.557957085634325}, {"time_played_at": "2020-02-05T21:05:33+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3965, "mmr_diff": -46, "enemy_nickname": "Orian", "map_name": "Ephemeron LE", "duration": 131, "enemy_mmr": 4011, "expected_winrate": 0.4699456739507617}, {"time_played_at": "2020-02-06T20:48:26+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3988, "mmr_diff": 26, "enemy_nickname": "MsDragonFly", "map_name": "Nightshade LE", "duration": 640, "enemy_mmr": 3962, "expected_winrate": 0.5170011742274881}, {"time_played_at": "2020-02-06T21:02:53+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4009, "mmr_diff": 54, "enemy_nickname": "KJP", "map_name": "Nightshade LE", "duration": 853, "enemy_mmr": 3955, "expected_winrate": 0.535265097920903}, {"time_played_at": "2020-02-09T20:04:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4029, "mmr_diff": -25, "enemy_nickname": "Grandclicker", "map_name": "World of Sleepers LE", "duration": 564, "enemy_mmr": 4054, "expected_winrate": 0.48365224166479165}, {"time_played_at": "2020-02-09T20:19:03+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4004, "mmr_diff": 45, "enemy_nickname": "BlackSmith", "map_name": "Ephemeron LE", "duration": 798, "enemy_mmr": 3959, "expected_winrate": 0.5294024951224156}, {"time_played_at": "2020-02-10T19:08:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3981, "mmr_diff": 102, "enemy_nickname": "Kachu", "map_name": "Ephemeron LE", "duration": 305, "enemy_mmr": 3879, "expected_winrate": 0.566329379590959}, {"time_played_at": "2020-02-10T19:20:59+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3999, "mmr_diff": -73, "enemy_nickname": "Pablink", "map_name": "Ephemeron LE", "duration": 692, "enemy_mmr": 4072, "expected_winrate": 0.4523921838509467}, {"time_played_at": "2020-02-10T19:37:26+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4023, "mmr_diff": -9, "enemy_nickname": "&lt;biglol&gt;<sp/>bany", "map_name": "Nightshade LE", "duration": 959, "enemy_mmr": 4032, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2020-02-11T17:52:08+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4045, "mmr_diff": 59, "enemy_nickname": "ZZtopGun", "map_name": "Simulacrum LE", "duration": 441, "enemy_mmr": 3986, "expected_winrate": 0.5385179979869474}, {"time_played_at": "2020-02-11T18:03:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4064, "mmr_diff": 98, "enemy_nickname": "ZZtopGun", "map_name": "Ephemeron LE", "duration": 643, "enemy_mmr": 3966, "expected_winrate": 0.563757090736234}, {"time_played_at": "2020-02-13T18:20:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4083, "mmr_diff": 81, "enemy_nickname": "Salomoon", "map_name": "World of Sleepers LE", "duration": 590, "enemy_mmr": 4002, "expected_winrate": 0.552788168619027}, {"time_played_at": "2020-02-13T18:34:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4102, "mmr_diff": -136, "enemy_nickname": "&lt;BnetFR&gt;<sp/>NeWHoriZonS", "map_name": "Ephemeron LE", "duration": 761, "enemy_mmr": 4238, "expected_winrate": 0.411963550335502}, {"time_played_at": "2020-02-13T19:26:27+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4085, "mmr_diff": 90, "enemy_nickname": "HeroMarauder", "map_name": "Nightshade LE", "duration": 777, "enemy_mmr": 3995, "expected_winrate": 0.5586023417718881}, {"time_played_at": "2020-02-13T19:45:12+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4104, "mmr_diff": -121, "enemy_nickname": "\u041e\u0422\u041c\u041e\u0420\u041e\u0417\u041e\u041a", "map_name": "Ephemeron LE", "duration": 976, "enemy_mmr": 4225, "expected_winrate": 0.42150324765525726}, {"time_played_at": "2020-02-14T12:24:59+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4123, "mmr_diff": 25, "enemy_nickname": "Haze", "map_name": "World of Sleepers LE", "duration": 761, "enemy_mmr": 4098, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2020-02-14T12:29:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4101, "mmr_diff": -350, "enemy_nickname": "StormHead", "map_name": "Simulacrum LE", "duration": 227, "enemy_mmr": 4451, "expected_winrate": 0.2858142640872888}, {"time_played_at": "2020-02-15T12:57:31+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4083, "mmr_diff": -52, "enemy_nickname": "&lt;FxL&gt;<sp/>bojan", "map_name": "Ephemeron LE", "duration": 751, "enemy_mmr": 4135, "expected_winrate": 0.4660369182913983}, {"time_played_at": "2020-02-15T13:41:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4063, "mmr_diff": 21, "enemy_nickname": "llllllllllll", "map_name": "Nightshade LE", "duration": 1826, "enemy_mmr": 4042, "expected_winrate": 0.5137335580481893}, {"time_played_at": "2020-02-17T16:31:23+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4041, "mmr_diff": 33, "enemy_nickname": "&lt;lLiTl&gt;<sp/>Quickman", "map_name": "Simulacrum LE", "duration": 804, "enemy_mmr": 4008, "expected_winrate": 0.5215733330511455}, {"time_played_at": "2020-02-17T16:49:49+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4018, "mmr_diff": 7, "enemy_nickname": "&lt;lLiTl&gt;<sp/>Quickman", "map_name": "World of Sleepers LE", "duration": 800, "enemy_mmr": 4011, "expected_winrate": 0.5045788764382211}, {"time_played_at": "2020-02-17T17:15:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3997, "mmr_diff": -155, "enemy_nickname": "Stilgar", "map_name": "Ephemeron LE", "duration": 1410, "enemy_mmr": 4152, "expected_winrate": 0.39997507454646586}, {"time_played_at": "2020-02-18T18:41:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4019, "mmr_diff": -89, "enemy_nickname": "Canfup", "map_name": "Ephemeron LE", "duration": 671, "enemy_mmr": 4108, "expected_winrate": 0.4420429143656749}, {"time_played_at": "2020-02-18T18:56:03+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4000, "mmr_diff": -95, "enemy_nickname": "Hello", "map_name": "Ephemeron LE", "duration": 849, "enemy_mmr": 4095, "expected_winrate": 0.43817438762285926}, {"time_played_at": "2020-02-18T19:11:38+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4024, "mmr_diff": -47, "enemy_nickname": "Hello", "map_name": "Simulacrum LE", "duration": 887, "enemy_mmr": 4071, "expected_winrate": 0.46929394553496245}, {"time_played_at": "2020-02-18T19:24:22+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4047, "mmr_diff": -290, "enemy_nickname": "ajb", "map_name": "Nightshade LE", "duration": 719, "enemy_mmr": 4337, "expected_winrate": 0.3189054546669155}, {"time_played_at": "2020-02-20T20:24:49+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4067, "mmr_diff": 219, "enemy_nickname": "Badcomedian", "map_name": "Nightshade LE", "duration": 625, "enemy_mmr": 3848, "expected_winrate": 0.6394619681316271}, {"time_played_at": "2020-02-21T16:46:06+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4048, "mmr_diff": -63, "enemy_nickname": "razor", "map_name": "Ephemeron LE", "duration": 514, "enemy_mmr": 4111, "expected_winrate": 0.4588820281084352}, {"time_played_at": "2020-02-21T17:06:44+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4029, "mmr_diff": 20, "enemy_nickname": "&lt;0301&gt;<sp/>kookooseen", "map_name": "Ephemeron LE", "duration": 1072, "enemy_mmr": 4009, "expected_winrate": 0.5130798849527788}, {"time_played_at": "2020-02-21T17:20:16+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4050, "mmr_diff": -94, "enemy_nickname": "Scythe", "map_name": "Ephemeron LE", "duration": 775, "enemy_mmr": 4144, "expected_winrate": 0.4388186333591383}, {"time_played_at": "2020-02-21T19:32:38+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4071, "mmr_diff": 50, "enemy_nickname": "Sentinel", "map_name": "Simulacrum LE", "duration": 746, "enemy_mmr": 4021, "expected_winrate": 0.5326606025904235}, {"time_played_at": "2020-02-26T18:13:51+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4091, "mmr_diff": -45, "enemy_nickname": "BlackAnubis", "map_name": "World of Sleepers LE", "duration": 945, "enemy_mmr": 4136, "expected_winrate": 0.47059750487758445}, {"time_played_at": "2020-02-26T18:27:28+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4114, "mmr_diff": -99, "enemy_nickname": "&lt;BornG&gt;<sp/>LucidityDark", "map_name": "World of Sleepers LE", "duration": 770, "enemy_mmr": 4213, "expected_winrate": 0.4355995097595788}, {"time_played_at": "2020-02-27T21:17:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4139, "mmr_diff": -262, "enemy_nickname": "&lt;PlAr&gt;<sp/>Arcanewinds", "map_name": "Simulacrum LE", "duration": 559, "enemy_mmr": 4401, "expected_winrate": 0.33502542553804826}, {"time_played_at": "2020-02-28T07:06:26+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4117, "mmr_diff": -327, "enemy_nickname": "IIIIIIIIIIII", "map_name": "Ephemeron LE", "duration": 256, "enemy_mmr": 4444, "expected_winrate": 0.2982553300458027}, {"time_played_at": "2020-02-29T15:07:01+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4100, "mmr_diff": -367, "enemy_nickname": "&lt;HBeS&gt;<sp/>LoziRa", "map_name": "Ephemeron LE", "duration": 446, "enemy_mmr": 4467, "expected_winrate": 0.27682160785890525}, {"time_played_at": "2020-02-29T15:22:31+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4083, "mmr_diff": 23, "enemy_nickname": "StepO", "map_name": "Ephemeron LE", "duration": 838, "enemy_mmr": 4060, "expected_winrate": 0.5150407610740062}, {"time_played_at": "2020-02-29T15:40:54+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4104, "mmr_diff": -89, "enemy_nickname": "Othello", "map_name": "Nightshade LE", "duration": 635, "enemy_mmr": 4193, "expected_winrate": 0.4420429143656749}, {"time_played_at": "2020-02-29T15:49:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4085, "mmr_diff": -90, "enemy_nickname": "&lt;Irri&gt;<sp/>Irrichi", "map_name": "Ephemeron LE", "duration": 400, "enemy_mmr": 4175, "expected_winrate": 0.44139765822811194}, {"time_played_at": "2020-03-01T20:09:47+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4066, "mmr_diff": 67, "enemy_nickname": "FckVwls", "map_name": "Simulacrum LE", "duration": 1137, "enemy_mmr": 3999, "expected_winrate": 0.5437157089668173}, {"time_played_at": "2020-03-02T09:38:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4086, "mmr_diff": 82, "enemy_nickname": "Piliskner", "map_name": "Simulacrum LE", "duration": 945, "enemy_mmr": 4004, "expected_winrate": 0.5534349310880278}, {"time_played_at": "2020-03-02T09:52:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4105, "mmr_diff": -180, "enemy_nickname": "IIIIIIIIIIII", "map_name": "Nightshade LE", "duration": 786, "enemy_mmr": 4285, "expected_winrate": 0.3843835326815888}, {"time_played_at": "2020-03-02T10:06:27+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4088, "mmr_diff": 69, "enemy_nickname": "TGNP", "map_name": "Simulacrum LE", "duration": 696, "enemy_mmr": 4019, "expected_winrate": 0.5450136951714643}, {"time_played_at": "2020-03-02T13:26:04+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4106, "mmr_diff": -84, "enemy_nickname": "WizZy", "map_name": "Simulacrum LE", "duration": 390, "enemy_mmr": 4190, "expected_winrate": 0.4452720886026404}, {"time_played_at": "2020-03-02T13:45:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4130, "mmr_diff": -36, "enemy_nickname": "WizZy", "map_name": "Simulacrum LE", "duration": 1177, "enemy_mmr": 4166, "expected_winrate": 0.47646823150757606}, {"time_played_at": "2020-03-04T17:23:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4153, "mmr_diff": -30, "enemy_nickname": "MothMonkey", "map_name": "Nightshade LE", "duration": 385, "enemy_mmr": 4183, "expected_winrate": 0.4803857658002591}, {"time_played_at": "2020-03-04T17:39:40+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4132, "mmr_diff": 56, "enemy_nickname": "Leaf", "map_name": "Simulacrum LE", "duration": 923, "enemy_mmr": 4076, "expected_winrate": 0.5365666336553646}, {"time_played_at": "2020-03-04T17:52:41+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4109, "mmr_diff": -133, "enemy_nickname": "helloRJ", "map_name": "Ephemeron LE", "duration": 751, "enemy_mmr": 4242, "expected_winrate": 0.4138664474466713}, {"time_played_at": "2020-03-05T21:18:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4091, "mmr_diff": 74, "enemy_nickname": "Cyborg", "map_name": "Ephemeron LE", "duration": 782, "enemy_mmr": 4017, "expected_winrate": 0.5482559480584295}, {"time_played_at": "2020-03-09T11:03:30+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4050, "mmr_diff": -178, "enemy_nickname": "Noldo", "map_name": "Nightshade LE", "duration": 225, "enemy_mmr": 4228, "expected_winrate": 0.3856226141648234}, {"time_played_at": "2020-03-09T11:22:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4033, "mmr_diff": 32, "enemy_nickname": "Vorp", "map_name": "World of Sleepers LE", "duration": 1084, "enemy_mmr": 4001, "expected_winrate": 0.520920370849089}, {"time_played_at": "2020-03-10T19:22:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4053, "mmr_diff": -46, "enemy_nickname": "&lt;FaDr&gt;<sp/>BURNIE", "map_name": "Ephemeron LE", "duration": 372, "enemy_mmr": 4099, "expected_winrate": 0.4699456739507617}, {"time_played_at": "2020-03-10T19:40:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4032, "mmr_diff": -18, "enemy_nickname": "Drakezul", "map_name": "Simulacrum LE", "duration": 1077, "enemy_mmr": 4050, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2020-03-11T20:53:48+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4054, "mmr_diff": 81, "enemy_nickname": "StaryPijany", "map_name": "Simulacrum LE", "duration": 531, "enemy_mmr": 3973, "expected_winrate": 0.552788168619027}, {"time_played_at": "2020-03-12T18:55:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4030, "mmr_diff": -7, "enemy_nickname": "ORIGYN", "map_name": "Golden Wall LE", "duration": 477, "enemy_mmr": 4037, "expected_winrate": 0.4954211235617789}, {"time_played_at": "2020-03-12T19:06:49+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4009, "mmr_diff": 104, "enemy_nickname": "Salomoon", "map_name": "Ever Dream LE", "duration": 594, "enemy_mmr": 3905, "expected_winrate": 0.5676141939821483}, {"time_played_at": "2020-03-13T07:52:51+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3984, "mmr_diff": -256, "enemy_nickname": "&lt;Dobro&gt;<sp/>KINE", "map_name": "Ever Dream LE", "duration": 936, "enemy_mmr": 4240, "expected_winrate": 0.3385320109141423}, {"time_played_at": "2020-03-14T15:13:34+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3970, "mmr_diff": -95, "enemy_nickname": "adrianjakuba", "map_name": "Ever Dream LE", "duration": 276, "enemy_mmr": 4065, "expected_winrate": 0.43817438762285926}, {"time_played_at": "2020-03-14T15:18:34+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3993, "mmr_diff": 18, "enemy_nickname": "ODISEO", "map_name": "Simulacrum LE", "duration": 220, "enemy_mmr": 3975, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2020-03-14T15:34:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4014, "mmr_diff": 95, "enemy_nickname": "&lt;SCTR&gt;<sp/>LimeTime", "map_name": "Zen LE", "duration": 785, "enemy_mmr": 3919, "expected_winrate": 0.5618256123771407}, {"time_played_at": "2020-03-14T16:18:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4033, "mmr_diff": -58, "enemy_nickname": "&lt;PLA2N&gt;<sp/>ZloyVakarian", "map_name": "Nightshade LE", "duration": 374, "enemy_mmr": 4091, "expected_winrate": 0.4621323286338574}, {"time_played_at": "2020-03-14T16:31:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4013, "mmr_diff": -80, "enemy_nickname": "hellyeah", "map_name": "Purity and Industry LE", "duration": 746, "enemy_mmr": 4093, "expected_winrate": 0.4478587725415832}, {"time_played_at": "2020-03-14T20:10:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3994, "mmr_diff": -51, "enemy_nickname": "&lt;GROF&gt;<sp/>Shefarin", "map_name": "Simulacrum LE", "duration": 923, "enemy_mmr": 4045, "expected_winrate": 0.4666881010864951}, {"time_played_at": "2020-03-14T20:23:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4017, "mmr_diff": -28, "enemy_nickname": "Ben", "map_name": "Purity and Industry LE", "duration": 734, "enemy_mmr": 4045, "expected_winrate": 0.48169217061119546}, {"time_played_at": "2020-03-18T12:33:17+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4040, "mmr_diff": -61, "enemy_nickname": "ManeWicht", "map_name": "Nightshade LE", "duration": 131, "enemy_mmr": 4101, "expected_winrate": 0.4601817441768105}, {"time_played_at": "2020-03-18T12:41:44+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4020, "mmr_diff": 45, "enemy_nickname": "Apollo", "map_name": "Zen LE", "duration": 459, "enemy_mmr": 3975, "expected_winrate": 0.5294024951224156}, {"time_played_at": "2020-03-18T12:57:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4040, "mmr_diff": -149, "enemy_nickname": "&lt;noIMBA&gt;<sp/>Facehugger", "map_name": "Golden Wall LE", "duration": 865, "enemy_mmr": 4189, "expected_winrate": 0.40374871115781824}, {"time_played_at": "2020-03-22T11:58:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4066, "mmr_diff": 19, "enemy_nickname": "&lt;Hasu&gt;<sp/>RunGen", "map_name": "Ever Dream LE", "duration": 935, "enemy_mmr": 4047, "expected_winrate": 0.5124261671126104}, {"time_played_at": "2020-03-22T12:03:13+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4044, "mmr_diff": 41, "enemy_nickname": "OOOOOOOOOOOO", "map_name": "Nightshade LE", "duration": 232, "enemy_mmr": 4003, "expected_winrate": 0.5267941904791901}, {"time_played_at": "2020-03-29T20:40:34+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4022, "mmr_diff": -18, "enemy_nickname": "&lt;SCBoys&gt;<sp/>CiRkuS", "map_name": "Nightshade LE", "duration": 867, "enemy_mmr": 4040, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2020-03-30T15:48:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4001, "mmr_diff": 4, "enemy_nickname": "Bee", "map_name": "Simulacrum LE", "duration": 616, "enemy_mmr": 3997, "expected_winrate": 0.5026165500838834}, {"time_played_at": "2020-03-31T12:27:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3979, "mmr_diff": -31, "enemy_nickname": "&lt;lLiTl&gt;<sp/>Rud", "map_name": "Golden Wall LE", "duration": 1051, "enemy_mmr": 4010, "expected_winrate": 0.479732662842747}, {"time_played_at": "2020-04-01T06:54:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4000, "mmr_diff": -23, "enemy_nickname": "&lt;TRSO&gt;<sp/>THERIPPER", "map_name": "Simulacrum LE", "duration": 950, "enemy_mmr": 4023, "expected_winrate": 0.4849592389259938}, {"time_played_at": "2020-04-15T14:28:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4022, "mmr_diff": 18, "enemy_nickname": "MrBeck", "map_name": "Purity and Industry LE", "duration": 574, "enemy_mmr": 4004, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2020-04-15T14:50:51+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4043, "mmr_diff": 104, "enemy_nickname": "Anrik", "map_name": "Ever Dream LE", "duration": 447, "enemy_mmr": 3939, "expected_winrate": 0.5676141939821483}, {"time_played_at": "2020-04-15T15:03:08+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4018, "mmr_diff": -135, "enemy_nickname": "Tomus", "map_name": "Simulacrum LE", "duration": 603, "enemy_mmr": 4153, "expected_winrate": 0.41259755997469955}, {"time_played_at": "2020-04-17T19:15:54+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4001, "mmr_diff": 39, "enemy_nickname": "Vanquish", "map_name": "Simulacrum LE", "duration": 346, "enemy_mmr": 3962, "expected_winrate": 0.5254894805551138}, {"time_played_at": "2020-04-17T19:31:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4021, "mmr_diff": -9, "enemy_nickname": "Boban", "map_name": "Simulacrum LE", "duration": 882, "enemy_mmr": 4030, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2020-04-17T20:10:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4062, "mmr_diff": 12, "enemy_nickname": "Etharis", "map_name": "Purity and Industry LE", "duration": 792, "enemy_mmr": 4050, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2020-04-17T20:20:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4040, "mmr_diff": -40, "enemy_nickname": "&lt;Peeps&gt;<sp/>ReNoVation", "map_name": "Simulacrum LE", "duration": 443, "enemy_mmr": 4080, "expected_winrate": 0.47385811986038295}, {"time_played_at": "2020-04-17T20:26:10+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4062, "mmr_diff": -31, "enemy_nickname": "&lt;HBGS&gt;<sp/>ShoWTimE", "map_name": "Golden Wall LE", "duration": 297, "enemy_mmr": 4093, "expected_winrate": 0.479732662842747}, {"time_played_at": "2020-04-18T20:05:07+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4042, "mmr_diff": -29, "enemy_nickname": "MouseGGAXE", "map_name": "Purity and Industry LE", "duration": 421, "enemy_mmr": 4071, "expected_winrate": 0.4810389357983972}, {"time_played_at": "2020-04-18T20:18:26+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4021, "mmr_diff": 8, "enemy_nickname": "&lt;HsDL&gt;<sp/>Domius", "map_name": "Zen LE", "duration": 749, "enemy_mmr": 4013, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2020-04-18T20:30:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4042, "mmr_diff": -104, "enemy_nickname": "Alyaska", "map_name": "Simulacrum LE", "duration": 651, "enemy_mmr": 4146, "expected_winrate": 0.4323858060178517}, {"time_played_at": "2020-04-18T20:45:46+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4022, "mmr_diff": -87, "enemy_nickname": "&lt;RBP3&gt;<sp/>Steal", "map_name": "Purity and Industry LE", "duration": 794, "enemy_mmr": 4109, "expected_winrate": 0.44333401172275544}, {"time_played_at": "2020-04-20T11:40:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4047, "mmr_diff": 28, "enemy_nickname": "Kilkenny", "map_name": "Nightshade LE", "duration": 788, "enemy_mmr": 4019, "expected_winrate": 0.5183078293888046}, {"time_played_at": "2020-04-21T19:29:13+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4067, "mmr_diff": 18, "enemy_nickname": "BsCMBANerd", "map_name": "Zen LE", "duration": 131, "enemy_mmr": 4049, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2020-04-22T20:24:41+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4045, "mmr_diff": 47, "enemy_nickname": "puLse", "map_name": "Golden Wall LE", "duration": 534, "enemy_mmr": 3998, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2020-04-22T20:30:29+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4022, "mmr_diff": 1, "enemy_nickname": "puLse", "map_name": "Golden Wall LE", "duration": 305, "enemy_mmr": 4021, "expected_winrate": 0.5006541431191143}, {"time_played_at": "2020-04-22T20:45:38+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4001, "mmr_diff": 42, "enemy_nickname": "mSin", "map_name": "Simulacrum LE", "duration": 704, "enemy_mmr": 3959, "expected_winrate": 0.5274464093596006}, {"time_played_at": "2020-04-24T18:14:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4021, "mmr_diff": 36, "enemy_nickname": "Spider", "map_name": "Simulacrum LE", "duration": 369, "enemy_mmr": 3985, "expected_winrate": 0.5235317684924239}, {"time_played_at": "2020-04-24T18:18:47+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3999, "mmr_diff": 9, "enemy_nickname": "Spider", "map_name": "Golden Wall LE", "duration": 218, "enemy_mmr": 3990, "expected_winrate": 0.5058870193731037}, {"time_played_at": "2020-04-27T11:04:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3977, "mmr_diff": -25, "enemy_nickname": "Mitchowyn", "map_name": "Purity and Industry LE", "duration": 369, "enemy_mmr": 4002, "expected_winrate": 0.48365224166479165}, {"time_played_at": "2020-04-27T11:06:38+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3956, "mmr_diff": -77, "enemy_nickname": "Etharis", "map_name": "Golden Wall LE", "duration": 22, "enemy_mmr": 4033, "expected_winrate": 0.449800646746463}, {"time_played_at": "2020-04-27T11:15:08+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3980, "mmr_diff": 97, "enemy_nickname": "DupaDuupa", "map_name": "Zen LE", "duration": 455, "enemy_mmr": 3883, "expected_winrate": 0.5631134765259213}, {"time_played_at": "2020-04-27T11:29:31+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3955, "mmr_diff": -168, "enemy_nickname": "&lt;BARJO&gt;<sp/>JDH", "map_name": "Simulacrum LE", "duration": 843, "enemy_mmr": 4123, "expected_winrate": 0.39183999647141454}, {"time_played_at": "2020-04-27T11:42:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3975, "mmr_diff": -224, "enemy_nickname": "&lt;NetGG&gt;<sp/>vladozerg", "map_name": "Nightshade LE", "duration": 695, "enemy_mmr": 4199, "expected_winrate": 0.35752730772110347}, {"time_played_at": "2020-04-27T12:02:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 108, "enemy_nickname": "Schmaunzer", "map_name": "Nightshade LE", "duration": 611, "enemy_mmr": 3851, "expected_winrate": 0.5701810794636865}, {"time_played_at": "2020-04-27T12:24:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3935, "mmr_diff": 46, "enemy_nickname": "Ise", "map_name": "Nightshade LE", "duration": 1218, "enemy_mmr": 3889, "expected_winrate": 0.5300543260492383}, {"time_played_at": "2020-04-28T12:16:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3912, "mmr_diff": -133, "enemy_nickname": "DupaDuupa", "map_name": "Simulacrum LE", "duration": 728, "enemy_mmr": 4045, "expected_winrate": 0.4138664474466713}, {"time_played_at": "2020-04-28T12:40:14+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3872, "mmr_diff": -1163, "enemy_nickname": "&lt;Mkers&gt;<sp/>Doc", "map_name": "Ever Dream LE", "duration": 1376, "enemy_mmr": 5035, "expected_winrate": 0.045517365974079564}, {"time_played_at": "2020-04-28T13:05:12+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3895, "mmr_diff": 39, "enemy_nickname": "AndrU", "map_name": "Nightshade LE", "duration": 845, "enemy_mmr": 3856, "expected_winrate": 0.5254894805551138}, {"time_played_at": "2020-04-30T10:56:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3915, "mmr_diff": -9, "enemy_nickname": "&lt;RIIP&gt;<sp/>Airea", "map_name": "Purity and Industry LE", "duration": 534, "enemy_mmr": 3924, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2020-04-30T11:20:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3937, "mmr_diff": 35, "enemy_nickname": "&lt;RIIP&gt;<sp/>Airea", "map_name": "Purity and Industry LE", "duration": 1381, "enemy_mmr": 3902, "expected_winrate": 0.5228790340944155}, {"time_played_at": "2020-04-30T11:33:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3957, "mmr_diff": -131, "enemy_nickname": "KillemAll", "map_name": "Nightshade LE", "duration": 725, "enemy_mmr": 4088, "expected_winrate": 0.41513647933297476}, {"time_played_at": "2020-04-30T18:14:21+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3983, "mmr_diff": 62, "enemy_nickname": "FrosT", "map_name": "Purity and Industry LE", "duration": 233, "enemy_mmr": 3921, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2020-04-30T18:34:01+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3964, "mmr_diff": -91, "enemy_nickname": "&lt;BRs&gt;<sp/>GoodFellas", "map_name": "Nightshade LE", "duration": 1040, "enemy_mmr": 4055, "expected_winrate": 0.44075259994384575}, {"time_played_at": "2020-05-01T11:39:32+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3988, "mmr_diff": 36, "enemy_nickname": "Samaya", "map_name": "Ever Dream LE", "duration": 307, "enemy_mmr": 3952, "expected_winrate": 0.5235317684924239}, {"time_played_at": "2020-05-01T11:59:09+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3965, "mmr_diff": -62, "enemy_nickname": "fireballkid", "map_name": "Zen LE", "duration": 958, "enemy_mmr": 4027, "expected_winrate": 0.45953181733049886}, {"time_played_at": "2020-05-01T12:12:21+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3945, "mmr_diff": 40, "enemy_nickname": "xyzxyzxyz", "map_name": "Simulacrum LE", "duration": 754, "enemy_mmr": 3905, "expected_winrate": 0.5261418801396169}, {"time_played_at": "2020-05-01T12:37:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3923, "mmr_diff": 153, "enemy_nickname": "&lt;HsDL&gt;<sp/>Zero", "map_name": "Ever Dream LE", "duration": 805, "enemy_mmr": 3770, "expected_winrate": 0.5987683411538888}, {"time_played_at": "2020-05-01T12:42:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3944, "mmr_diff": 4, "enemy_nickname": "Cptred", "map_name": "Golden Wall LE", "duration": 278, "enemy_mmr": 3940, "expected_winrate": 0.5026165500838834}, {"time_played_at": "2020-05-01T12:54:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3965, "mmr_diff": 66, "enemy_nickname": "Cptred", "map_name": "Nightshade LE", "duration": 415, "enemy_mmr": 3899, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2020-05-01T13:09:10+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3942, "mmr_diff": -140, "enemy_nickname": "&lt;IBeA\u015aI&gt;<sp/>Epiku", "map_name": "Ever Dream LE", "duration": 711, "enemy_mmr": 4082, "expected_winrate": 0.40943045167820846}, {"time_played_at": "2020-05-02T14:40:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3968, "mmr_diff": 47, "enemy_nickname": "&lt;IndyK&gt;<sp/>Wawszyn", "map_name": "Golden Wall LE", "duration": 401, "enemy_mmr": 3921, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2020-05-02T14:53:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3945, "mmr_diff": 14, "enemy_nickname": "&lt;EZPTS&gt;<sp/>talisman", "map_name": "Nightshade LE", "duration": 792, "enemy_mmr": 3931, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2020-05-02T19:06:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3966, "mmr_diff": 7, "enemy_nickname": "Pokimon", "map_name": "Ever Dream LE", "duration": 647, "enemy_mmr": 3959, "expected_winrate": 0.5045788764382211}, {"time_played_at": "2020-05-02T19:20:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3944, "mmr_diff": -54, "enemy_nickname": "mozgj", "map_name": "Zen LE", "duration": 823, "enemy_mmr": 3998, "expected_winrate": 0.4647349020790969}, {"time_played_at": "2020-05-03T20:09:30+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3966, "mmr_diff": 78, "enemy_nickname": "RomaNo", "map_name": "Purity and Industry LE", "duration": 270, "enemy_mmr": 3888, "expected_winrate": 0.550846817630644}, {"time_played_at": "2020-05-03T20:33:12+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3942, "mmr_diff": -97, "enemy_nickname": "&lt;FSeS&gt;<sp/>Wizzl\u00f4", "map_name": "Golden Wall LE", "duration": 1369, "enemy_mmr": 4039, "expected_winrate": 0.43688652347407875}, {"time_played_at": "2020-05-03T20:43:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3966, "mmr_diff": -22, "enemy_nickname": "Mich", "map_name": "Purity and Industry LE", "duration": 500, "enemy_mmr": 3988, "expected_winrate": 0.48561281583400134}, {"time_played_at": "2020-05-03T20:53:32+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3946, "mmr_diff": -79, "enemy_nickname": "Epicnoob", "map_name": "Simulacrum LE", "duration": 535, "enemy_mmr": 4025, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2020-05-04T12:43:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3926, "mmr_diff": 95, "enemy_nickname": "StaMinA", "map_name": "Golden Wall LE", "duration": 784, "enemy_mmr": 3831, "expected_winrate": 0.5618256123771407}, {"time_played_at": "2020-05-04T12:58:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3945, "mmr_diff": -7, "enemy_nickname": "Doghum", "map_name": "Ever Dream LE", "duration": 869, "enemy_mmr": 3952, "expected_winrate": 0.4954211235617789}, {"time_played_at": "2020-05-04T13:02:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3967, "mmr_diff": 22, "enemy_nickname": "Piiras", "map_name": "Simulacrum LE", "duration": 199, "enemy_mmr": 3945, "expected_winrate": 0.5143871841659987}, {"time_played_at": "2020-05-05T17:32:14+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3988, "mmr_diff": 119, "enemy_nickname": "&lt;VKT&gt;<sp/>R\u00f8rtangen", "map_name": "Simulacrum LE", "duration": 620, "enemy_mmr": 3869, "expected_winrate": 0.5772201891779002}, {"time_played_at": "2020-05-05T17:44:27+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4005, "mmr_diff": 24, "enemy_nickname": "&lt;\u01aeesXG&gt;<sp/>Rymdkrigaren", "map_name": "Simulacrum LE", "duration": 696, "enemy_mmr": 3981, "expected_winrate": 0.5156942865406842}, {"time_played_at": "2020-05-05T18:00:50+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4026, "mmr_diff": 193, "enemy_nickname": "helldenn", "map_name": "Purity and Industry LE", "duration": 873, "enemy_mmr": 3833, "expected_winrate": 0.6236333410254552}, {"time_played_at": "2020-05-07T09:30:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4042, "mmr_diff": 34, "enemy_nickname": "&lt;BRSKR&gt;<sp/>Hexe", "map_name": "Golden Wall LE", "duration": 985, "enemy_mmr": 4008, "expected_winrate": 0.5222262215402946}, {"time_played_at": "2020-05-07T09:42:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4062, "mmr_diff": -57, "enemy_nickname": "Yeezus", "map_name": "Zen LE", "duration": 665, "enemy_mmr": 4119, "expected_winrate": 0.4627827841407167}, {"time_played_at": "2020-05-07T10:13:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4086, "mmr_diff": 14, "enemy_nickname": "Yeezus", "map_name": "Golden Wall LE", "duration": 1595, "enemy_mmr": 4072, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2020-05-08T11:14:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4107, "mmr_diff": 60, "enemy_nickname": "&lt;tXs&gt;<sp/>TheBloke", "map_name": "Zen LE", "duration": 992, "enemy_mmr": 4047, "expected_winrate": 0.5391681935344519}, {"time_played_at": "2020-05-08T11:34:03+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4127, "mmr_diff": 109, "enemy_nickname": "Ergopro", "map_name": "Nightshade LE", "duration": 1157, "enemy_mmr": 4018, "expected_winrate": 0.5708222172241983}, {"time_played_at": "2020-05-10T18:56:45+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4145, "mmr_diff": -282, "enemy_nickname": "T\u00f6rtt\u00f6", "map_name": "Simulacrum LE", "duration": 1009, "enemy_mmr": 4427, "expected_winrate": 0.3234692470348148}, {"time_played_at": "2020-05-10T19:12:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4131, "mmr_diff": 26, "enemy_nickname": "&lt;2G1M&gt;<sp/>Mime", "map_name": "Ever Dream LE", "duration": 834, "enemy_mmr": 4105, "expected_winrate": 0.5170011742274881}, {"time_played_at": "2020-05-10T19:29:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4109, "mmr_diff": -18, "enemy_nickname": "&lt;2G1M&gt;<sp/>Mime", "map_name": "Zen LE", "duration": 999, "enemy_mmr": 4127, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2020-05-11T09:23:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4088, "mmr_diff": -137, "enemy_nickname": "DonkeyMonkey", "map_name": "Zen LE", "duration": 605, "enemy_mmr": 4225, "expected_winrate": 0.4113298327220324}, {"time_played_at": "2020-05-11T09:35:55+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4070, "mmr_diff": -72, "enemy_nickname": "Elosai", "map_name": "Zen LE", "duration": 696, "enemy_mmr": 4142, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2020-05-11T09:41:36+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4051, "mmr_diff": 107, "enemy_nickname": "ElBarto", "map_name": "Simulacrum LE", "duration": 216, "enemy_mmr": 3944, "expected_winrate": 0.5695397061906963}, {"time_played_at": "2020-05-12T17:37:31+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4026, "mmr_diff": -14, "enemy_nickname": "Tiger", "map_name": "Ever Dream LE", "duration": 433, "enemy_mmr": 4040, "expected_winrate": 0.49084301506895067}, {"time_played_at": "2020-05-12T17:59:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4005, "mmr_diff": -11, "enemy_nickname": "BuRneR", "map_name": "Nightshade LE", "duration": 1260, "enemy_mmr": 4016, "expected_winrate": 0.49280491829094863}, {"time_played_at": "2020-05-12T18:11:01+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4027, "mmr_diff": -99, "enemy_nickname": "\u041b\u043e\u0445", "map_name": "Simulacrum LE", "duration": 545, "enemy_mmr": 4126, "expected_winrate": 0.4355995097595788}, {"time_played_at": "2020-05-15T20:56:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4006, "mmr_diff": 46, "enemy_nickname": "TerenceSkill", "map_name": "Ever Dream LE", "duration": 745, "enemy_mmr": 3960, "expected_winrate": 0.5300543260492383}, {"time_played_at": "2020-05-26T09:13:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4026, "mmr_diff": 45, "enemy_nickname": "Marvin", "map_name": "Zen LE", "duration": 421, "enemy_mmr": 3981, "expected_winrate": 0.5294024951224156}, {"time_played_at": "2020-05-26T09:34:07+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4046, "mmr_diff": 6, "enemy_nickname": "kerokero", "map_name": "Zen LE", "duration": 1136, "enemy_mmr": 4040, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2020-05-26T09:46:32+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4024, "mmr_diff": -50, "enemy_nickname": "MKPrime", "map_name": "Zen LE", "duration": 646, "enemy_mmr": 4074, "expected_winrate": 0.4673393974095765}, {"time_played_at": "2020-05-27T10:12:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4004, "mmr_diff": -89, "enemy_nickname": "MasterZERG", "map_name": "Nightshade LE", "duration": 578, "enemy_mmr": 4093, "expected_winrate": 0.4420429143656749}, {"time_played_at": "2020-05-27T10:21:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3985, "mmr_diff": 98, "enemy_nickname": "Froze", "map_name": "Ever Dream LE", "duration": 461, "enemy_mmr": 3887, "expected_winrate": 0.563757090736234}, {"time_played_at": "2020-05-27T10:32:29+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4004, "mmr_diff": -169, "enemy_nickname": "giletjaune", "map_name": "Nightshade LE", "duration": 601, "enemy_mmr": 4173, "expected_winrate": 0.3912166399665741}, {"time_played_at": "2020-05-27T10:56:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4030, "mmr_diff": -73, "enemy_nickname": "CleanSweep", "map_name": "Simulacrum LE", "duration": 719, "enemy_mmr": 4103, "expected_winrate": 0.4523921838509467}, {"time_played_at": "2020-05-29T12:17:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4054, "mmr_diff": 125, "enemy_nickname": "&lt;SeoYN&gt;<sp/>General", "map_name": "Ever Dream LE", "duration": 2385, "enemy_mmr": 3929, "expected_winrate": 0.5810467174657031}, {"time_played_at": "2020-05-29T17:58:42+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4072, "mmr_diff": 32, "enemy_nickname": "Sclera", "map_name": "Eternal Empire LE", "duration": 1724, "enemy_mmr": 4040, "expected_winrate": 0.520920370849089}, {"time_played_at": "2020-05-29T18:27:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4093, "mmr_diff": 12, "enemy_nickname": "&lt;Hasu&gt;<sp/>RunGen", "map_name": "Ever Dream LE", "duration": 1582, "enemy_mmr": 4081, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2020-05-30T20:50:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4071, "mmr_diff": 122, "enemy_nickname": "Hellfighter", "map_name": "Golden Wall LE", "duration": 718, "enemy_mmr": 3949, "expected_winrate": 0.579134641806555}, {"time_played_at": "2020-05-30T21:10:17+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4089, "mmr_diff": -34, "enemy_nickname": "Onkelelak", "map_name": "Eternal Empire LE", "duration": 996, "enemy_mmr": 4123, "expected_winrate": 0.47777377845970537}, {"time_played_at": "2020-06-01T11:40:30+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4112, "mmr_diff": -141, "enemy_nickname": "Minoda", "map_name": "Eternal Empire LE", "duration": 570, "enemy_mmr": 4253, "expected_winrate": 0.4087979217905979}, {"time_played_at": "2020-06-01T11:53:17+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4094, "mmr_diff": -129, "enemy_nickname": "iga", "map_name": "Nightshade LE", "duration": 687, "enemy_mmr": 4223, "expected_winrate": 0.4164076397687468}, {"time_played_at": "2020-06-02T18:39:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4076, "mmr_diff": 17, "enemy_nickname": "IIIIIIIII", "map_name": "Ever Dream LE", "duration": 722, "enemy_mmr": 4059, "expected_winrate": 0.5111186061324027}, {"time_played_at": "2020-06-02T18:56:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4097, "mmr_diff": 69, "enemy_nickname": "&lt;IndyK&gt;<sp/>Wawszyn", "map_name": "Eternal Empire LE", "duration": 874, "enemy_mmr": 4028, "expected_winrate": 0.5450136951714643}, {"time_played_at": "2020-06-03T17:53:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4117, "mmr_diff": 171, "enemy_nickname": "&lt;DisES&gt;<sp/>Kamenashi", "map_name": "Nightshade LE", "duration": 471, "enemy_mmr": 3946, "expected_winrate": 0.6100290069264851}, {"time_played_at": "2020-06-03T18:04:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4156, "mmr_diff": -88, "enemy_nickname": "Liverpool", "map_name": "Simulacrum LE", "duration": 529, "enemy_mmr": 4244, "expected_winrate": 0.44268836623770724}, {"time_played_at": "2020-06-03T18:34:39+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4180, "mmr_diff": -124, "enemy_nickname": "feetlover", "map_name": "Ever Dream LE", "duration": 763, "enemy_mmr": 4304, "expected_winrate": 0.41959037361733365}, {"time_played_at": "2020-06-04T19:03:54+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4203, "mmr_diff": 21, "enemy_nickname": "JOOPSTAR", "map_name": "Simulacrum LE", "duration": 332, "enemy_mmr": 4182, "expected_winrate": 0.5137335580481893}, {"time_played_at": "2020-06-04T19:18:46+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4181, "mmr_diff": -189, "enemy_nickname": "&lt;AiR\u01c2&gt;<sp/>SuperNova", "map_name": "Nightshade LE", "duration": 846, "enemy_mmr": 4370, "expected_winrate": 0.37882641391385774}, {"time_played_at": "2020-06-09T17:03:47+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4208, "mmr_diff": 14, "enemy_nickname": "Ziiim", "map_name": "Eternal Empire LE", "duration": 360, "enemy_mmr": 4194, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2020-06-09T17:11:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4186, "mmr_diff": 39, "enemy_nickname": "djakette", "map_name": "Eternal Empire LE", "duration": 420, "enemy_mmr": 4147, "expected_winrate": 0.5254894805551138}, {"time_played_at": "2020-06-09T17:24:17+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4164, "mmr_diff": -68, "enemy_nickname": "StaMinA", "map_name": "Eternal Empire LE", "duration": 758, "enemy_mmr": 4232, "expected_winrate": 0.45563522259336753}, {"time_played_at": "2020-06-10T11:18:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4144, "mmr_diff": -41, "enemy_nickname": "Guinness", "map_name": "Ice and Chrome LE", "duration": 299, "enemy_mmr": 4185, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2020-06-10T11:27:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4125, "mmr_diff": 125, "enemy_nickname": "Oink", "map_name": "Eternal Empire LE", "duration": 211, "enemy_mmr": 4000, "expected_winrate": 0.5810467174657031}, {"time_played_at": "2020-06-10T11:35:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4100, "mmr_diff": -88, "enemy_nickname": "&lt;UATeam&gt;<sp/>click", "map_name": "Submarine LE", "duration": 343, "enemy_mmr": 4188, "expected_winrate": 0.44268836623770724}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<div id="cell-30" class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pymc3 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pm</span>
<span id="cb21-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arviz <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> az</span>
<span id="cb21-3"></span>
<span id="cb21-4">coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb21-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"replay"</span>: data.index,</span>
<span id="cb21-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"race"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Terran"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Protoss"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Zerg"</span>],</span>
<span id="cb21-7">}</span>
<span id="cb21-8">race_encoding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Terran"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb21-9">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Protoss"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb21-10">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Zerg"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>} </span>
<span id="cb21-11"></span>
<span id="cb21-12"></span>
<span id="cb21-13">predictive_var_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"win μ σ winrate"</span>.split()</span>
<span id="cb21-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pm.Model(coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>coords) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> split_model:</span>
<span id="cb21-15">    mmr_μ_matchup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Normal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'μ'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'race'</span>)</span>
<span id="cb21-16">    mmr_σ_matchup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.HalfNormal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'σ'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'race'</span>)</span>
<span id="cb21-17">    mmr_σ_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Normal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'helper'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span>
<span id="cb21-18">    </span>
<span id="cb21-19">    enemy_races <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Data(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enemy_race"</span>, data.enemy_race.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(race_encoding).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>), dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span>
<span id="cb21-20">    mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Deterministic(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MMR'</span>, mmr_μ_matchup[enemy_races] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> mmr_σ_matchup[enemy_races] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> mmr_σ_norm, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span>
<span id="cb21-21">    </span>
<span id="cb21-22">    enemy_mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Data(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enemy_mmr"</span>, data.enemy_mmr, dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span>
<span id="cb21-23">    diffs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Deterministic(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MMR_diff'</span>, mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> enemy_mmr, dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span>
<span id="cb21-24">    p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Deterministic(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'winrate'</span>, MMR_winrate(diffs), dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span>
<span id="cb21-25">    wl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Bernoulli(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'win'</span>, p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>p, observed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data.win, dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'replay'</span>)</span>
<span id="cb21-26">    </span>
<span id="cb21-27">    trace <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.sample(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, tune<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, chains<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, random_seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, target_accept<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb21-28">    output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> az.from_pymc3(trace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>trace,</span>
<span id="cb21-29">                           prior<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pm.sample_prior_predictive(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span> , var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predictive_var_names, random_seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb21-30">                           posterior_predictive<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pm.sample_posterior_predictive(trace, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predictive_var_names, random_seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb21-31">                          )</span>
<span id="cb21-32">output</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Multiprocess sampling (4 chains in 2 jobs)
NUTS: [helper, σ, μ]</code></pre>
</div>
<div class="cell-output cell-output-display">

    <div>
        <style>
            /* Turns off some styling */
            progress {
                /* gets rid of default border in Firefox and Opera. */
                border: none;
                /* Needs to be in here for Safari polyfill so background images work as expected. */
                background-size: auto;
            }
            .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
                background: #F44336;
            }
        </style>
      <progress value="16000" class="" max="16000" style="width:300px; height:20px; vertical-align: middle;"></progress>
      100.00% [16000/16000 00:25&lt;00:00 Sampling 4 chains, 0 divergences]
    </div>
    
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Sampling 4 chains for 2_000 tune and 2_000 draw iterations (8_000 + 8_000 draws total) took 26 seconds.</code></pre>
</div>
<div class="cell-output cell-output-display">

    <div>
        <style>
            /* Turns off some styling */
            progress {
                /* gets rid of default border in Firefox and Opera. */
                border: none;
                /* Needs to be in here for Safari polyfill so background images work as expected. */
                background-size: auto;
            }
            .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
                background: #F44336;
            }
        </style>
      <progress value="8000" class="" max="8000" style="width:300px; height:20px; vertical-align: middle;"></progress>
      100.00% [8000/8000 00:08&lt;00:00]
    </div>
    
</div>
<div class="cell-output cell-output-display" data-execution_count="47">

            <div>
              <div class="xr-header">
                <div class="xr-obj-type">arviz.InferenceData</div>
              </div>
              <ul class="xr-sections">
              
            <li class="xr-section-item">
                  <input id="idata_posteriorc6a74a68-35c9-47be-8f54-3547f83d2b47" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_posteriorc6a74a68-35c9-47be-8f54-3547f83d2b47" class="xr-section-summary">posterior</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-5b3c55eb-3628-4ea0-a28b-e725cf0347c9" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-5b3c55eb-3628-4ea0-a28b-e725cf0347c9" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 4</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">race</span>: 3</li><li><span class="xr-has-index">replay</span>: 202</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-6ed06482-b618-4b54-a2d4-a90923760c08" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-6ed06482-b618-4b54-a2d4-a90923760c08" class="xr-section-summary">Coordinates: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3</div><input id="attrs-98c93a15-afd4-42a2-9e67-582c4b320ab2" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-98c93a15-afd4-42a2-9e67-582c4b320ab2" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-174d4afe-b13d-4204-8753-433c86367ea4" class="xr-var-data-in" type="checkbox"><label for="data-174d4afe-b13d-4204-8753-433c86367ea4" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 2, 3])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-87de4ac6-1d31-4d59-a761-00f43ea05ebb" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-87de4ac6-1d31-4d59-a761-00f43ea05ebb" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-f4a45ebc-04d8-473f-b8f9-f43a7ac2b506" class="xr-var-data-in" type="checkbox"><label for="data-f4a45ebc-04d8-473f-b8f9-f43a7ac2b506" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">race</span></div><div class="xr-var-dims">(race)</div><div class="xr-var-dtype">&lt;U7</div><div class="xr-var-preview xr-preview">'Terran' 'Protoss' 'Zerg'</div><input id="attrs-5a8130e9-9b66-427b-9d7b-bad0c5b6d8ac" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-5a8130e9-9b66-427b-9d7b-bad0c5b6d8ac" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-c362338c-28b3-4b90-9536-36fc60e3b1e6" class="xr-var-data-in" type="checkbox"><label for="data-c362338c-28b3-4b90-9536-36fc60e3b1e6" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array(['Terran', 'Protoss', 'Zerg'], dtype='&lt;U7')</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">265 223 402 206 ... 210 188 131 144</div><input id="attrs-5868aa48-21ca-4df2-a10c-e206f7e2e427" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-5868aa48-21ca-4df2-a10c-e206f7e2e427" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-b6a8f6d8-b0d1-45b3-abbd-c39b2092d53a" class="xr-var-data-in" type="checkbox"><label for="data-b6a8f6d8-b0d1-45b3-abbd-c39b2092d53a" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([265, 223, 402, ..., 188, 131, 144])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-ca294e97-fb26-45f7-bbd2-8df3b902cb1b" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-ca294e97-fb26-45f7-bbd2-8df3b902cb1b" class="xr-section-summary">Data variables: <span>(6)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>μ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">4.211e+03 4.108e+03 ... 3.992e+03</div><input id="attrs-4d6b0e86-91b6-4880-b2ef-ba153252f286" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-4d6b0e86-91b6-4880-b2ef-ba153252f286" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-79ecdcd6-e351-46a6-b296-4fff5e771885" class="xr-var-data-in" type="checkbox"><label for="data-79ecdcd6-e351-46a6-b296-4fff5e771885" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[4210.85745791, 4108.13402572, 4047.68655821],
        [4187.82039211, 4167.02974265, 3832.39048778],
        [4385.10730355, 4051.15698963, 3888.3543684 ],
        ...,
        [4268.67850837, 4004.06007755, 3935.24654733],
        [4182.61327252, 3852.96115761, 4013.25955458],
        [4058.95730755, 3860.61071343, 4048.4206048 ]],

       [[4331.22003251, 3887.80946609, 3896.23173387],
        [4106.02686452, 4063.88927972, 3995.75729977],
        [4196.19055581, 3907.28257413, 3817.30936413],
        ...,
        [4158.82110597, 3994.77797297, 3948.94402472],
        [4130.32958212, 4024.45281323, 3864.17620077],
        [4255.71656811, 4121.39660228, 4067.50723152]],

       [[4264.33592228, 4119.64071496, 3900.73678858],
        [4290.27572226, 4138.58898858, 3923.24665912],
        [4057.54009725, 3929.51218737, 3995.78802404],
        ...,
        [4271.91923915, 4208.66941361, 3925.91501886],
        [4170.24764659, 4004.86306088, 3916.82405953],
        [4146.33857085, 4069.27579897, 3925.21194574]],

       [[4391.8074459 , 3973.03474104, 4062.09104669],
        [3980.12121482, 4056.28919035, 3860.08003276],
        [4365.43547727, 4060.16002941, 3927.51863056],
        ...,
        [4344.05048768, 3950.01257309, 3857.26550133],
        [3986.12083546, 4073.15663108, 4093.19655361],
        [4133.45346107, 4052.34439539, 3991.74262184]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>helper</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.8451 -0.2949 ... -0.3081 0.4416</div><input id="attrs-3917a8b0-8e64-44ad-a122-1bafe0237c66" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-3917a8b0-8e64-44ad-a122-1bafe0237c66" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-1f6c42b2-540b-49ef-8d0d-32fe55f1de65" class="xr-var-data-in" type="checkbox"><label for="data-1f6c42b2-540b-49ef-8d0d-32fe55f1de65" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[ 0.84509895, -0.29485376,  0.8011897 , ...,  1.33714031,
         -1.80845999, -0.51358847],
        [-1.40481271,  1.07728824, -1.1490509 , ..., -0.41919933,
          1.34160767, -0.04753472],
        [-1.44831415, -0.00634847, -0.67124799, ..., -1.08190966,
         -0.64604433, -0.69881696],
        ...,
        [-1.01416874,  1.77692415, -0.0175506 , ...,  0.02982226,
         -0.79090697, -0.75716479],
        [ 0.99411964, -0.39523617,  0.46654021, ..., -1.62395586,
         -0.63782079,  1.43213844],
        [ 1.77132541, -0.95056043,  0.37540258, ...,  0.01968714,
         -1.03527548,  0.39205272]],

       [[-0.10334535, -0.8929405 ,  0.73607739, ..., -1.19666118,
          0.06852772, -0.96987602],
        [ 2.13759694,  0.84869979, -0.99459824, ...,  0.65078661,
         -0.49690394,  0.77831748],
        [-1.44472736, -1.21900212, -0.77229333, ..., -0.45423455,
          0.19830191, -0.68767208],
        ...,
        [ 0.19454783, -0.71190753,  2.82909697, ...,  0.97857095,
          0.67187882,  0.09746846],
        [-0.58904084, -0.41505728,  1.04412233, ..., -0.12198221,
         -0.50684467,  1.56542232],
        [-0.89195114,  1.23244903, -2.10987152, ...,  0.91622949,
          0.40999001, -0.65424188]],

       [[ 0.95626333,  0.21940413,  0.86589926, ...,  1.47272558,
         -0.55443001,  1.2008141 ],
        [ 0.94032427,  0.0931288 ,  0.77226228, ...,  1.26916956,
         -0.57662136,  0.88842902],
        [-0.23138386,  0.15845085, -1.33668801, ..., -1.33332178,
          0.15524309, -1.08860061],
        ...,
        [ 1.26120065, -0.15534739,  0.34744789, ..., -1.53003928,
         -0.07152691, -1.72074586],
        [-1.15880002,  0.73396249, -0.10402144, ...,  1.01286394,
         -0.78903161,  2.12732981],
        [-0.12447582, -0.07029113, -0.5904053 , ...,  0.45058805,
          0.23860171,  1.39694982]],

       [[ 1.37288017,  1.57454868, -1.31150848, ..., -0.11459006,
          1.57652361,  0.32320881],
        [-1.15566697, -0.90959159,  1.06482753, ..., -0.56897759,
         -1.87990178, -0.52078417],
        [-0.1134551 , -0.66397135, -0.29449925, ...,  1.63000314,
          0.50064175, -0.64631669],
        ...,
        [ 0.57673475,  1.49125537,  0.97739831, ..., -0.26974367,
         -1.55536186, -0.15896637],
        [-0.18430432,  0.11944914, -0.56572547, ..., -0.51577881,
         -0.14535604, -1.09840927],
        [ 0.76741937,  1.39186527,  1.48469105, ...,  0.19037821,
         -0.30807854,  0.44160543]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>σ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">27.23 6.505 39.42 ... 47.14 64.05</div><input id="attrs-22a9528b-02b9-4f7d-b3e8-49cf86949db7" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-22a9528b-02b9-4f7d-b3e8-49cf86949db7" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-cd0750f0-9f28-4762-8187-d8f4e5a57db3" class="xr-var-data-in" type="checkbox"><label for="data-cd0750f0-9f28-4762-8187-d8f4e5a57db3" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[ 27.22582328,   6.50453839,  39.42478265],
        [ 13.37751425,   8.46802428, 129.89610941],
        [ 10.72164228,  24.94971223, 102.7146095 ],
        ...,
        [107.26940159,  23.20508653,  35.3446602 ],
        [124.97180552,  13.19227419, 145.18684899],
        [ 88.2747096 ,  40.61048868,  50.21903074]],

       [[131.31729221,  96.5412831 ,  70.56487648],
        [143.55608877,  36.54926803,   5.84418576],
        [ 33.35705402, 205.64975605,  10.01984894],
        ...,
        [ 70.90358774,  23.20074938, 104.54547733],
        [ 74.54938645,  48.98896964, 131.8366626 ],
        [ 28.87932693, 103.09557275,  45.74619814]],

       [[ 98.66459786, 213.93501451,  77.75342308],
        [ 46.20775227, 140.47053288,  87.54119877],
        [ 48.65507021, 182.63370476,  35.63529879],
        ...,
        [  4.05083801, 116.69219995, 127.42758537],
        [ 28.45085473,  79.66533597, 140.58625841],
        [148.66125575, 154.45834609, 239.20924515]],

       [[ 22.20125272,  74.76545816,  94.2220565 ],
        [ 63.23463911,  29.49654959,  78.6400277 ],
        [ 94.44434706,  67.93754801, 187.33159977],
        ...,
        [ 94.74513333,  55.86780229, 124.72461746],
        [ 14.08098885,  94.3565778 , 120.11072466],
        [ 18.22473629,  47.14089139,  64.04793555]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>MMR</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">4.234e+03 4.106e+03 ... 4.073e+03</div><input id="attrs-c9a34553-cf69-4478-bfd2-e4ebae1c556c" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-c9a34553-cf69-4478-bfd2-e4ebae1c556c" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-5cce177e-a937-4daa-ab14-76c358910fe6" class="xr-var-data-in" type="checkbox"><label for="data-5cce177e-a937-4daa-ab14-76c358910fe6" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[4233.86597263, 4106.21613813, 4232.67050709, ...,
         4116.83150619, 4161.62064575, 4104.79336979],
        [4169.02748999, 4176.15224566, 4172.44894728, ...,
         4163.47995259, 4205.76776789, 4166.62721748],
        [4369.57899735, 4050.99859722, 4377.91042278, ...,
         4024.16365495, 4378.18064731, 4033.72170767],
        ...,
        [4159.88923469, 4045.29375632, 4266.79586648, ...,
         4004.75210576, 4183.8383908 , 3986.49000311],
        [4306.85019842, 3847.74709363, 4240.91764535, ...,
         3831.53748658, 4102.90365662, 3871.85432064],
        [4215.32054396, 3822.00798974, 4092.09586122, ...,
         3861.41021769, 3967.5686653 , 3876.53216602]],

       [[4317.64900043, 3801.60384413, 4427.87972211, ...,
         3772.28226007, 4340.21890649, 3794.17639083],
        [4412.89192094, 4094.90863597, 3963.24623187, ...,
         4087.6750538 , 4034.6932786 , 4092.33621384],
        [4147.99870736, 3656.59508486, 4170.42912556, ...,
         3813.86934982, 4202.80532332, 3765.86297953],
        ...,
        [4172.61524529, 3978.2611847 , 4359.41423107, ...,
         4017.48155239, 4206.45972478, 3997.0393142 ],
        [4086.41694857, 4004.11958463, 4208.1682613 , ...,
         4018.47703031, 4092.54462294, 4101.14123968],
        [4229.95761948, 4248.45664107, 4194.78489881, ...,
         4215.85580654, 4267.5568035 , 4053.94716107]],

       [[4358.6852591 , 4166.57894108, 4349.76952448, ...,
         4434.70828399, 4209.63330835, 4376.53689592],
        [4333.72599335, 4151.67084096, 4325.96022654, ...,
         4316.86991295, 4263.63134537, 4263.38708701],
        [4046.28209913, 3958.4506536 , 3992.50344832, ...,
         3686.00269018, 4065.09346086, 3730.69702582],
        ...,
        [4277.0281587 , 4190.54158446, 4273.32669429, ...,
         4030.12576439, 4271.62949522, 4007.87179371],
        [4137.27879557, 4063.33442943, 4167.28814765, ...,
         4085.55320713, 4147.79902283, 4174.33750488],
        [4127.8338395 , 4058.4187474 , 4058.56817809, ...,
         4138.87288461, 4181.8094006 , 4285.04635831]],

       [[4422.28710553, 4090.75659466, 4362.69031474, ...,
         3964.46736236, 4426.80824501, 3997.1995961 ],
        [3907.04303111, 4029.45937695, 4047.45519966, ...,
         4039.50631474, 3861.24630434, 4040.92785429],
        [4354.72028456, 4015.05144374, 4337.62168777, ...,
         4170.8984463 , 4412.71826075, 4016.25085813],
        ...,
        [4398.69329839, 4033.32573322, 4436.65422109, ...,
         3934.9425872 , 4196.68752121, 3941.13147145],
        [3983.52564834, 4084.42744336, 3978.15486147, ...,
         4024.48950801, 3984.07407872, 3969.51449166],
        [4147.43947677, 4117.95816506, 4160.51156385, ...,
         4061.31899411, 4127.83881087, 4073.1620688 ]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>MMR_diff</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">195.9 -56.78 143.7 ... 127.8 -114.8</div><input id="attrs-f9396d3b-ac39-4940-b0e6-d3167c56c758" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-f9396d3b-ac39-4940-b0e6-d3167c56c758" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-64707530-7ee2-4a2c-8bea-fcb3d953d3b9" class="xr-var-data-in" type="checkbox"><label for="data-64707530-7ee2-4a2c-8bea-fcb3d953d3b9" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[ 195.86597263,  -56.78386187,  143.67050709, ...,
          -68.16849381,  161.62064575,  -83.20663021],
        [ 131.02748999,   13.15224566,   83.44894728, ...,
          -21.52004741,  205.76776789,  -21.37278252],
        [ 331.57899735, -112.00140278,  288.91042278, ...,
         -160.83634505,  378.18064731, -154.27829233],
        ...,
        [ 121.88923469, -117.70624368,  177.79586648, ...,
         -180.24789424,  183.8383908 , -201.50999689],
        [ 268.85019842, -315.25290637,  151.91764535, ...,
         -353.46251342,  102.90365662, -316.14567936],
        [ 177.32054396, -340.99201026,    3.09586122, ...,
         -323.58978231,  -32.4313347 , -311.46783398]],

       [[ 279.64900043, -361.39615587,  338.87972211, ...,
         -412.71773993,  340.21890649, -393.82360917],
        [ 374.89192094,  -68.09136403, -125.75376813, ...,
          -97.3249462 ,   34.6932786 ,  -95.66378616],
        [ 109.99870736, -506.40491514,   81.42912556, ...,
         -371.13065018,  202.80532332, -422.13702047],
        ...,
        [ 134.61524529, -184.7388153 ,  270.41423107, ...,
         -167.51844761,  206.45972478, -190.9606858 ],
        [  48.41694857, -158.88041537,  119.1682613 , ...,
         -166.52296969,   92.54462294,  -86.85876032],
        [ 191.95761948,   85.45664107,  105.78489881, ...,
           30.85580654,  267.5568035 , -134.05283893]],

       [[ 320.6852591 ,    3.57894108,  260.76952448, ...,
          249.70828399,  209.63330835,  188.53689592],
        [ 295.72599335,  -11.32915904,  236.96022654, ...,
          131.86991295,  263.63134537,   75.38708701],
        [   8.28209913, -204.5493464 ,  -96.49655168, ...,
         -498.99730982,   65.09346086, -457.30297418],
        ...,
        [ 239.0281587 ,   27.54158446,  184.32669429, ...,
         -154.87423561,  271.62949522, -180.12820629],
        [  99.27879557,  -99.66557057,   78.28814765, ...,
          -99.44679287,  147.79902283,  -13.66249512],
        [  89.8338395 , -104.5812526 ,  -30.43182191, ...,
          -46.12711539,  181.8094006 ,   97.04635831]],

       [[ 384.28710553,  -72.24340534,  273.69031474, ...,
         -220.53263764,  426.80824501, -190.8004039 ],
        [-130.95696889, -133.54062305,  -41.54480034, ...,
         -145.49368526, -138.75369566, -147.07214571],
        [ 316.72028456, -147.94855626,  248.62168777, ...,
          -14.1015537 ,  412.71826075, -171.74914187],
        ...,
        [ 360.69329839, -129.67426678,  347.65422109, ...,
         -250.0574128 ,  196.68752121, -246.86852855],
        [ -54.47435166,  -78.57255664, -110.84513853, ...,
         -160.51049199,  -15.92592128, -218.48550834],
        [ 109.43947677,  -45.04183494,   71.51156385, ...,
         -123.68100589,  127.83881087, -114.8379312 ]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>winrate</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.6254 0.4629 ... 0.5829 0.4254</div><input id="attrs-e54d1ed5-c2ea-4be7-83ac-5b0a145fb3f0" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-e54d1ed5-c2ea-4be7-83ac-5b0a145fb3f0" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-035b7e45-0977-4898-acd0-eed6496e83cc" class="xr-var-data-in" type="checkbox"><label for="data-035b7e45-0977-4898-acd0-eed6496e83cc" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[0.62539184, 0.46292339, 0.59288977, ..., 0.45552587,
         0.60417516, 0.44578491],
        [0.58488098, 0.50860261, 0.55437173, ..., 0.48592652,
         0.63144167, 0.48602278],
        [0.70424627, 0.4272549 , 0.68047498, ..., 0.39631572,
         0.72899659, 0.40042837],
        ...,
        [0.579064  , 0.42360614, 0.61425083, ..., 0.38423006,
         0.6179903 , 0.37115482],
        [0.66895588, 0.30472821, 0.59808776, ..., 0.28396851,
         0.56691001, 0.30423351],
        [0.6139561 , 0.29064968, 0.50202513, ..., 0.30012628,
         0.47879797, 0.3068306 ]],

       [[0.6751831 , 0.27976657, 0.7082095 , ..., 0.25352371,
         0.70893308, 0.26299327],
        [0.72729319, 0.45557593, 0.41847324, ..., 0.43667736,
         0.52267881, 0.43774686],
        [0.57146229, 0.20998001, 0.55306573, ..., 0.27466314,
         0.6296359 , 0.24888782],
        ...,
        [0.58715842, 0.38145365, 0.66986153, ..., 0.3921403 ,
         0.63186293, 0.37761992],
        [0.53162934, 0.3975408 , 0.57732763, ..., 0.39276136,
         0.56024338, 0.44342522],
        [0.62299295, 0.55566915, 0.56876006, ..., 0.52017317,
         0.66820599, 0.41319834]],

       [[0.69827494, 0.50234112, 0.66425691, ..., 0.65777178,
         0.6337924 , 0.6208884 ],
        [0.68433995, 0.49258965, 0.650224  , ..., 0.58541607,
         0.66592486, 0.54915469],
        [0.50541747, 0.36930058, 0.43721063, ..., 0.21321342,
         0.54247782, 0.23208648],
        ...,
        [0.65145361, 0.51800836, 0.61829188, ..., 0.40005405,
         0.67056436, 0.38430415],
        [0.56457983, 0.4351714 , 0.55103335, ..., 0.43531211,
         0.59549456, 0.49106372],
        [0.55849514, 0.43201257, 0.48010373, ..., 0.46986282,
         0.61673617, 0.56314332]],

       [[0.73214164, 0.45288266, 0.67175446, ..., 0.35961398,
         0.75339009, 0.3777185 ],
        [0.41516382, 0.41352334, 0.47285047, ..., 0.40595928,
         0.4102192 , 0.40496366],
        [0.69608465, 0.40441119, 0.65713147, ..., 0.49077661,
         0.74647655, 0.38950478],
        ...,
        [0.71986271, 0.41597896, 0.71293119, ..., 0.34202261,
         0.62589531, 0.34390283],
        [0.46442617, 0.44878255, 0.42799542, ..., 0.39651972,
         0.48958367, 0.36084846],
        [0.57110391, 0.47057023, 0.54664281, ..., 0.41979366,
         0.58285382, 0.42543967]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-05567415-d358-461e-b104-25b6d52839fc" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-05567415-d358-461e-b104-25b6d52839fc" class="xr-section-summary">Attributes: <span>(6)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:41:39.607220</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd><dt><span>sampling_time :</span></dt><dd>25.67070198059082</dd><dt><span>tuning_steps :</span></dt><dd>2000</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_posterior_predictivefe858c5a-454c-4ec2-bf6b-7b4c61b0d6aa" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_posterior_predictivefe858c5a-454c-4ec2-bf6b-7b4c61b0d6aa" class="xr-section-summary">posterior_predictive</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-e350686a-5412-4801-acaa-94e1df5eaf82" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-e350686a-5412-4801-acaa-94e1df5eaf82" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 4</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">race</span>: 3</li><li><span class="xr-has-index">replay</span>: 202</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-77553b78-f250-4fd4-9488-cf91803b3cb4" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-77553b78-f250-4fd4-9488-cf91803b3cb4" class="xr-section-summary">Coordinates: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3</div><input id="attrs-45e17293-f133-4957-a6e5-1433bfddd44b" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-45e17293-f133-4957-a6e5-1433bfddd44b" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-9ad20bd5-4681-4a67-a7bc-4344450863c4" class="xr-var-data-in" type="checkbox"><label for="data-9ad20bd5-4681-4a67-a7bc-4344450863c4" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 2, 3])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-b39a1da0-b117-472b-8000-d89a715a5500" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-b39a1da0-b117-472b-8000-d89a715a5500" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-b3fcde09-9b24-45e3-8893-fd7fa645df1e" class="xr-var-data-in" type="checkbox"><label for="data-b3fcde09-9b24-45e3-8893-fd7fa645df1e" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">265 223 402 206 ... 210 188 131 144</div><input id="attrs-77174bba-8d6f-45fb-84ed-1df259475029" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-77174bba-8d6f-45fb-84ed-1df259475029" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-a5b91cf1-7649-49e4-8fc0-52d4436d329e" class="xr-var-data-in" type="checkbox"><label for="data-a5b91cf1-7649-49e4-8fc0-52d4436d329e" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([265, 223, 402, ..., 188, 131, 144])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">race</span></div><div class="xr-var-dims">(race)</div><div class="xr-var-dtype">&lt;U7</div><div class="xr-var-preview xr-preview">'Terran' 'Protoss' 'Zerg'</div><input id="attrs-9c9e628b-1908-473e-ad41-c8a82fda6bb7" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-9c9e628b-1908-473e-ad41-c8a82fda6bb7" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-b92c0dd1-0949-4434-89f3-92c7e8cfc0dd" class="xr-var-data-in" type="checkbox"><label for="data-b92c0dd1-0949-4434-89f3-92c7e8cfc0dd" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array(['Terran', 'Protoss', 'Zerg'], dtype='&lt;U7')</pre></li></ul></div></li><li class="xr-section-item"><input id="section-5654b4f1-9e2d-4d28-a01c-37f7668f91ab" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-5654b4f1-9e2d-4d28-a01c-37f7668f91ab" class="xr-section-summary">Data variables: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>win</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">1 1 1 0 1 1 1 1 ... 0 0 0 0 1 0 1 0</div><input id="attrs-833aa5ce-d65e-4078-a635-7100e49d5fa8" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-833aa5ce-d65e-4078-a635-7100e49d5fa8" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-f8d628aa-85d4-41c7-9fd6-6fabf38b2bcd" class="xr-var-data-in" type="checkbox"><label for="data-f8d628aa-85d4-41c7-9fd6-6fabf38b2bcd" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[1, 1, 1, ..., 1, 0, 1],
        [0, 0, 1, ..., 1, 1, 1],
        [1, 1, 1, ..., 0, 1, 1],
        ...,
        [1, 0, 1, ..., 0, 0, 0],
        [1, 0, 0, ..., 1, 0, 0],
        [1, 0, 0, ..., 1, 0, 0]],

       [[0, 1, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 1, 0],
        ...,
        [1, 1, 0, ..., 1, 1, 1],
        [1, 0, 1, ..., 0, 1, 0],
        [1, 1, 1, ..., 1, 1, 1]],

       [[1, 0, 1, ..., 1, 1, 0],
        [0, 0, 1, ..., 0, 1, 1],
        [1, 0, 1, ..., 0, 1, 0],
        ...,
        [0, 1, 1, ..., 1, 0, 1],
        [1, 0, 1, ..., 0, 0, 1],
        [0, 0, 1, ..., 1, 1, 0]],

       [[1, 1, 0, ..., 0, 1, 0],
        [0, 0, 0, ..., 0, 1, 0],
        [1, 1, 1, ..., 1, 1, 0],
        ...,
        [1, 0, 1, ..., 0, 1, 0],
        [0, 0, 0, ..., 1, 1, 1],
        [1, 1, 1, ..., 0, 1, 0]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>μ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">4.211e+03 4.108e+03 ... 3.992e+03</div><input id="attrs-7203dbd3-e268-4fc3-a4a2-29fb87933be3" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-7203dbd3-e268-4fc3-a4a2-29fb87933be3" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-0fb7fd85-a7e3-4ba8-a9fc-8a66db60c817" class="xr-var-data-in" type="checkbox"><label for="data-0fb7fd85-a7e3-4ba8-a9fc-8a66db60c817" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[4210.85745791, 4108.13402572, 4047.68655821],
        [4187.82039211, 4167.02974265, 3832.39048778],
        [4385.10730355, 4051.15698963, 3888.3543684 ],
        ...,
        [4268.67850837, 4004.06007755, 3935.24654733],
        [4182.61327252, 3852.96115761, 4013.25955458],
        [4058.95730755, 3860.61071343, 4048.4206048 ]],

       [[4331.22003251, 3887.80946609, 3896.23173387],
        [4106.02686452, 4063.88927972, 3995.75729977],
        [4196.19055581, 3907.28257413, 3817.30936413],
        ...,
        [4158.82110597, 3994.77797297, 3948.94402472],
        [4130.32958212, 4024.45281323, 3864.17620077],
        [4255.71656811, 4121.39660228, 4067.50723152]],

       [[4264.33592228, 4119.64071496, 3900.73678858],
        [4290.27572226, 4138.58898858, 3923.24665912],
        [4057.54009725, 3929.51218737, 3995.78802404],
        ...,
        [4271.91923915, 4208.66941361, 3925.91501886],
        [4170.24764659, 4004.86306088, 3916.82405953],
        [4146.33857085, 4069.27579897, 3925.21194574]],

       [[4391.8074459 , 3973.03474104, 4062.09104669],
        [3980.12121482, 4056.28919035, 3860.08003276],
        [4365.43547727, 4060.16002941, 3927.51863056],
        ...,
        [4344.05048768, 3950.01257309, 3857.26550133],
        [3986.12083546, 4073.15663108, 4093.19655361],
        [4133.45346107, 4052.34439539, 3991.74262184]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>σ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">27.23 6.505 39.42 ... 47.14 64.05</div><input id="attrs-c18cdae3-2dd5-42be-83dd-ebd56a68de8f" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-c18cdae3-2dd5-42be-83dd-ebd56a68de8f" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-035c03ed-26ef-41b8-9f69-93219c0b3166" class="xr-var-data-in" type="checkbox"><label for="data-035c03ed-26ef-41b8-9f69-93219c0b3166" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[ 27.22582328,   6.50453839,  39.42478265],
        [ 13.37751425,   8.46802428, 129.89610941],
        [ 10.72164228,  24.94971223, 102.7146095 ],
        ...,
        [107.26940159,  23.20508653,  35.3446602 ],
        [124.97180552,  13.19227419, 145.18684899],
        [ 88.2747096 ,  40.61048868,  50.21903074]],

       [[131.31729221,  96.5412831 ,  70.56487648],
        [143.55608877,  36.54926803,   5.84418576],
        [ 33.35705402, 205.64975605,  10.01984894],
        ...,
        [ 70.90358774,  23.20074938, 104.54547733],
        [ 74.54938645,  48.98896964, 131.8366626 ],
        [ 28.87932693, 103.09557275,  45.74619814]],

       [[ 98.66459786, 213.93501451,  77.75342308],
        [ 46.20775227, 140.47053288,  87.54119877],
        [ 48.65507021, 182.63370476,  35.63529879],
        ...,
        [  4.05083801, 116.69219995, 127.42758537],
        [ 28.45085473,  79.66533597, 140.58625841],
        [148.66125575, 154.45834609, 239.20924515]],

       [[ 22.20125272,  74.76545816,  94.2220565 ],
        [ 63.23463911,  29.49654959,  78.6400277 ],
        [ 94.44434706,  67.93754801, 187.33159977],
        ...,
        [ 94.74513333,  55.86780229, 124.72461746],
        [ 14.08098885,  94.3565778 , 120.11072466],
        [ 18.22473629,  47.14089139,  64.04793555]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>winrate</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.6254 0.4629 ... 0.5829 0.4254</div><input id="attrs-968ce2d7-6c31-45ec-86b0-64a5d49617f8" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-968ce2d7-6c31-45ec-86b0-64a5d49617f8" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-f9be5cd2-b4cb-4849-89a9-92ba3fac37b9" class="xr-var-data-in" type="checkbox"><label for="data-f9be5cd2-b4cb-4849-89a9-92ba3fac37b9" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[0.62539184, 0.46292339, 0.59288977, ..., 0.45552587,
         0.60417516, 0.44578491],
        [0.58488098, 0.50860261, 0.55437173, ..., 0.48592652,
         0.63144167, 0.48602278],
        [0.70424627, 0.4272549 , 0.68047498, ..., 0.39631572,
         0.72899659, 0.40042837],
        ...,
        [0.579064  , 0.42360614, 0.61425083, ..., 0.38423006,
         0.6179903 , 0.37115482],
        [0.66895588, 0.30472821, 0.59808776, ..., 0.28396851,
         0.56691001, 0.30423351],
        [0.6139561 , 0.29064968, 0.50202513, ..., 0.30012628,
         0.47879797, 0.3068306 ]],

       [[0.6751831 , 0.27976657, 0.7082095 , ..., 0.25352371,
         0.70893308, 0.26299327],
        [0.72729319, 0.45557593, 0.41847324, ..., 0.43667736,
         0.52267881, 0.43774686],
        [0.57146229, 0.20998001, 0.55306573, ..., 0.27466314,
         0.6296359 , 0.24888782],
        ...,
        [0.58715842, 0.38145365, 0.66986153, ..., 0.3921403 ,
         0.63186293, 0.37761992],
        [0.53162934, 0.3975408 , 0.57732763, ..., 0.39276136,
         0.56024338, 0.44342522],
        [0.62299295, 0.55566915, 0.56876006, ..., 0.52017317,
         0.66820599, 0.41319834]],

       [[0.69827494, 0.50234112, 0.66425691, ..., 0.65777178,
         0.6337924 , 0.6208884 ],
        [0.68433995, 0.49258965, 0.650224  , ..., 0.58541607,
         0.66592486, 0.54915469],
        [0.50541747, 0.36930058, 0.43721063, ..., 0.21321342,
         0.54247782, 0.23208648],
        ...,
        [0.65145361, 0.51800836, 0.61829188, ..., 0.40005405,
         0.67056436, 0.38430415],
        [0.56457983, 0.4351714 , 0.55103335, ..., 0.43531211,
         0.59549456, 0.49106372],
        [0.55849514, 0.43201257, 0.48010373, ..., 0.46986282,
         0.61673617, 0.56314332]],

       [[0.73214164, 0.45288266, 0.67175446, ..., 0.35961398,
         0.75339009, 0.3777185 ],
        [0.41516382, 0.41352334, 0.47285047, ..., 0.40595928,
         0.4102192 , 0.40496366],
        [0.69608465, 0.40441119, 0.65713147, ..., 0.49077661,
         0.74647655, 0.38950478],
        ...,
        [0.71986271, 0.41597896, 0.71293119, ..., 0.34202261,
         0.62589531, 0.34390283],
        [0.46442617, 0.44878255, 0.42799542, ..., 0.39651972,
         0.48958367, 0.36084846],
        [0.57110391, 0.47057023, 0.54664281, ..., 0.41979366,
         0.58285382, 0.42543967]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-8a6ab280-6834-4545-bf43-800140619b8d" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-8a6ab280-6834-4545-bf43-800140619b8d" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:41:40.227565</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_log_likelihood21471143-5db7-48de-94b3-c4043a224e4b" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_log_likelihood21471143-5db7-48de-94b3-c4043a224e4b" class="xr-section-summary">log_likelihood</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-9fee67cf-4023-4078-84b9-f31939721ce6" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-9fee67cf-4023-4078-84b9-f31939721ce6" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 4</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">replay</span>: 202</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-47234b60-a0a7-43e7-bc31-a42338d705be" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-47234b60-a0a7-43e7-bc31-a42338d705be" class="xr-section-summary">Coordinates: <span>(3)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3</div><input id="attrs-ec0eae01-ffb4-4cdc-9488-643184f8d14e" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-ec0eae01-ffb4-4cdc-9488-643184f8d14e" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-0fc17caa-2615-47c3-b719-2dae1527b042" class="xr-var-data-in" type="checkbox"><label for="data-0fc17caa-2615-47c3-b719-2dae1527b042" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 2, 3])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-5463c36c-5593-4cb0-8c76-42c90ec4e0fd" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-5463c36c-5593-4cb0-8c76-42c90ec4e0fd" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-a5af986a-6a97-49c7-9f89-6ccfe8f23104" class="xr-var-data-in" type="checkbox"><label for="data-a5af986a-6a97-49c7-9f89-6ccfe8f23104" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">265 223 402 206 ... 210 188 131 144</div><input id="attrs-95cb3f46-6faf-4c47-af24-cf49b56527e2" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-95cb3f46-6faf-4c47-af24-cf49b56527e2" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-04847d88-7d28-49b0-a0ef-7a16501bcbdf" class="xr-var-data-in" type="checkbox"><label for="data-04847d88-7d28-49b0-a0ef-7a16501bcbdf" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([265, 223, 402, ..., 188, 131, 144])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-b749c3bb-e04e-4e38-9e30-186f82140c47" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-b749c3bb-e04e-4e38-9e30-186f82140c47" class="xr-section-summary">Data variables: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>win</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-0.4694 -0.7702 ... -0.8743 -0.5542</div><input id="attrs-f489e131-9130-46fa-9e45-8fb791ec1ca9" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-f489e131-9130-46fa-9e45-8fb791ec1ca9" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-decc50e2-50a8-4a97-b8a1-cb7fc6fce7e8" class="xr-var-data-in" type="checkbox"><label for="data-decc50e2-50a8-4a97-b8a1-cb7fc6fce7e8" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[-0.46937689, -0.7701937 , -0.89867129, ..., -0.60793486,
         -0.92678349, -0.59020241],
        [-0.5363469 , -0.6760883 , -0.80827016, ..., -0.66538907,
         -0.99815629, -0.66557633],
        [-0.35062718, -0.85037448, -1.14091971, ..., -0.50470393,
         -1.30562387, -0.51153982],
        ...,
        [-0.54634227, -0.85895116, -0.95256795, ..., -0.48488185,
         -0.96230927, -0.46387019],
        [-0.40203718, -1.188335  , -0.91152153, ..., -0.33403113,
         -0.83680974, -0.36274118],
        [-0.48783186, -1.23563659, -0.69720566, ..., -0.35685536,
         -0.65161755, -0.36648086]],

       [[-0.39277136, -1.27379969, -1.23171919, ..., -0.29239143,
         -1.23420208, -0.30515825],
        [-0.31842559, -0.78619288, -0.54209829, ..., -0.57390274,
         -0.73956566, -0.57580311],
        [-0.55955678, -1.56074295, -0.80534375, ..., -0.32111909,
         -0.9932687 , -0.28620026],
        ...,
        [-0.53246061, -0.96376593, -1.1082431 , ..., -0.49781118,
         -0.99929993, -0.47420432],
        [-0.63180876, -0.9224577 , -0.86115793, ..., -0.49883342,
         -0.82153384, -0.58595374],
        [-0.47322008, -0.58758221, -0.84109064, ..., -0.73433001,
         -1.10324095, -0.5330684 ]],

       [[-0.35914236, -0.68847586, -1.09140904, ..., -1.07227745,
         -1.00455489, -0.96992466],
        [-0.37930049, -0.70807881, -1.05046232, ..., -0.88047984,
         -1.09638935, -0.796631  ],
        [-0.68237052, -0.99614438, -0.57484984, ..., -0.23979825,
         -0.78192993, -0.26407816],
        ...,
        [-0.42854909, -0.65776391, -0.96309906, ..., -0.51091572,
         -1.11037426, -0.48500219],
        [-0.57167349, -0.8320153 , -0.80080667, ..., -0.57148211,
         -0.9050901 , -0.67543246],
        [-0.58250936, -0.83930058, -0.65412597, ..., -0.63461948,
         -0.95903169, -0.8281501 ]],

       [[-0.31178129, -0.79212221, -1.11399335, ..., -0.44568413,
         -1.39994749, -0.47436271],
        [-0.8790821 , -0.88304132, -0.64027103, ..., -0.52080742,
         -0.52800433, -0.5191328 ],
        [-0.36228401, -0.90532311, -1.07040821, ..., -0.67486847,
         -1.37229894, -0.49348481],
        ...,
        [-0.32869477, -0.87712059, -1.24803335, ..., -0.41858471,
         -0.9832196 , -0.42144637],
        [-0.76695269, -0.80121681, -0.55860828, ..., -0.50504192,
         -0.67252855, -0.4476137 ],
        [-0.56018411, -0.75381006, -0.79107498, ..., -0.54437148,
         -0.87431857, -0.55415018]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-130fda80-5a9d-4d7c-a9a4-03bfff90c809" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-130fda80-5a9d-4d7c-a9a4-03bfff90c809" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:41:40.224319</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_sample_statsb3feef49-2dd6-4a87-9d29-dcc30bd5b334" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_sample_statsb3feef49-2dd6-4a87-9d29-dcc30bd5b334" class="xr-section-summary">sample_stats</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-cd722f6a-eb13-424d-9c64-50f88c35b217" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-cd722f6a-eb13-424d-9c64-50f88c35b217" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 4</li><li><span class="xr-has-index">draw</span>: 2000</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-fbbfd019-074a-4172-80e8-4e29f76599b5" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-fbbfd019-074a-4172-80e8-4e29f76599b5" class="xr-section-summary">Coordinates: <span>(2)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3</div><input id="attrs-43ced3de-673e-4263-bf40-3cdb3294fdfd" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-43ced3de-673e-4263-bf40-3cdb3294fdfd" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-ef9390ba-5157-41da-b7fc-a894c7145383" class="xr-var-data-in" type="checkbox"><label for="data-ef9390ba-5157-41da-b7fc-a894c7145383" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 2, 3])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-197037f1-5bbe-40d9-a395-adacd9d4012e" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-197037f1-5bbe-40d9-a395-adacd9d4012e" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-25edf6c0-772c-49a6-892e-9c4c511c03a7" class="xr-var-data-in" type="checkbox"><label for="data-25edf6c0-772c-49a6-892e-9c4c511c03a7" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-ed9a40bf-0bf3-4941-a1f1-c911a6c4bd2b" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-ed9a40bf-0bf3-4941-a1f1-c911a6c4bd2b" class="xr-section-summary">Data variables: <span>(10)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>step_size_bar</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.2948 0.2948 ... 0.2904 0.2904</div><input id="attrs-5c314bf5-249c-46ac-83dd-4e199fe69e6c" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-5c314bf5-249c-46ac-83dd-4e199fe69e6c" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-27c71ce3-f1f2-452b-96bd-6cd6eee497c6" class="xr-var-data-in" type="checkbox"><label for="data-27c71ce3-f1f2-452b-96bd-6cd6eee497c6" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[0.29475372, 0.29475372, 0.29475372, ..., 0.29475372, 0.29475372,
        0.29475372],
       [0.29770566, 0.29770566, 0.29770566, ..., 0.29770566, 0.29770566,
        0.29770566],
       [0.27693519, 0.27693519, 0.27693519, ..., 0.27693519, 0.27693519,
        0.27693519],
       [0.29040166, 0.29040166, 0.29040166, ..., 0.29040166, 0.29040166,
        0.29040166]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>energy_error</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-0.2597 0.03461 ... 0.2249 0.4218</div><input id="attrs-eaf95d3c-baa9-40e9-84ad-de959d85966f" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-eaf95d3c-baa9-40e9-84ad-de959d85966f" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-df137e89-e99b-42f1-8a6c-6683af7d51b0" class="xr-var-data-in" type="checkbox"><label for="data-df137e89-e99b-42f1-8a6c-6683af7d51b0" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[-0.25966   ,  0.03460919,  0.01227495, ..., -0.51621275,
         0.86212363, -0.24459744],
       [-0.22234907,  0.28075065, -0.17805517, ...,  0.24543193,
        -0.28516645,  0.2238124 ],
       [-1.07546919,  0.10968526,  0.01985628, ..., -0.48126788,
        -0.01111381, -0.44255399],
       [ 0.0773235 ,  0.06891559, -0.09303872, ...,  0.02184957,
         0.2248607 ,  0.42175383]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>step_size</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.3427 0.3427 ... 0.3262 0.3262</div><input id="attrs-c76897a0-b771-4432-bbdc-39554242a6f6" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-c76897a0-b771-4432-bbdc-39554242a6f6" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-3f5d444b-c89b-4da1-afb2-3e4434d3d79b" class="xr-var-data-in" type="checkbox"><label for="data-3f5d444b-c89b-4da1-afb2-3e4434d3d79b" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[0.34270119, 0.34270119, 0.34270119, ..., 0.34270119, 0.34270119,
        0.34270119],
       [0.24183475, 0.24183475, 0.24183475, ..., 0.24183475, 0.24183475,
        0.24183475],
       [0.30871193, 0.30871193, 0.30871193, ..., 0.30871193, 0.30871193,
        0.30871193],
       [0.32619857, 0.32619857, 0.32619857, ..., 0.32619857, 0.32619857,
        0.32619857]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>max_energy_error</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.6081 0.6931 ... 0.2691 0.7324</div><input id="attrs-b8ad337b-49c1-4139-be1c-72e4b246d67d" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-b8ad337b-49c1-4139-be1c-72e4b246d67d" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-176557e7-044c-4ee6-91f6-124289308b29" class="xr-var-data-in" type="checkbox"><label for="data-176557e7-044c-4ee6-91f6-124289308b29" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[ 0.60811894,  0.6931234 , -0.45286992, ...,  0.95980239,
         1.16150203, -0.51598675],
       [-0.23944338,  0.28075065,  1.04635515, ...,  0.38439969,
        -0.57428163,  0.29192163],
       [-1.07546919,  0.9341971 ,  0.44889643, ..., -0.62753125,
         0.34544639, -0.49631647],
       [ 0.14807623,  0.52570743, -0.12783034, ...,  0.52722686,
         0.2690612 ,  0.73236215]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>diverging</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">bool</div><div class="xr-var-preview xr-preview">False False False ... False False</div><input id="attrs-59b44f49-6eda-439e-ab40-444251dbd918" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-59b44f49-6eda-439e-ab40-444251dbd918" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-861f5d88-d830-4675-8fb3-dc3c1afb4fd4" class="xr-var-data-in" type="checkbox"><label for="data-861f5d88-d830-4675-8fb3-dc3c1afb4fd4" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[False, False, False, ..., False, False, False],
       [False, False, False, ..., False, False, False],
       [False, False, False, ..., False, False, False],
       [False, False, False, ..., False, False, False]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>depth</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">4 4 4 4 4 4 4 4 ... 4 4 4 4 4 4 4 4</div><input id="attrs-4f909a96-9a4c-4a0d-849e-dc405742c352" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-4f909a96-9a4c-4a0d-849e-dc405742c352" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-0f093dc2-b9db-49a4-9ea6-7bb87046c321" class="xr-var-data-in" type="checkbox"><label for="data-0f093dc2-b9db-49a4-9ea6-7bb87046c321" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[4, 4, 4, ..., 4, 4, 4],
       [4, 4, 4, ..., 4, 4, 4],
       [4, 4, 4, ..., 4, 4, 4],
       [4, 4, 4, ..., 4, 4, 4]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>mean_tree_accept</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.9568 0.9454 ... 0.8909 0.8291</div><input id="attrs-ed75b90f-97f4-43c8-82db-515337bcf34a" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-ed75b90f-97f4-43c8-82db-515337bcf34a" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-72819bf8-5366-497f-9eb9-f02db4420cfd" class="xr-var-data-in" type="checkbox"><label for="data-72819bf8-5366-497f-9eb9-f02db4420cfd" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[0.95677878, 0.94541275, 0.98043667, ..., 0.95633415, 0.76809655,
        0.99642304],
       [0.99644285, 0.94807192, 0.90218025, ..., 0.82851872, 0.96650925,
        0.92233715],
       [1.        , 0.71300232, 0.88258827, ..., 1.        , 0.93890528,
        1.        ],
       [0.94858298, 0.788294  , 0.98735475, ..., 0.78198705, 0.89093101,
        0.8291273 ]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>energy</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">571.0 550.5 551.2 ... 535.7 552.8</div><input id="attrs-abe150aa-1179-4d31-96e2-ac65abf3739c" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-abe150aa-1179-4d31-96e2-ac65abf3739c" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-09b0cf56-fda2-460c-8b7b-71986124fe5f" class="xr-var-data-in" type="checkbox"><label for="data-09b0cf56-fda2-460c-8b7b-71986124fe5f" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[570.97160285, 550.45584786, 551.24512846, ..., 556.01462471,
        539.20361935, 542.4138038 ],
       [527.22012699, 525.94887852, 554.05126794, ..., 577.34190697,
        566.73680041, 554.7874333 ],
       [551.2205363 , 538.40491567, 540.25295614, ..., 567.3886664 ,
        554.96612302, 527.45559388],
       [539.74878505, 563.86859884, 548.89266634, ..., 549.10831899,
        535.70152588, 552.7940487 ]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>lp</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">-454.4 -444.6 ... -441.8 -450.3</div><input id="attrs-87b55c2d-f2c1-4ccc-a491-2a9164e72fe8" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-87b55c2d-f2c1-4ccc-a491-2a9164e72fe8" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-a5aa4dca-fe05-411b-83f1-b58d9f13916a" class="xr-var-data-in" type="checkbox"><label for="data-a5aa4dca-fe05-411b-83f1-b58d9f13916a" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[-454.37819213, -444.56013535, -452.36990853, ..., -440.74435605,
        -445.0448313 , -439.64688243],
       [-429.31151241, -445.44878934, -454.31044625, ..., -462.85580719,
        -447.20869749, -457.61499909],
       [-427.08968302, -433.51041027, -430.05582152, ..., -448.69884569,
        -444.46669223, -426.50110975],
       [-441.96784552, -446.14529167, -443.64588735, ..., -436.04827228,
        -441.77413958, -450.32373305]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>tree_size</span></div><div class="xr-var-dims">(chain, draw)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">15.0 15.0 15.0 ... 15.0 15.0 15.0</div><input id="attrs-c2caac6d-d5e9-4ddd-b2fe-8e836e4d301c" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-c2caac6d-d5e9-4ddd-b2fe-8e836e4d301c" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-9afd9a6e-433f-497e-b774-93d31e0f2e18" class="xr-var-data-in" type="checkbox"><label for="data-9afd9a6e-433f-497e-b774-93d31e0f2e18" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[15., 15., 15., ..., 15., 15., 15.],
       [15., 15., 15., ..., 15., 15., 15.],
       [15., 15., 15., ..., 15., 15., 15.],
       [15., 15., 15., ..., 15., 15., 15.]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-298548f6-f181-4c80-b21f-afeaf13736a8" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-298548f6-f181-4c80-b21f-afeaf13736a8" class="xr-section-summary">Attributes: <span>(6)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:41:39.615645</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd><dt><span>sampling_time :</span></dt><dd>25.67070198059082</dd><dt><span>tuning_steps :</span></dt><dd>2000</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_prior71a37676-01de-413f-b8df-87fd6e7c0736" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_prior71a37676-01de-413f-b8df-87fd6e7c0736" class="xr-section-summary">prior</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-60f8075b-ec96-4494-b916-e5cf1218e1d6" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-60f8075b-ec96-4494-b916-e5cf1218e1d6" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 1</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">race</span>: 3</li><li><span class="xr-has-index">replay</span>: 202</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-9aa20af0-b2db-4f4f-8ed1-0536a81f2d3a" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-9aa20af0-b2db-4f4f-8ed1-0536a81f2d3a" class="xr-section-summary">Coordinates: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0</div><input id="attrs-d1a69530-dd42-4636-9205-852369b1b219" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-d1a69530-dd42-4636-9205-852369b1b219" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-d9e07fa5-c9f7-4b0b-9952-bbcd645bb3db" class="xr-var-data-in" type="checkbox"><label for="data-d9e07fa5-c9f7-4b0b-9952-bbcd645bb3db" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-40cc0a71-42d4-449b-902e-0c911d754632" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-40cc0a71-42d4-449b-902e-0c911d754632" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-4dc0dc0f-dc7a-4663-94a0-5dc6ad60de8c" class="xr-var-data-in" type="checkbox"><label for="data-4dc0dc0f-dc7a-4663-94a0-5dc6ad60de8c" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">race</span></div><div class="xr-var-dims">(race)</div><div class="xr-var-dtype">&lt;U7</div><div class="xr-var-preview xr-preview">'Terran' 'Protoss' 'Zerg'</div><input id="attrs-401fb7a5-b4aa-4e82-9717-0947eb982984" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-401fb7a5-b4aa-4e82-9717-0947eb982984" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-ab16a010-c5bf-48e3-91ad-646e87adbb6c" class="xr-var-data-in" type="checkbox"><label for="data-ab16a010-c5bf-48e3-91ad-646e87adbb6c" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array(['Terran', 'Protoss', 'Zerg'], dtype='&lt;U7')</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">265 223 402 206 ... 210 188 131 144</div><input id="attrs-272f1ffc-adb0-48d3-8377-5a5158213f0e" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-272f1ffc-adb0-48d3-8377-5a5158213f0e" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-7306261a-307c-4fdd-a193-172e5ba49517" class="xr-var-data-in" type="checkbox"><label for="data-7306261a-307c-4fdd-a193-172e5ba49517" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([265, 223, 402, ..., 188, 131, 144])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-a8e8233e-86bd-407d-a1d5-6499c5cae14f" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-a8e8233e-86bd-407d-a1d5-6499c5cae14f" class="xr-section-summary">Data variables: <span>(3)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>μ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">4.487e+03 3.816e+03 ... 4.079e+03</div><input id="attrs-40f8acc0-7730-497c-87a5-1be28ca7de31" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-40f8acc0-7730-497c-87a5-1be28ca7de31" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-a7cd6a51-dcab-4efe-8711-160adc112d7b" class="xr-var-data-in" type="checkbox"><label for="data-a7cd6a51-dcab-4efe-8711-160adc112d7b" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[4487.3036091 , 3816.4730759 , 3841.54847432],
        [3678.10941335, 4259.6222888 , 3309.53839094],
        [4523.44352926, 3771.63792973, 4095.71172882],
        ...,
        [3793.7352304 , 3936.80991215, 3897.05804332],
        [4287.27113474, 4067.38137671, 3856.85673442],
        [3792.63645476, 3763.38063103, 4079.25539045]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>σ</span></div><div class="xr-var-dims">(chain, draw, race)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">203.6 143.1 121.8 ... 137.4 2.277</div><input id="attrs-9d4df197-ca41-4f74-af3d-2e7904589593" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-9d4df197-ca41-4f74-af3d-2e7904589593" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-88d9324e-b542-4320-8f09-0bb7f6dbec7e" class="xr-var-data-in" type="checkbox"><label for="data-88d9324e-b542-4320-8f09-0bb7f6dbec7e" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[203.63022425, 143.11882721, 121.84862917],
        [ 45.92168871,  54.50152003, 165.24930064],
        [ 73.03480705,  79.10581705,  32.67507679],
        ...,
        [  2.51873565, 187.68065267, 164.95280152],
        [128.66435759,  34.45577797, 153.07274428],
        [120.71958961, 137.40100064,   2.27693063]]])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>winrate</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">0.415 0.3547 ... 0.2377 0.3302</div><input id="attrs-c2de2c47-55cd-4c74-8c73-161622d03bf7" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-c2de2c47-55cd-4c74-8c73-161622d03bf7" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-0c398e3f-5430-439e-93dd-723b3acb5be0" class="xr-var-data-in" type="checkbox"><label for="data-0c398e3f-5430-439e-93dd-723b3acb5be0" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[0.41497111, 0.35469398, 0.71008641, ..., 0.2409493 ,
         0.6721141 , 0.32116004],
        [0.29598745, 0.56161731, 0.26909548, ..., 0.55386956,
         0.28532212, 0.56595945],
        [0.82468725, 0.30495278, 0.76779695, ..., 0.28886179,
         0.79610061, 0.31071488],
        ...,
        [0.34586104, 0.51741056, 0.31504336, ..., 0.31216598,
         0.36711597, 0.13365978],
        [0.69922031, 0.44950387, 0.67782839, ..., 0.41620837,
         0.84102901, 0.41210879],
        [0.35284029, 0.20802614, 0.30976338, ..., 0.35838849,
         0.23765418, 0.33020678]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-00239dda-adb7-4f98-a94a-ae33e93c8c65" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-00239dda-adb7-4f98-a94a-ae33e93c8c65" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:41:40.231024</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_prior_predictive461dac62-4309-435c-ae12-d9994a7bf746" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_prior_predictive461dac62-4309-435c-ae12-d9994a7bf746" class="xr-section-summary">prior_predictive</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-efaa1c18-f4d3-4888-9fc4-c367045fd849" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-efaa1c18-f4d3-4888-9fc4-c367045fd849" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">chain</span>: 1</li><li><span class="xr-has-index">draw</span>: 2000</li><li><span class="xr-has-index">replay</span>: 202</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-a56dab74-adde-4677-9e6a-d08893b5ad14" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-a56dab74-adde-4677-9e6a-d08893b5ad14" class="xr-section-summary">Coordinates: <span>(3)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">chain</span></div><div class="xr-var-dims">(chain)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0</div><input id="attrs-df5a5a79-c583-46fd-bec7-557e9c7f6ec1" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-df5a5a79-c583-46fd-bec7-557e9c7f6ec1" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-ce51fe2e-9403-4b3f-bdda-6ac81f845533" class="xr-var-data-in" type="checkbox"><label for="data-ce51fe2e-9403-4b3f-bdda-6ac81f845533" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">draw</span></div><div class="xr-var-dims">(draw)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 2 3 4 ... 1996 1997 1998 1999</div><input id="attrs-c85329c4-989a-4120-aaf5-2b9e172ac379" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-c85329c4-989a-4120-aaf5-2b9e172ac379" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-2938226f-532f-4e00-969e-9acee23dfcda" class="xr-var-data-in" type="checkbox"><label for="data-2938226f-532f-4e00-969e-9acee23dfcda" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([   0,    1,    2, ..., 1997, 1998, 1999])</pre></li><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">265 223 402 206 ... 210 188 131 144</div><input id="attrs-c09ea838-a5c6-4652-8161-c70d29224c8b" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-c09ea838-a5c6-4652-8161-c70d29224c8b" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-785ac0e4-ec7a-4886-9a58-d2e19951f750" class="xr-var-data-in" type="checkbox"><label for="data-785ac0e4-ec7a-4886-9a58-d2e19951f750" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([265, 223, 402, ..., 188, 131, 144])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-9a7d22c2-0554-49af-b845-a72c0a2a7ae9" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-9a7d22c2-0554-49af-b845-a72c0a2a7ae9" class="xr-section-summary">Data variables: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>win</span></div><div class="xr-var-dims">(chain, draw, replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">0 1 1 0 1 0 1 0 ... 0 0 0 0 0 0 0 0</div><input id="attrs-c4e62d87-a062-49a9-80e2-276eff19c8a2" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-c4e62d87-a062-49a9-80e2-276eff19c8a2" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-afb0021f-a4a4-46f0-8da1-bf2f20aea63d" class="xr-var-data-in" type="checkbox"><label for="data-afb0021f-a4a4-46f0-8da1-bf2f20aea63d" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([[[0, 1, 1, ..., 0, 1, 0],
        [0, 1, 0, ..., 0, 1, 0],
        [1, 0, 0, ..., 1, 1, 0],
        ...,
        [0, 1, 0, ..., 1, 1, 0],
        [1, 0, 1, ..., 1, 0, 1],
        [1, 0, 0, ..., 0, 0, 0]]])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-c3c952d0-ba1d-4bc1-8cfa-8ad0d4d9af71" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-c3c952d0-ba1d-4bc1-8cfa-8ad0d4d9af71" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:41:40.232791</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_observed_datad6214148-ce28-4451-be70-feb1c740010b" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_observed_datad6214148-ce28-4451-be70-feb1c740010b" class="xr-section-summary">observed_data</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-2ab25500-e7ac-4f0e-a2f6-bf483494cd7a" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-2ab25500-e7ac-4f0e-a2f6-bf483494cd7a" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">replay</span>: 202</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-c3469c21-8494-4859-9bef-60896f6dcf78" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-c3469c21-8494-4859-9bef-60896f6dcf78" class="xr-section-summary">Coordinates: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">265 223 402 206 ... 210 188 131 144</div><input id="attrs-f18edd06-518a-4743-b4bd-56ee2e7bf3ff" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-f18edd06-518a-4743-b4bd-56ee2e7bf3ff" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-cb3d53eb-7863-4d3e-a043-7b33b0581087" class="xr-var-data-in" type="checkbox"><label for="data-cb3d53eb-7863-4d3e-a043-7b33b0581087" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([265, 223, 402, ..., 188, 131, 144])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-2b4f91d7-18b6-45e6-95a8-634662498bca" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-2b4f91d7-18b6-45e6-95a8-634662498bca" class="xr-section-summary">Data variables: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>win</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">float64</div><div class="xr-var-preview xr-preview">1.0 1.0 0.0 0.0 ... 0.0 0.0 0.0 0.0</div><input id="attrs-ffb429a9-bd26-4cb6-836d-a73796582a7f" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-ffb429a9-bd26-4cb6-836d-a73796582a7f" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-e4015396-29a1-4998-97c5-094ec04145df" class="xr-var-data-in" type="checkbox"><label for="data-e4015396-29a1-4998-97c5-094ec04145df" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0.,
       1., 0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1.,
       1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0.,
       0., 0., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0.,
       1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1.,
       0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 0., 0., 0.,
       0., 1., 1., 1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1., 1., 0.,
       0., 0., 1., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 1., 1., 1.,
       1., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 1., 0., 1., 0.,
       0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
       0., 0., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 1., 1.,
       0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0.])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-4b59095f-6141-4a89-b1fe-431deb4fe096" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-4b59095f-6141-4a89-b1fe-431deb4fe096" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:41:40.233660</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
            <li class="xr-section-item">
                  <input id="idata_constant_dataebe9f307-78c1-4183-a41d-546d6349d419" class="xr-section-summary-in" type="checkbox">
                  <label for="idata_constant_dataebe9f307-78c1-4183-a41d-546d6349d419" class="xr-section-summary">constant_data</label>
                  <div class="xr-section-inline-details"></div>
                  <div class="xr-section-details">
                      <ul id="xr-dataset-coord-list" class="xr-var-list">
                          <div style="padding-left:2rem;"><div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
<defs>
<symbol id="icon-database" viewbox="0 0 32 32">
<title>Show/Hide data repr</title>
<path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
<path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
<path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
</symbol>
<symbol id="icon-file-text2" viewbox="0 0 32 32">
<title>Show/Hide attributes</title>
<path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
<path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
<path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
</symbol>
</defs>
</svg>
<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
</style><div class="xr-wrap"><div class="xr-header"><div class="xr-obj-type">xarray.Dataset</div></div><ul class="xr-sections"><li class="xr-section-item"><input id="section-fed22d40-9f49-48d7-b2b5-70c9bc2b2394" class="xr-section-summary-in" type="checkbox" disabled=""><label for="section-fed22d40-9f49-48d7-b2b5-70c9bc2b2394" class="xr-section-summary" title="Expand/collapse section">Dimensions:</label><div class="xr-section-inline-details"><ul class="xr-dim-list"><li><span class="xr-has-index">replay</span>: 202</li></ul></div><div class="xr-section-details"></div></li><li class="xr-section-item"><input id="section-fa691181-a795-401c-8018-fc82e09f77f6" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-fa691181-a795-401c-8018-fc82e09f77f6" class="xr-section-summary">Coordinates: <span>(1)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span class="xr-has-index">replay</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int64</div><div class="xr-var-preview xr-preview">265 223 402 206 ... 210 188 131 144</div><input id="attrs-9e757de1-f888-402a-9ebd-7edefa00dee3" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-9e757de1-f888-402a-9ebd-7edefa00dee3" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-9d34c563-e64c-4183-947a-0ca0eaaf23ab" class="xr-var-data-in" type="checkbox"><label for="data-9d34c563-e64c-4183-947a-0ca0eaaf23ab" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([265, 223, 402, ..., 188, 131, 144])</pre></li></ul></div></li><li class="xr-section-item"><input id="section-4c306fa7-e653-4196-b77d-8956960d7bfd" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-4c306fa7-e653-4196-b77d-8956960d7bfd" class="xr-section-summary">Data variables: <span>(2)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><ul class="xr-var-list"><li class="xr-var-item"><div class="xr-var-name"><span>enemy_race</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int32</div><div class="xr-var-preview xr-preview">0 1 0 2 0 1 0 1 ... 0 2 1 2 0 1 0 1</div><input id="attrs-ebf4e2db-45e1-4b11-ae33-29e623270e94" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-ebf4e2db-45e1-4b11-ae33-29e623270e94" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-fb9f4d8a-5730-422d-a469-14bbf8218d76" class="xr-var-data-in" type="checkbox"><label for="data-fb9f4d8a-5730-422d-a469-14bbf8218d76" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([0, 1, 0, 2, 0, 1, 0, 1, 1, 2, 0, 1, 1, 2, 2, 1, 0, 1, 1, 0, 2, 0,
       0, 0, 2, 2, 0, 2, 2, 0, 2, 2, 2, 1, 1, 0, 2, 2, 1, 1, 2, 1, 1, 1,
       0, 0, 0, 2, 1, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 0, 0,
       2, 0, 2, 2, 1, 2, 2, 0, 1, 1, 1, 2, 2, 0, 1, 1, 2, 1, 2, 0, 1, 1,
       1, 1, 0, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 1, 2, 0, 2, 1, 2, 2, 0, 0,
       0, 0, 1, 2, 2, 0, 0, 0, 1, 1, 1, 2, 2, 2, 1, 0, 2, 0, 2, 0, 2, 2,
       2, 1, 2, 2, 2, 0, 0, 2, 2, 1, 2, 1, 1, 1, 2, 0, 2, 1, 2, 2, 2, 1,
       0, 0, 1, 2, 2, 1, 2, 0, 0, 1, 2, 0, 0, 0, 2, 2, 0, 2, 2, 2, 1, 0,
       1, 1, 1, 0, 0, 0, 0, 2, 0, 2, 0, 2, 2, 1, 2, 0, 1, 2, 0, 2, 1, 2,
       0, 1, 0, 1], dtype=int32)</pre></li><li class="xr-var-item"><div class="xr-var-name"><span>enemy_mmr</span></div><div class="xr-var-dims">(replay)</div><div class="xr-var-dtype">int32</div><div class="xr-var-preview xr-preview">4038 4163 4089 ... 4185 4000 4188</div><input id="attrs-d86142ca-da28-4a56-87d2-f31fc67d0bef" class="xr-var-attrs-in" type="checkbox" disabled=""><label for="attrs-d86142ca-da28-4a56-87d2-f31fc67d0bef" title="Show/Hide attributes"><svg class="icon xr-icon-file-text2"><use href="#icon-file-text2"></use></svg></label><input id="data-ffdfdf1e-5b89-4558-81a5-68329d89f661" class="xr-var-data-in" type="checkbox"><label for="data-ffdfdf1e-5b89-4558-81a5-68329d89f661" title="Show/Hide data repr"><svg class="icon xr-icon-database"><use href="#icon-database"></use></svg></label><div class="xr-var-attrs"><dl class="xr-attrs"></dl></div><pre class="xr-var-data">array([4038, 4163, 4089, 4196, 4005, 4043, 4036, 4078, 3928, 3936, 3988,
       4014, 4028, 3915, 3896, 4017, 4000, 3936, 4037, 3845, 3980, 3889,
       3979, 3997, 4075, 4115, 3928, 4092, 4006, 3995, 4034, 3889, 3900,
       4011, 3962, 3955, 4054, 3959, 3879, 4072, 4032, 3986, 3966, 4002,
       4238, 3995, 4225, 4098, 4451, 4135, 4042, 4008, 4011, 4152, 4108,
       4095, 4071, 4337, 3848, 4111, 4009, 4144, 4021, 4136, 4213, 4401,
       4444, 4467, 4060, 4193, 4175, 3999, 4004, 4285, 4019, 4190, 4166,
       4183, 4076, 4242, 4017, 4228, 4001, 4099, 4050, 3973, 4037, 3905,
       4240, 4065, 3975, 3919, 4091, 4093, 4045, 4045, 4101, 3975, 4189,
       4047, 4003, 4040, 3997, 4010, 4023, 4004, 3939, 4153, 3962, 4030,
       4050, 4080, 4093, 4071, 4013, 4146, 4109, 4019, 4049, 3998, 4021,
       3959, 3985, 3990, 4002, 4033, 3883, 4123, 4199, 3851, 3889, 4045,
       5035, 3856, 3924, 3902, 4088, 3921, 4055, 3952, 4027, 3905, 3770,
       3940, 3899, 4082, 3921, 3931, 3959, 3998, 3888, 4039, 3988, 4025,
       3831, 3952, 3945, 3869, 3981, 3833, 4008, 4119, 4072, 4047, 4018,
       4427, 4105, 4127, 4225, 4142, 3944, 4040, 4016, 4126, 3960, 3981,
       4040, 4074, 4093, 3887, 4173, 4103, 3929, 4040, 4081, 3949, 4123,
       4253, 4223, 4059, 4028, 3946, 4244, 4304, 4182, 4370, 4194, 4147,
       4232, 4185, 4000, 4188], dtype=int32)</pre></li></ul></div></li><li class="xr-section-item"><input id="section-335b8a1f-0c0f-400e-b378-b92268b53e55" class="xr-section-summary-in" type="checkbox" checked=""><label for="section-335b8a1f-0c0f-400e-b378-b92268b53e55" class="xr-section-summary">Attributes: <span>(4)</span></label><div class="xr-section-inline-details"></div><div class="xr-section-details"><dl class="xr-attrs"><dt><span>created_at :</span></dt><dd>2020-06-20T14:41:40.235138</dd><dt><span>arviz_version :</span></dt><dd>0.8.3</dd><dt><span>inference_library :</span></dt><dd>pymc3</dd><dt><span>inference_library_version :</span></dt><dd>3.9.1</dd></dl></div></li></ul></div></div><br></div>
                      </ul>
                  </div>
            </li>
            
              </ul>
            </div>
            <style> /* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
  --xr-border-color: var(--jp-border-color2, #e0e0e0);
  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
  --xr-background-color: var(--jp-layout-color0, white);
  --xr-background-color-row-even: var(--jp-layout-color1, white);
  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
}

.xr-wrap {
  min-width: 300px;
  max-width: 700px;
}

.xr-header {
  padding-top: 6px;
  padding-bottom: 6px;
  margin-bottom: 4px;
  border-bottom: solid 1px var(--xr-border-color);
}

.xr-header > div,
.xr-header > ul {
  display: inline;
  margin-top: 0;
  margin-bottom: 0;
}

.xr-obj-type,
.xr-array-name {
  margin-left: 2px;
  margin-right: 10px;
}

.xr-obj-type {
  color: var(--xr-font-color2);
}

.xr-sections {
  padding-left: 0 !important;
  display: grid;
  grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.xr-section-item {
  display: contents;
}

.xr-section-item input {
  display: none;
}

.xr-section-item input + label {
  color: var(--xr-disabled-color);
}

.xr-section-item input:enabled + label {
  cursor: pointer;
  color: var(--xr-font-color2);
}

.xr-section-item input:enabled + label:hover {
  color: var(--xr-font-color0);
}

.xr-section-summary {
  grid-column: 1;
  color: var(--xr-font-color2);
  font-weight: 500;
}

.xr-section-summary > span {
  display: inline-block;
  padding-left: 0.5em;
}

.xr-section-summary-in:disabled + label {
  color: var(--xr-font-color2);
}

.xr-section-summary-in + label:before {
  display: inline-block;
  content: '►';
  font-size: 11px;
  width: 15px;
  text-align: center;
}

.xr-section-summary-in:disabled + label:before {
  color: var(--xr-disabled-color);
}

.xr-section-summary-in:checked + label:before {
  content: '▼';
}

.xr-section-summary-in:checked + label > span {
  display: none;
}

.xr-section-summary,
.xr-section-inline-details {
  padding-top: 4px;
  padding-bottom: 4px;
}

.xr-section-inline-details {
  grid-column: 2 / -1;
}

.xr-section-details {
  display: none;
  grid-column: 1 / -1;
  margin-bottom: 5px;
}

.xr-section-summary-in:checked ~ .xr-section-details {
  display: contents;
}

.xr-array-wrap {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 20px auto;
}

.xr-array-wrap > label {
  grid-column: 1;
  vertical-align: top;
}

.xr-preview {
  color: var(--xr-font-color3);
}

.xr-array-preview,
.xr-array-data {
  padding: 0 5px !important;
  grid-column: 2;
}

.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
  display: none;
}

.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
  display: inline-block;
}

.xr-dim-list {
  display: inline-block !important;
  list-style: none;
  padding: 0 !important;
  margin: 0;
}

.xr-dim-list li {
  display: inline-block;
  padding: 0;
  margin: 0;
}

.xr-dim-list:before {
  content: '(';
}

.xr-dim-list:after {
  content: ')';
}

.xr-dim-list li:not(:last-child):after {
  content: ',';
  padding-right: 5px;
}

.xr-has-index {
  font-weight: bold;
}

.xr-var-list,
.xr-var-item {
  display: contents;
}

.xr-var-item > div,
.xr-var-item label,
.xr-var-item > .xr-var-name span {
  background-color: var(--xr-background-color-row-even);
  margin-bottom: 0;
}

.xr-var-item > .xr-var-name:hover span {
  padding-right: 5px;
}

.xr-var-list > li:nth-child(odd) > div,
.xr-var-list > li:nth-child(odd) > label,
.xr-var-list > li:nth-child(odd) > .xr-var-name span {
  background-color: var(--xr-background-color-row-odd);
}

.xr-var-name {
  grid-column: 1;
}

.xr-var-dims {
  grid-column: 2;
}

.xr-var-dtype {
  grid-column: 3;
  text-align: right;
  color: var(--xr-font-color2);
}

.xr-var-preview {
  grid-column: 4;
}

.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-right: 10px;
}

.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
  overflow: visible;
  width: auto;
  z-index: 1;
}

.xr-var-attrs,
.xr-var-data {
  display: none;
  background-color: var(--xr-background-color) !important;
  padding-bottom: 5px !important;
}

.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
  display: block;
}

.xr-var-data > table {
  float: right;
}

.xr-var-name span,
.xr-var-data,
.xr-attrs {
  padding-left: 25px !important;
}

.xr-attrs,
.xr-var-attrs,
.xr-var-data {
  grid-column: 1 / -1;
}

dl.xr-attrs {
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 125px auto;
}

.xr-attrs dt, dd {
  padding: 0;
  margin: 0;
  float: left;
  padding-right: 10px;
  width: auto;
}

.xr-attrs dt {
  font-weight: normal;
  grid-column: 1;
}

.xr-attrs dt:hover span {
  display: inline-block;
  background: var(--xr-background-color);
  padding-right: 10px;
}

.xr-attrs dd {
  grid-column: 2;
  white-space: pre-wrap;
  word-break: break-all;
}

.xr-icon-database,
.xr-icon-file-text2 {
  display: inline-block;
  vertical-align: middle;
  width: 1em;
  height: 1.5em !important;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
.xr-wrap{width:700px!important;} </style>
</div>
</div>
<div id="cell-31" class="cell" data-execution_count="48">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">az.plot_trace(output, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>var_names)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-2">az.plot_posterior(output, var_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var_names)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-3">az.summary(output, var_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var_names)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="48">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">mean</th>
<th data-quarto-table-cell-role="th">sd</th>
<th data-quarto-table-cell-role="th">hdi_3%</th>
<th data-quarto-table-cell-role="th">hdi_97%</th>
<th data-quarto-table-cell-role="th">mcse_mean</th>
<th data-quarto-table-cell-role="th">mcse_sd</th>
<th data-quarto-table-cell-role="th">ess_mean</th>
<th data-quarto-table-cell-role="th">ess_sd</th>
<th data-quarto-table-cell-role="th">ess_bulk</th>
<th data-quarto-table-cell-role="th">ess_tail</th>
<th data-quarto-table-cell-role="th">r_hat</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">μ[0]</td>
<td>4187.331</td>
<td>93.433</td>
<td>4014.681</td>
<td>4370.002</td>
<td>0.827</td>
<td>0.588</td>
<td>12761.0</td>
<td>12620.0</td>
<td>12833.0</td>
<td>5208.0</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">μ[1]</td>
<td>4014.234</td>
<td>97.855</td>
<td>3835.751</td>
<td>4202.949</td>
<td>0.837</td>
<td>0.592</td>
<td>13669.0</td>
<td>13643.0</td>
<td>13703.0</td>
<td>5413.0</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">μ[2]</td>
<td>3961.245</td>
<td>88.126</td>
<td>3794.804</td>
<td>4122.579</td>
<td>0.716</td>
<td>0.516</td>
<td>15147.0</td>
<td>14584.0</td>
<td>15149.0</td>
<td>5685.0</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">σ[0]</td>
<td>79.342</td>
<td>60.635</td>
<td>0.027</td>
<td>187.229</td>
<td>0.751</td>
<td>0.531</td>
<td>6516.0</td>
<td>6516.0</td>
<td>5236.0</td>
<td>3992.0</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">σ[1]</td>
<td>80.221</td>
<td>59.112</td>
<td>0.003</td>
<td>184.095</td>
<td>0.694</td>
<td>0.491</td>
<td>7250.0</td>
<td>7250.0</td>
<td>5667.0</td>
<td>4667.0</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">σ[2]</td>
<td>82.427</td>
<td>62.380</td>
<td>0.020</td>
<td>196.670</td>
<td>0.784</td>
<td>0.554</td>
<td>6330.0</td>
<td>6330.0</td>
<td>5219.0</td>
<td>4182.0</td>
<td>1.0</td>
</tr>
</tbody>
</table>

</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-2_files/figure-html/cell-19-output-2.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-2_files/figure-html/cell-19-output-3.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>And this seems to show I’ve grown more balanced as a player - the daily fluctuations are much more similar between games, I’ve gotten much better against Protoss, slightly worse against Terran, and my PvZ looks like it’ll need some more work. Still, I’m really happy to see the data show I’m not as bad in PvP now!</p>
<p>For the next post, I’m torn between a few experiments I’m running:</p>
<ul>
<li>a hierarchical model to estimate both true global and per-matchup MMR at the same time while sharing information between the three matchups</li>
<li>map dependence, which is going to be easy-ish now that I know how to index variables well</li>
<li>actual time dependence, but I’ll have to read up more on Gaussian processes and random walks to do that.</li>
<li>playing around with prior- and posterior- predictive checks, which was going to be in this post, but it turns out I don’t fully understand them enough yet. This will involve a foray into xarray - the awesome data structure that stores our results.</li>
</ul>
<p>If you have any preference, please say so in the comments; I’ll try to take it into account. Until the next time!</p>


</section>

 ]]></description>
  <category>bayes</category>
  <category>pymc3</category>
  <category>starcraft</category>
  <category>python</category>
  <category>StarCraft II Bayesian replay analysis</category>
  <guid>https://stanczakdominik.github.io/posts/bayes-sc2-2.html</guid>
  <pubDate>Sat, 20 Jun 2020 14:50:00 GMT</pubDate>
</item>
<item>
  <title>Bayesian modeling of StarCraft II ladder performance</title>
  <link>https://stanczakdominik.github.io/posts/bayes-sc2-1.html</link>
  <description><![CDATA[ 





<p>I’ve been in a bit of a pickle recently. I really need to figure out Bayesian inference as practice for my masters’ thesis. I’ve been wondering, <em>what kind of cool project - hopefully with my own data - could I make?</em>, I thought as I fired up StarCraft II in the evening, as I usually do to unwind nowadays. <em>What kind of fun use of <a href="https://docs.pymc.io/">PyMC3, the neat Python library for probabilistic programming</a>, could I showcase?</em>, I wondered as I watched my ladder ratings fall from the distraction. <em>What kind of useful knowledge could I try to acquire using it?</em>, I thought, watching my game performance fluctuate over the course of months.</p>
<p>And then it hit me.</p>
<!-- TEASER_END -->
<p>In this post, I’m going to use PyMC3 to analyse my 2019 StarCraft II ladder games. In particular, I’m going to look at the relation between MMR - MatchMaking Rating, a metric of ladder performance - mine and that of my enemies - and what it can tell us about my win chances.</p>
<section id="a-few-facts-about-starcraft" class="level2">
<h2 class="anchored" data-anchor-id="a-few-facts-about-starcraft">A few facts about StarCraft</h2>
<ul>
<li>SC2 is a fast-paced real-time action/strategy game played competitively all over the world;</li>
<li>Each game of SC2 lasts about 10-30 minutes;</li>
<li>There are three <em>races</em> in SC2, which means factions, each with a completely different playstyle and toolset; I play Protoss (the advanced space aliens) and the other two <del>suck</del> are Terran (scrappy future humans) and Zerg (hivemind insectoid aliens).
<ul>
<li>There is no tribal animosity between players of the races in the community whatsoever.</li>
</ul></li>
<li>Each 1v1 game pits two randomly selected players of similar MMR. Better players have higher MMR, and it’s used to find <strong>worthy</strong> (adequate) <strong>opponents</strong> for you. A Protoss player has three different possible matchups - Protoss vs Protoss (PvP), PvT and PvZ.</li>
</ul>
</section>
<section id="a-few-facts-about-bayesian-inference" class="level2">
<h2 class="anchored" data-anchor-id="a-few-facts-about-bayesian-inference">A few facts about Bayesian inference</h2>
<ul>
<li>it’s an alternate, computationally intensive approach to statistics (of which you probably know frequentist statistics)</li>
<li>it’s a really neat tool to formulate complex models of processes occuring between entities</li>
<li>it can let you infer knowledge about quantities not directly included in your data at all (so-called “latent” quantities)</li>
<li>it can combine data with your initial assumptions (“priors”) or initial beliefs about quantities in your system
<ul>
<li>this means you need to explicitly state what you believe about the data first</li>
</ul></li>
<li>it returns probability distributions for your parameters, rather than simple point estimates like means or variances
<ul>
<li>this makes handling asymmetric uncertainties and error bars much easier</li>
</ul></li>
<li>it’s a great framework for learning new knowledge from data, as I’ll try to show</li>
</ul>
<p>In this post, we’re going to use my own dataset of ladder replays. The motivation is this: there are days when I play terribly and there are days when I play my heart out. It does, however, feel like my performance fluctuates a lot. I thought I could use Bayesian modelling to learn something about these fluctuations.</p>
<p>I was going to have an example of pulling this data using <a href="https://github.com/ZephyrBlu/zephyrus-sc2-parser/">ZephyrBlu’s replay parser library</a> and an unreleased custom wrapper I have for that. However, since I’m getting a ton of warnings that would distract from the main ideas, in the name of simplicity I’ll just post the parsed version on GitHub. I’ll come back to parsing those once I finish that library of mine.</p>
<div id="cell-4" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"></span>
<span id="cb1-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/StanczakDominik/stanczakdominik.github.io/src/files/replays.csv"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-4">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.to_datetime(df.time_played_at)</span>
<span id="cb1-5">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">time_played_at</th>
<th data-quarto-table-cell-role="th">win</th>
<th data-quarto-table-cell-role="th">race</th>
<th data-quarto-table-cell-role="th">enemy_race</th>
<th data-quarto-table-cell-role="th">mmr</th>
<th data-quarto-table-cell-role="th">mmr_diff</th>
<th data-quarto-table-cell-role="th">enemy_nickame</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2020-05-27 10:32:29+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>4004</td>
<td>-169</td>
<td>giletjaune</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2020-06-09 17:11:15+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>4186</td>
<td>39</td>
<td>djakette</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2020-02-02 17:27:27+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>3971</td>
<td>58</td>
<td>Syocto</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2019-12-20 18:53:00+00:00</td>
<td>True</td>
<td>Zerg</td>
<td>Terran</td>
<td>2984</td>
<td>-106</td>
<td>Jason</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2019-12-09 20:36:21+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>4015</td>
<td>-9</td>
<td>&amp;lt;OGCOСK&amp;gt;&lt;sp/&gt;ShushYo</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">432</td>
<td>2019-11-04 20:53:20+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Terran</td>
<td>3800</td>
<td>-83</td>
<td>&amp;lt;MiClan&amp;gt;&lt;sp/&gt;MiSHANYA</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">433</td>
<td>2020-05-04 12:43:06+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>3926</td>
<td>95</td>
<td>StaMinA</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">434</td>
<td>2020-02-02 17:15:06+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>4012</td>
<td>-80</td>
<td>&amp;lt;0mg&amp;gt;&lt;sp/&gt;Sroljo</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">435</td>
<td>2020-04-19 11:48:32+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>0</td>
<td>0</td>
<td>shadowofmich</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">436</td>
<td>2020-04-30 18:34:01+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>3964</td>
<td>-91</td>
<td>&amp;lt;BRs&amp;gt;&lt;sp/&gt;GoodFellas</td>
</tr>
</tbody>
</table>

<p>437 rows × 7 columns</p>
</div>
</div>
</div>
</section>
<section id="mmr-vs-elo" class="level1">
<h1>MMR vs Elo</h1>
<p>We’re going to need to figure out a way to connect MMR to winning probabilities. Each game won awards a certain amount of MMR which depends on the difference between the two players’ pre-match MMR. If you win against a player you weren’t expected to beat, the system awards you more MMR - and the other player loses the exact large amount.</p>
<p>Interestingly, according to some wonderful sleuthing by <a href="https://www.reddit.com/r/starcraft/comments/6dn6jf/does_anybody_have_more_detailed_stats_on_mmr/di3yg0x/">u/MisterL2 on r/starcraft</a>, MMR is basically the classic <a href="https://en.wikipedia.org/wiki/Elo_rating_system">chess Elo rating</a>, except for a simple scaling - 100 Elo is basically 220 MMR. With the Elo estimated win percentage formula depending on the difference in Elo (<img src="https://latex.codecogs.com/png.latex?%5CDelta_%7BElo%7D">) as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(%5Ctext%7Bwin%7D)%20=%20%5Cleft(1%20+%2010%5E%7B-%5CDelta_%7BElo%7D/400%7D%5Cright)%5E%7B-1%7D%20"></p>
<p>We can adjust to MMR as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20P(%5Ctext%7Bwin%7D)%20=%20%5Cleft(1%20+%2010%5E%7B-%5CDelta_%7BMMR%7D/880%7D%5Cright)%5E%7B-1%7D%20"></p>
<p>As a quick check, let’s compare with the <a href="https://imgur.com/a/Suj8E">sample data provided</a>:</p>
<div id="cell-7" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> MMR_winrate(diff):</span>
<span id="cb2-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>diff<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">880</span>))</span>
<span id="cb2-3"></span>
<span id="cb2-4">diffs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb2-5">diffs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate([<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>diffs[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], diffs])</span>
<span id="cb2-6">winrates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.564</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.626</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.686</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.742</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.793</span>])</span>
<span id="cb2-7">winrates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>winrates[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], winrates])</span>
<span id="cb2-8">plt.scatter(diffs, winrates, label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data from u/MisterL2"</span>)</span>
<span id="cb2-9">diffs_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(diffs.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(), diffs.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>())</span>
<span id="cb2-10">approx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MMR_winrate(diffs_plot)</span>
<span id="cb2-11">plt.plot(diffs_plot, approx, label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Our approximate formula"</span>)</span>
<span id="cb2-12">plt.legend()</span>
<span id="cb2-13">plt.setp(plt.gca(), xlabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"$\Delta_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{MMR}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">$"</span>, ylabel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Win %"</span>, ylim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-1_files/figure-html/cell-3-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Splendid.</p>
</section>
<section id="digging-into-the-data" class="level1">
<h1>Digging into the data</h1>
<p>We’ll need the MMR differences, and we’ll use those to calculate the expected winrates:</p>
<div id="cell-9" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.sort_values(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>)</span>
<span id="cb3-2">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_mmr'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr_diff'</span>]</span>
<span id="cb3-3">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'expected_winrate'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MMR_winrate(df.mmr_diff)</span>
<span id="cb3-4">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">time_played_at</th>
<th data-quarto-table-cell-role="th">win</th>
<th data-quarto-table-cell-role="th">race</th>
<th data-quarto-table-cell-role="th">enemy_race</th>
<th data-quarto-table-cell-role="th">mmr</th>
<th data-quarto-table-cell-role="th">mmr_diff</th>
<th data-quarto-table-cell-role="th">enemy_nickame</th>
<th data-quarto-table-cell-role="th">enemy_mmr</th>
<th data-quarto-table-cell-role="th">expected_winrate</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">155</td>
<td>2019-09-11 15:22:43+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>-36400</td>
<td>-39206</td>
<td>winstrol</td>
<td>2806</td>
<td>2.803672e-45</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">396</td>
<td>2019-09-11 15:35:39+00:00</td>
<td>True</td>
<td>Zerg</td>
<td>Zerg</td>
<td>-36400</td>
<td>-38905</td>
<td>OtecAnisim</td>
<td>2505</td>
<td>6.162724e-45</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">321</td>
<td>2019-09-12 10:42:41+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>-36400</td>
<td>-38579</td>
<td>ujptm</td>
<td>2179</td>
<td>1.446196e-44</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">373</td>
<td>2019-09-12 10:53:37+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>-36400</td>
<td>-38935</td>
<td>&amp;lt;klko&amp;gt;&lt;sp/&gt;marauder</td>
<td>2535</td>
<td>5.697467e-45</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">408</td>
<td>2019-09-12 16:28:28+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>-36400</td>
<td>-39229</td>
<td>Toidak</td>
<td>2829</td>
<td>2.639921e-45</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">145</td>
<td>2020-06-04 19:18:46+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>4181</td>
<td>-189</td>
<td>&amp;lt;AiRǂ&amp;gt;&lt;sp/&gt;SuperNova</td>
<td>4370</td>
<td>3.788264e-01</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">255</td>
<td>2020-06-09 16:57:17+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Protoss</td>
<td>0</td>
<td>0</td>
<td>A.I. 1 (Elite)</td>
<td>0</td>
<td>5.000000e-01</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">79</td>
<td>2020-06-09 17:03:47+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Protoss</td>
<td>4208</td>
<td>14</td>
<td>Ziiim</td>
<td>4194</td>
<td>5.091570e-01</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2020-06-09 17:11:15+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>4186</td>
<td>39</td>
<td>djakette</td>
<td>4147</td>
<td>5.254895e-01</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">207</td>
<td>2020-06-09 17:24:17+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Terran</td>
<td>4164</td>
<td>-68</td>
<td>StaMinA</td>
<td>4232</td>
<td>4.556352e-01</td>
</tr>
</tbody>
</table>

<p>437 rows × 9 columns</p>
</div>
</div>
</div>
<div id="cell-10" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> altair</span>
<span id="cb4-2"></span>
<span id="cb4-3">altair.Chart(df).mark_circle().encode(</span>
<span id="cb4-4">    altair.X(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>),</span>
<span id="cb4-5">    altair.Y(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr'</span>,</span>
<span id="cb4-6">             scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Scale(zero<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)),</span>
<span id="cb4-7">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_race'</span>,</span>
<span id="cb4-8">).interactive()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">

<div id="altair-viz-daf4dd381e1d405aa215f9351340d643"></div>
<script type="text/javascript">
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-daf4dd381e1d405aa215f9351340d643") {
      outputDiv = document.getElementById("altair-viz-daf4dd381e1d405aa215f9351340d643");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm//vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm//vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm//vega-lite@4.8.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm//vega-embed@6?noext",
    };

    function loadScript(lib) {
      return new Promise(function(resolve, reject) {
        var s = document.createElement('script');
        s.src = paths[lib];
        s.async = true;
        s.onload = () => resolve(paths[lib]);
        s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
        document.getElementsByTagName("head")[0].appendChild(s);
      });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else if (typeof vegaEmbed === "function") {
      displayChart(vegaEmbed);
    } else {
      loadScript("vega")
        .then(() => loadScript("vega-lite"))
        .then(() => loadScript("vega-embed"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 400, "continuousHeight": 300}}, "data": {"name": "data-8a274c0b4424e61b1f0b334c69764226"}, "mark": "circle", "encoding": {"color": {"type": "nominal", "field": "enemy_race"}, "x": {"type": "temporal", "field": "time_played_at"}, "y": {"type": "quantitative", "field": "mmr", "scale": {"zero": false}}}, "selection": {"selector001": {"type": "interval", "bind": "scales", "encodings": ["x", "y"]}}, "$schema": "https://vega.github.io/schema/vega-lite/v4.8.1.json", "datasets": {"data-8a274c0b4424e61b1f0b334c69764226": [{"time_played_at": "2019-09-11T15:22:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": -36400, "mmr_diff": -39206, "enemy_nickame": "winstrol", "enemy_mmr": 2806, "expected_winrate": 2.803672441094673e-45}, {"time_played_at": "2019-09-11T15:35:39+00:00", "win": true, "race": "Zerg", "enemy_race": "Zerg", "mmr": -36400, "mmr_diff": -38905, "enemy_nickame": "OtecAnisim", "enemy_mmr": 2505, "expected_winrate": 6.162724129903119e-45}, {"time_played_at": "2019-09-12T10:42:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": -36400, "mmr_diff": -38579, "enemy_nickame": "ujptm", "enemy_mmr": 2179, "expected_winrate": 1.4461963887190294e-44}, {"time_played_at": "2019-09-12T10:53:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": -36400, "mmr_diff": -38935, "enemy_nickame": "&lt;klko&gt;<sp/>marauder", "enemy_mmr": 2535, "expected_winrate": 5.697466997066993e-45}, {"time_played_at": "2019-09-12T16:28:28+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": -36400, "mmr_diff": -39229, "enemy_nickame": "Toidak", "enemy_mmr": 2829, "expected_winrate": 2.6399208683906336e-45}, {"time_played_at": "2019-09-13T20:52:33+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": -36400, "mmr_diff": -39378, "enemy_nickame": "oldmannap", "enemy_mmr": 2978, "expected_winrate": 1.7876098016342542e-45}, {"time_played_at": "2019-09-14T07:10:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": -36400, "mmr_diff": -39703, "enemy_nickame": "Gulgorf", "enemy_mmr": 3303, "expected_winrate": 7.637558424480755e-46}, {"time_played_at": "2019-09-17T19:00:36+00:00", "win": true, "race": "Zerg", "enemy_race": "Protoss", "mmr": -36400, "mmr_diff": -38954, "enemy_nickame": "Aertemis", "enemy_mmr": 2554, "expected_winrate": 5.4211435711066484e-45}, {"time_played_at": "2019-09-23T16:05:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": -36400, "mmr_diff": -39735, "enemy_nickame": "leChrist", "enemy_mmr": 3335, "expected_winrate": 7.024103610412749e-46}, {"time_played_at": "2019-09-24T16:17:17+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": -36400, "mmr_diff": -41081, "enemy_nickame": "&lt;FxL&gt;<sp/>VokinLoksar", "enemy_mmr": 4681, "expected_winrate": 2.075130695407903e-47}, {"time_played_at": "2019-09-24T16:26:09+00:00", "win": true, "race": "Zerg", "enemy_race": "Terran", "mmr": -36400, "mmr_diff": -38939, "enemy_nickame": "Ayals", "enemy_mmr": 2539, "expected_winrate": 5.638146595673047e-45}, {"time_played_at": "2019-09-25T16:36:01+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": -36400, "mmr_diff": -39915, "enemy_nickame": "HeadAge", "enemy_mmr": 3515, "expected_winrate": 4.38576598097316e-46}, {"time_played_at": "2019-09-25T16:49:17+00:00", "win": true, "race": "Zerg", "enemy_race": "Protoss", "mmr": -36400, "mmr_diff": 0, "enemy_nickame": "grishaadf", "enemy_mmr": -36400, "expected_winrate": 0.5}, {"time_played_at": "2019-09-26T10:06:38+00:00", "win": true, "race": "Zerg", "enemy_race": "Zerg", "mmr": -36400, "mmr_diff": -39401, "enemy_nickame": "&lt;SAZZ&gt;<sp/>LINUSWES", "enemy_mmr": 3001, "expected_winrate": 1.6832024849633835e-45}, {"time_played_at": "2019-09-26T17:21:45+00:00", "win": true, "race": "Zerg", "enemy_race": "Terran", "mmr": -36400, "mmr_diff": -39738, "enemy_nickame": "&lt;oooboy&gt;<sp/>Ojtech", "enemy_mmr": 3338, "expected_winrate": 6.969182191364358e-46}, {"time_played_at": "2019-10-04T11:08:46+00:00", "win": true, "race": "Zerg", "enemy_race": "Protoss", "mmr": -36400, "mmr_diff": -39812, "enemy_nickame": "NikkooO", "enemy_mmr": 3412, "expected_winrate": 5.742366522415609e-46}, {"time_played_at": "2019-10-05T09:12:10+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": -36400, "mmr_diff": -40074, "enemy_nickame": "&lt;TLBK&gt;<sp/>Nightly", "enemy_mmr": 3674, "expected_winrate": 2.8931012728183836e-46}, {"time_played_at": "2019-10-06T12:23:56+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3751, "mmr_diff": 25, "enemy_nickame": "MJM", "enemy_mmr": 3726, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2019-10-06T12:36:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3826, "mmr_diff": 78, "enemy_nickame": "vasea", "enemy_mmr": 3748, "expected_winrate": 0.550846817630644}, {"time_played_at": "2019-10-08T19:28:16+00:00", "win": true, "race": "Zerg", "enemy_race": "Zerg", "mmr": 2800, "mmr_diff": 49, "enemy_nickame": "FullmetalRak", "enemy_mmr": 2751, "expected_winrate": 0.5320091949397798}, {"time_played_at": "2019-10-08T19:33:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3893, "mmr_diff": -53, "enemy_nickame": "Wavelength", "enemy_mmr": 3946, "expected_winrate": 0.4653858512231642}, {"time_played_at": "2019-10-09T19:03:59+00:00", "win": true, "race": "Zerg", "enemy_race": "Terran", "mmr": 2960, "mmr_diff": -21, "enemy_nickame": "KerMiTe", "enemy_mmr": 2981, "expected_winrate": 0.48626644195181074}, {"time_played_at": "2019-10-09T19:06:50+00:00", "win": false, "race": "Zerg", "enemy_race": "Protoss", "mmr": 3125, "mmr_diff": -11, "enemy_nickame": "Justify", "enemy_mmr": 3136, "expected_winrate": 0.49280491829094863}, {"time_played_at": "2019-10-09T19:24:28+00:00", "win": true, "race": "Zerg", "enemy_race": "Protoss", "mmr": 2855, "mmr_diff": 55, "enemy_nickame": "Decadance", "enemy_mmr": 2800, "expected_winrate": 0.5359159269451023}, {"time_played_at": "2019-10-10T07:41:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3828, "mmr_diff": 26, "enemy_nickame": "PereiRa", "enemy_mmr": 3802, "expected_winrate": 0.5170011742274881}, {"time_played_at": "2019-10-10T07:55:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3760, "mmr_diff": -56, "enemy_nickame": "&lt;PROOO&gt;<sp/>Jesperpro", "enemy_mmr": 3816, "expected_winrate": 0.46343336634463533}, {"time_played_at": "2019-10-10T20:42:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3827, "mmr_diff": 126, "enemy_nickame": "Pippuri", "enemy_mmr": 3701, "expected_winrate": 0.5816835383970852}, {"time_played_at": "2019-10-11T09:19:52+00:00", "win": true, "race": "Zerg", "enemy_race": "Terran", "mmr": 2952, "mmr_diff": 39352, "enemy_nickame": "indy", "enemy_mmr": -36400, "expected_winrate": 1.0}, {"time_played_at": "2019-10-12T14:14:32+00:00", "win": false, "race": "Zerg", "enemy_race": "Protoss", "mmr": 3053, "mmr_diff": -7, "enemy_nickame": "&lt;LSDW&gt;<sp/>kaboum", "enemy_mmr": 3060, "expected_winrate": 0.4954211235617789}, {"time_played_at": "2019-10-12T14:27:06+00:00", "win": true, "race": "Zerg", "enemy_race": "Protoss", "mmr": 2866, "mmr_diff": -21, "enemy_nickame": "PycckuuXAKEP", "enemy_mmr": 2887, "expected_winrate": 0.48626644195181074}, {"time_played_at": "2019-10-14T19:10:22+00:00", "win": true, "race": "Zerg", "enemy_race": "Protoss", "mmr": 2956, "mmr_diff": 0, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 2956, "expected_winrate": 0.5}, {"time_played_at": "2019-10-14T19:15:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3878, "mmr_diff": 17, "enemy_nickame": "Supermaru", "enemy_mmr": 3861, "expected_winrate": 0.5111186061324027}, {"time_played_at": "2019-10-14T19:45:44+00:00", "win": true, "race": "Zerg", "enemy_race": "Terran", "mmr": 3039, "mmr_diff": -35, "enemy_nickame": "RoBoT", "enemy_mmr": 3074, "expected_winrate": 0.4771209659055845}, {"time_played_at": "2019-10-20T16:35:03+00:00", "win": true, "race": "Zerg", "enemy_race": "Zerg", "mmr": 3119, "mmr_diff": 40, "enemy_nickame": "greg", "enemy_mmr": 3079, "expected_winrate": 0.5261418801396169}, {"time_played_at": "2019-10-21T11:14:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3819, "mmr_diff": -88, "enemy_nickame": "&lt;IDLK&gt;<sp/>jasben", "enemy_mmr": 3907, "expected_winrate": 0.44268836623770724}, {"time_played_at": "2019-10-21T11:46:27+00:00", "win": false, "race": "Zerg", "enemy_race": "Protoss", "mmr": 3185, "mmr_diff": 63, "enemy_nickame": "AcahCruv", "enemy_mmr": 3122, "expected_winrate": 0.5411179718915647}, {"time_played_at": "2019-10-22T11:34:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3881, "mmr_diff": -185, "enemy_nickame": "&lt;\u041d\u0422\u0422&gt;<sp/>SPQR", "enemy_mmr": 4066, "expected_winrate": 0.3812924158311464}, {"time_played_at": "2019-10-22T11:42:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3840, "mmr_diff": 83, "enemy_nickame": "NiGHTKiNG", "enemy_mmr": 3757, "expected_winrate": 0.5540815127263503}, {"time_played_at": "2019-10-22T12:04:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3885, "mmr_diff": -465, "enemy_nickame": "&lt;\u041c\u041486&gt;<sp/>Moldovanin", "enemy_mmr": 4350, "expected_winrate": 0.22851649491264128}, {"time_played_at": "2019-10-22T12:19:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3862, "mmr_diff": -102, "enemy_nickame": "Zergorix", "enemy_mmr": 3964, "expected_winrate": 0.433670620409041}, {"time_played_at": "2019-10-29T09:14:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3881, "mmr_diff": 40281, "enemy_nickame": "teror", "enemy_mmr": -36400, "expected_winrate": 1.0}, {"time_played_at": "2019-10-29T09:32:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3821, "mmr_diff": -73, "enemy_nickame": "Tomaso", "enemy_mmr": 3894, "expected_winrate": 0.4523921838509467}, {"time_played_at": "2019-10-29T11:14:53+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3871, "mmr_diff": 890, "enemy_nickame": "YellowCoke", "enemy_mmr": 2981, "expected_winrate": 0.9112303439884303}, {"time_played_at": "2019-10-29T11:20:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3915, "mmr_diff": -17, "enemy_nickame": "abelian", "enemy_mmr": 3932, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2019-10-29T11:28:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3873, "mmr_diff": -79, "enemy_nickame": "abelian", "enemy_mmr": 3952, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2019-10-29T11:42:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3836, "mmr_diff": -119, "enemy_nickame": "llllllllllll", "enemy_mmr": 3955, "expected_winrate": 0.4227798108220997}, {"time_played_at": "2019-10-29T18:17:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3802, "mmr_diff": -110, "enemy_nickame": "beh", "enemy_mmr": 3912, "expected_winrate": 0.4285368825916186}, {"time_played_at": "2019-10-29T18:18:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3767, "mmr_diff": 27, "enemy_nickame": "Hannibal", "enemy_mmr": 3740, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2019-10-29T18:34:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3728, "mmr_diff": -16, "enemy_nickame": "&lt;Dobro&gt;<sp/>\u043f\u0438\u0440\u0430\u0436\u043e\u043a", "enemy_mmr": 3744, "expected_winrate": 0.4895352325390119}, {"time_played_at": "2019-10-30T06:51:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3881, "mmr_diff": 40281, "enemy_nickame": "&lt;WPGG&gt;<sp/>Destructor", "enemy_mmr": -36400, "expected_winrate": 1.0}, {"time_played_at": "2019-10-30T07:06:31+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3881, "mmr_diff": 389, "enemy_nickame": "Paulie", "enemy_mmr": 3492, "expected_winrate": 0.7345530624972029}, {"time_played_at": "2019-10-31T18:12:23+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3881, "mmr_diff": -761, "enemy_nickame": "Tyson", "enemy_mmr": 4642, "expected_winrate": 0.12012861418038036}, {"time_played_at": "2019-10-31T18:19:19+00:00", "win": false, "race": "Zerg", "enemy_race": "Protoss", "mmr": 3109, "mmr_diff": 0, "enemy_nickame": "minbear", "enemy_mmr": 3109, "expected_winrate": 0.5}, {"time_played_at": "2019-10-31T18:26:16+00:00", "win": false, "race": "Zerg", "enemy_race": "Zerg", "mmr": 3042, "mmr_diff": -36, "enemy_nickame": "Rwzzz", "enemy_mmr": 3078, "expected_winrate": 0.47646823150757606}, {"time_played_at": "2019-10-31T18:41:02+00:00", "win": true, "race": "Zerg", "enemy_race": "Protoss", "mmr": 2982, "mmr_diff": -5, "enemy_nickame": "Anarazel", "enemy_mmr": 2987, "expected_winrate": 0.4967293291893}, {"time_played_at": "2019-10-31T18:55:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3766, "mmr_diff": 10, "enemy_nickame": "Granaatappel", "enemy_mmr": 3756, "expected_winrate": 0.506541061734927}, {"time_played_at": "2019-10-31T19:07:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3730, "mmr_diff": 66, "enemy_nickame": "&lt;IndyK&gt;<sp/>Sven", "enemy_mmr": 3664, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2019-11-01T09:05:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3691, "mmr_diff": -78, "enemy_nickame": "&lt;NerCC&gt;<sp/>speck", "enemy_mmr": 3769, "expected_winrate": 0.4491531823693559}, {"time_played_at": "2019-11-01T09:15:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3729, "mmr_diff": -142, "enemy_nickame": "Ghalib", "enemy_mmr": 3871, "expected_winrate": 0.40816569372083916}, {"time_played_at": "2019-11-01T10:57:15+00:00", "win": true, "race": "Zerg", "enemy_race": "Terran", "mmr": 3043, "mmr_diff": 126, "enemy_nickame": "Varrag", "enemy_mmr": 2917, "expected_winrate": 0.5816835383970852}, {"time_played_at": "2019-11-01T11:09:16+00:00", "win": true, "race": "Zerg", "enemy_race": "Zerg", "mmr": 3092, "mmr_diff": 47, "enemy_nickame": "dabo", "enemy_mmr": 3045, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2019-11-01T11:30:59+00:00", "win": true, "race": "Zerg", "enemy_race": "Terran", "mmr": 3144, "mmr_diff": 16, "enemy_nickame": "AUzg", "enemy_mmr": 3128, "expected_winrate": 0.5104647674609881}, {"time_played_at": "2019-11-01T11:53:00+00:00", "win": false, "race": "Zerg", "enemy_race": "Terran", "mmr": 3196, "mmr_diff": 6, "enemy_nickame": "Wormzor", "enemy_mmr": 3190, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-11-01T13:31:50+00:00", "win": false, "race": "Zerg", "enemy_race": "Terran", "mmr": 3145, "mmr_diff": -8, "enemy_nickame": "qwe", "enemy_mmr": 3153, "expected_winrate": 0.4947670431385224}, {"time_played_at": "2019-11-01T13:38:34+00:00", "win": false, "race": "Zerg", "enemy_race": "Terran", "mmr": 3096, "mmr_diff": -60, "enemy_nickame": "Gladiator", "enemy_mmr": 3156, "expected_winrate": 0.4608318064655481}, {"time_played_at": "2019-11-01T13:42:38+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3696, "mmr_diff": 65, "enemy_nickame": "&lt;PiGPan&gt;<sp/>Garethax", "enemy_mmr": 3631, "expected_winrate": 0.5424171287450194}, {"time_played_at": "2019-11-01T14:22:03+00:00", "win": true, "race": "Zerg", "enemy_race": "Terran", "mmr": 3052, "mmr_diff": -104, "enemy_nickame": "&lt;Z\u0415RGML&gt;<sp/>\u0424\u0435\u0434\u044f", "enemy_mmr": 3156, "expected_winrate": 0.4323858060178517}, {"time_played_at": "2019-11-01T14:28:00+00:00", "win": false, "race": "Zerg", "enemy_race": "Zerg", "mmr": 3104, "mmr_diff": -36, "enemy_nickame": "&lt;THUT&gt;<sp/>Vladosik", "enemy_mmr": 3140, "expected_winrate": 0.47646823150757606}, {"time_played_at": "2019-11-02T17:45:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3661, "mmr_diff": 30, "enemy_nickame": "KKroer", "enemy_mmr": 3631, "expected_winrate": 0.5196142341997408}, {"time_played_at": "2019-11-02T17:46:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3691, "mmr_diff": 85, "enemy_nickame": "&lt;A\u01c2move&gt;<sp/>AmoveZerg", "enemy_mmr": 3606, "expected_winrate": 0.5553741249668821}, {"time_played_at": "2019-11-02T17:51:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3718, "mmr_diff": 33, "enemy_nickame": "Hazard", "enemy_mmr": 3685, "expected_winrate": 0.5215733330511455}, {"time_played_at": "2019-11-02T17:55:38+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3688, "mmr_diff": 62, "enemy_nickame": "Pleydellia", "enemy_mmr": 3626, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2019-11-02T18:05:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "A.I. 1 (Very Easy)", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2019-11-02T20:06:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3655, "mmr_diff": 8, "enemy_nickame": "lllllll", "enemy_mmr": 3647, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-11-02T20:15:14+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3684, "mmr_diff": 58, "enemy_nickame": "lllllll", "enemy_mmr": 3626, "expected_winrate": 0.5378676713661427}, {"time_played_at": "2019-11-02T20:29:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3711, "mmr_diff": -25, "enemy_nickame": "&lt;PiGPan&gt;<sp/>Noose", "enemy_mmr": 3736, "expected_winrate": 0.48365224166479165}, {"time_played_at": "2019-11-03T11:18:56+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3740, "mmr_diff": -44, "enemy_nickame": "&lt;DaGOAT&gt;<sp/>Sinus", "enemy_mmr": 3784, "expected_winrate": 0.4712494361077314}, {"time_played_at": "2019-11-03T11:35:01+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3769, "mmr_diff": -87, "enemy_nickame": "&lt;LESeV&gt;<sp/>iceclaw", "enemy_mmr": 3856, "expected_winrate": 0.44333401172275544}, {"time_played_at": "2019-11-04T20:40:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3799, "mmr_diff": -67, "enemy_nickame": "&lt;FreeHK&gt;<sp/>jellun", "enemy_mmr": 3866, "expected_winrate": 0.4562842910331827}, {"time_played_at": "2019-11-04T20:46:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3825, "mmr_diff": -22, "enemy_nickame": "North", "enemy_mmr": 3847, "expected_winrate": 0.48561281583400134}, {"time_played_at": "2019-11-04T20:53:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3800, "mmr_diff": -83, "enemy_nickame": "&lt;MiClan&gt;<sp/>MiSHANYA", "enemy_mmr": 3883, "expected_winrate": 0.44591848727364963}, {"time_played_at": "2019-11-04T20:57:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3777, "mmr_diff": 16, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 3761, "expected_winrate": 0.5104647674609881}, {"time_played_at": "2019-11-05T18:35:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3752, "mmr_diff": 66, "enemy_nickame": "Fleetz", "enemy_mmr": 3686, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2019-11-05T18:43:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3774, "mmr_diff": -53, "enemy_nickame": "&lt;XsR&gt;<sp/>Ajotaele", "enemy_mmr": 3827, "expected_winrate": 0.4653858512231642}, {"time_played_at": "2019-11-05T18:48:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3752, "mmr_diff": -19, "enemy_nickame": "&lt;dumbfu&gt;<sp/>cheesus", "enemy_mmr": 3771, "expected_winrate": 0.4875738328873896}, {"time_played_at": "2019-11-05T18:58:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3776, "mmr_diff": 24, "enemy_nickame": "smthFISHYcmg", "enemy_mmr": 3752, "expected_winrate": 0.5156942865406842}, {"time_played_at": "2019-11-06T21:43:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3798, "mmr_diff": -5, "enemy_nickame": "ProtoZZavr", "enemy_mmr": 3803, "expected_winrate": 0.4967293291893}, {"time_played_at": "2019-11-07T18:09:53+00:00", "win": false, "race": "Zerg", "enemy_race": "Zerg", "mmr": 3062, "mmr_diff": -6, "enemy_nickame": "FABBZH", "enemy_mmr": 3068, "expected_winrate": 0.4960752196582488}, {"time_played_at": "2019-11-07T18:24:02+00:00", "win": true, "race": "Zerg", "enemy_race": "Protoss", "mmr": 3019, "mmr_diff": 129, "enemy_nickame": "Icec\u00f6ld", "enemy_mmr": 2890, "expected_winrate": 0.5835923602312532}, {"time_played_at": "2019-11-08T09:33:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3821, "mmr_diff": -101, "enemy_nickame": "Zend", "enemy_mmr": 3922, "expected_winrate": 0.4343133632425947}, {"time_played_at": "2019-11-12T09:42:59+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3847, "mmr_diff": -41, "enemy_nickame": "&lt;UATeam&gt;<sp/>click", "enemy_mmr": 3888, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2019-11-12T09:49:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3870, "mmr_diff": -30, "enemy_nickame": "midhigh", "enemy_mmr": 3900, "expected_winrate": 0.4803857658002591}, {"time_played_at": "2019-11-12T10:06:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3890, "mmr_diff": -72, "enemy_nickame": "Paulie", "enemy_mmr": 3962, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2019-11-17T09:52:24+00:00", "win": false, "race": "Zerg", "enemy_race": "Protoss", "mmr": 3054, "mmr_diff": -8, "enemy_nickame": "Unity", "enemy_mmr": 3062, "expected_winrate": 0.4947670431385224}, {"time_played_at": "2019-11-17T09:58:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3913, "mmr_diff": -79, "enemy_nickame": "TrashCanMan", "enemy_mmr": 3992, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2019-11-17T10:20:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3894, "mmr_diff": 96, "enemy_nickame": "MightyMurloc", "enemy_mmr": 3798, "expected_winrate": 0.5624696497063278}, {"time_played_at": "2019-11-18T15:35:35+00:00", "win": true, "race": "Zerg", "enemy_race": "Protoss", "mmr": 3014, "mmr_diff": -9, "enemy_nickame": "&lt;DayJ&gt;<sp/>Fuzzy", "enemy_mmr": 3023, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-11-18T15:44:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3913, "mmr_diff": 116, "enemy_nickame": "&lt;lLiTl&gt;<sp/>Eniman", "enemy_mmr": 3797, "expected_winrate": 0.5753034142357183}, {"time_played_at": "2019-11-18T15:58:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3893, "mmr_diff": 103, "enemy_nickame": "\u0432\u043b\u0430\u0434", "enemy_mmr": 3790, "expected_winrate": 0.5669718993599533}, {"time_played_at": "2019-11-18T16:08:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3911, "mmr_diff": -55, "enemy_nickame": "trouth", "enemy_mmr": 3966, "expected_winrate": 0.4640840730548977}, {"time_played_at": "2019-11-18T16:17:57+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3891, "mmr_diff": 10, "enemy_nickame": "OlympusRoyal", "enemy_mmr": 3881, "expected_winrate": 0.506541061734927}, {"time_played_at": "2019-11-18T17:08:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3912, "mmr_diff": 89, "enemy_nickame": "InsighT", "enemy_mmr": 3823, "expected_winrate": 0.557957085634325}, {"time_played_at": "2019-11-18T17:26:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3888, "mmr_diff": -16, "enemy_nickame": "trouth", "enemy_mmr": 3904, "expected_winrate": 0.4895352325390119}, {"time_played_at": "2019-11-18T17:32:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3910, "mmr_diff": -10, "enemy_nickame": "Raver", "enemy_mmr": 3920, "expected_winrate": 0.49345893826507303}, {"time_played_at": "2019-11-18T17:48:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3889, "mmr_diff": -18, "enemy_nickame": "&lt;TheDOH&gt;<sp/>secretspace", "enemy_mmr": 3907, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2019-11-18T18:03:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3911, "mmr_diff": -50, "enemy_nickame": "Cosmobrother", "enemy_mmr": 3961, "expected_winrate": 0.4673393974095765}, {"time_played_at": "2019-11-19T07:23:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3934, "mmr_diff": 60, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 3874, "expected_winrate": 0.5391681935344519}, {"time_played_at": "2019-11-19T18:45:19+00:00", "win": false, "race": "Zerg", "enemy_race": "Terran", "mmr": 3054, "mmr_diff": 14, "enemy_nickame": "MooseMan", "enemy_mmr": 3040, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-11-19T19:02:22+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3954, "mmr_diff": 384, "enemy_nickame": "&lt;EESC&gt;<sp/>penduloSFX", "enemy_mmr": 3570, "expected_winrate": 0.7319942855046018}, {"time_played_at": "2019-11-19T19:05:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3972, "mmr_diff": -387, "enemy_nickame": "Pudgey", "enemy_mmr": 4359, "expected_winrate": 0.2664685738023793}, {"time_played_at": "2019-11-19T19:10:36+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3947, "mmr_diff": -62, "enemy_nickame": "&lt;TDDA&gt;<sp/>EMM", "enemy_mmr": 4009, "expected_winrate": 0.45953181733049886}, {"time_played_at": "2019-11-19T19:33:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3950, "mmr_diff": 91, "enemy_nickame": "YvanDuR\u00eave", "enemy_mmr": 3859, "expected_winrate": 0.5592474000561543}, {"time_played_at": "2019-11-20T07:59:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3969, "mmr_diff": -19, "enemy_nickame": "BuRneR", "enemy_mmr": 3988, "expected_winrate": 0.4875738328873896}, {"time_played_at": "2019-11-20T08:19:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3948, "mmr_diff": 63, "enemy_nickame": "&lt;CocoCo&gt;<sp/>Goty", "enemy_mmr": 3885, "expected_winrate": 0.5411179718915647}, {"time_played_at": "2019-11-25T17:23:07+00:00", "win": true, "race": "Zerg", "enemy_race": "Protoss", "mmr": 3015, "mmr_diff": 47, "enemy_nickame": "&lt;b0O0n&gt;<sp/>DrLove", "enemy_mmr": 2968, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2019-11-25T17:38:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3925, "mmr_diff": -95, "enemy_nickame": "&lt;kOzY&gt;<sp/>Dave", "enemy_mmr": 4020, "expected_winrate": 0.43817438762285926}, {"time_played_at": "2019-11-25T17:53:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3949, "mmr_diff": 14, "enemy_nickame": "Crombo", "enemy_mmr": 3935, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-11-26T18:58:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3927, "mmr_diff": 19, "enemy_nickame": "\u043f\u0440\u043e\u0440\u0432\u0435\u043c\u0441\u044f", "enemy_mmr": 3908, "expected_winrate": 0.5124261671126104}, {"time_played_at": "2019-11-26T19:04:47+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3905, "mmr_diff": -691, "enemy_nickame": "Doomweed", "enemy_mmr": 4596, "expected_winrate": 0.1408736498380834}, {"time_played_at": "2019-11-26T19:11:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3899, "mmr_diff": -952, "enemy_nickame": "SkyFlare", "enemy_mmr": 4851, "expected_winrate": 0.07649305137834163}, {"time_played_at": "2019-11-26T19:20:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3924, "mmr_diff": -17, "enemy_nickame": "Chief", "enemy_mmr": 3941, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2019-11-26T19:32:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3944, "mmr_diff": 136, "enemy_nickame": "Romio", "enemy_mmr": 3808, "expected_winrate": 0.5880364496644981}, {"time_played_at": "2019-11-28T19:00:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3962, "mmr_diff": 20, "enemy_nickame": "&lt;SILeSp&gt;<sp/>Galactus", "enemy_mmr": 3942, "expected_winrate": 0.5130798849527788}, {"time_played_at": "2019-11-28T19:09:44+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3940, "mmr_diff": 86, "enemy_nickame": "&lt;vGL&gt;<sp/>Celestial", "enemy_mmr": 3854, "expected_winrate": 0.556020151303233}, {"time_played_at": "2019-11-28T19:23:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 3, "enemy_nickame": "Inquisition", "enemy_mmr": 3956, "expected_winrate": 0.5019624204002703}, {"time_played_at": "2019-11-29T18:07:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3981, "mmr_diff": 5, "enemy_nickame": "zzTp", "enemy_mmr": 3976, "expected_winrate": 0.5032706708107001}, {"time_played_at": "2019-11-29T18:14:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3959, "mmr_diff": -39, "enemy_nickame": "zzTp", "enemy_mmr": 3998, "expected_winrate": 0.47451051944488615}, {"time_played_at": "2019-11-29T18:31:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3939, "mmr_diff": -14, "enemy_nickame": "&lt;ERHELM&gt;<sp/>Erik", "enemy_mmr": 3953, "expected_winrate": 0.49084301506895067}, {"time_played_at": "2019-11-29T18:36:51+00:00", "win": false, "race": "Zerg", "enemy_race": "Zerg", "mmr": 3050, "mmr_diff": -33, "enemy_nickame": "Kesko", "enemy_mmr": 3083, "expected_winrate": 0.47842666694885455}, {"time_played_at": "2019-11-29T18:46:06+00:00", "win": false, "race": "Zerg", "enemy_race": "Zerg", "mmr": 3015, "mmr_diff": 107, "enemy_nickame": "OVERMIND", "enemy_mmr": 2908, "expected_winrate": 0.5695397061906963}, {"time_played_at": "2019-12-02T19:29:02+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3961, "mmr_diff": -107, "enemy_nickame": "&lt;IWtD&gt;<sp/>DiabloFeTo", "enemy_mmr": 4068, "expected_winrate": 0.4304602938093038}, {"time_played_at": "2019-12-02T19:42:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3985, "mmr_diff": 25, "enemy_nickame": "&lt;OnkelS&gt;<sp/>Prolow", "enemy_mmr": 3960, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2019-12-02T20:09:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4006, "mmr_diff": -10, "enemy_nickame": "kalarazar", "enemy_mmr": 4016, "expected_winrate": 0.49345893826507303}, {"time_played_at": "2019-12-03T18:33:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4028, "mmr_diff": -27, "enemy_nickame": "&lt;Furri&gt;<sp/>PrinceOfIEM", "enemy_mmr": 4055, "expected_winrate": 0.48234546801180256}, {"time_played_at": "2019-12-03T18:55:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4007, "mmr_diff": 82, "enemy_nickame": "&lt;IBeA\u015aI&gt;<sp/>Bummsjordy", "enemy_mmr": 3925, "expected_winrate": 0.5534349310880278}, {"time_played_at": "2019-12-03T19:10:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4026, "mmr_diff": -78, "enemy_nickame": "Orian", "enemy_mmr": 4104, "expected_winrate": 0.4491531823693559}, {"time_played_at": "2019-12-05T19:21:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4007, "mmr_diff": 18, "enemy_nickame": "AlexMacedon", "enemy_mmr": 3989, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2019-12-05T19:43:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4028, "mmr_diff": 27, "enemy_nickame": "Niinja", "enemy_mmr": 4001, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2019-12-09T20:18:26+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4049, "mmr_diff": -188, "enemy_nickame": "Delaam", "enemy_mmr": 4237, "expected_winrate": 0.3794423330829675}, {"time_played_at": "2019-12-09T20:28:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4032, "mmr_diff": -129, "enemy_nickame": "PeterLax", "enemy_mmr": 4161, "expected_winrate": 0.4164076397687468}, {"time_played_at": "2019-12-09T20:36:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4015, "mmr_diff": -9, "enemy_nickame": "&lt;OGCO\u0421K&gt;<sp/>ShushYo", "enemy_mmr": 4024, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-12-09T20:39:03+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4036, "mmr_diff": -72, "enemy_nickame": "Heradrass", "enemy_mmr": 4108, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2019-12-10T19:05:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4017, "mmr_diff": -108, "enemy_nickame": "NS\u0192Faxo", "enemy_mmr": 4125, "expected_winrate": 0.42981892053631354}, {"time_played_at": "2019-12-11T20:04:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4042, "mmr_diff": 14, "enemy_nickame": "&lt;PiGPan&gt;<sp/>TNTea", "enemy_mmr": 4028, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-12-11T20:23:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4020, "mmr_diff": 8, "enemy_nickame": "Legionaru", "enemy_mmr": 4012, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-12-12T18:10:58+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4041, "mmr_diff": 49, "enemy_nickame": "Ciprian", "enemy_mmr": 3992, "expected_winrate": 0.5320091949397798}, {"time_played_at": "2019-12-12T18:48:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4061, "mmr_diff": -83, "enemy_nickame": "&lt;Nutri&gt;<sp/>Highscribe", "enemy_mmr": 4144, "expected_winrate": 0.44591848727364963}, {"time_played_at": "2019-12-12T19:02:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4042, "mmr_diff": 13, "enemy_nickame": "contremaitre", "enemy_mmr": 4029, "expected_winrate": 0.5085030455441815}, {"time_played_at": "2019-12-12T19:21:45+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4063, "mmr_diff": 12, "enemy_nickame": "Fraze", "enemy_mmr": 4051, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2019-12-12T19:28:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4041, "mmr_diff": -90, "enemy_nickame": "NazelHut", "enemy_mmr": 4131, "expected_winrate": 0.44139765822811194}, {"time_played_at": "2019-12-12T19:42:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4022, "mmr_diff": -385, "enemy_nickame": "cloud", "enemy_mmr": 4407, "expected_winrate": 0.2674927102443324}, {"time_played_at": "2019-12-12T19:53:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4001, "mmr_diff": -36, "enemy_nickame": "Xaenor", "enemy_mmr": 4037, "expected_winrate": 0.47646823150757606}, {"time_played_at": "2019-12-12T20:52:10+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3980, "mmr_diff": 15, "enemy_nickame": "&lt;snajpu&gt;<sp/>Auddi", "enemy_mmr": 3965, "expected_winrate": 0.5098108929820042}, {"time_played_at": "2019-12-12T21:03:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4001, "mmr_diff": 57, "enemy_nickame": "&lt;snajpu&gt;<sp/>Auddi", "enemy_mmr": 3944, "expected_winrate": 0.5372172158592833}, {"time_played_at": "2019-12-12T21:16:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3978, "mmr_diff": -191, "enemy_nickame": "Vidra", "enemy_mmr": 4169, "expected_winrate": 0.3775957486362336}, {"time_played_at": "2019-12-12T21:29:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 75, "enemy_nickame": "Noobofsc", "enemy_mmr": 3882, "expected_winrate": 0.5489039163154777}, {"time_played_at": "2019-12-14T10:50:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3933, "mmr_diff": -85, "enemy_nickame": "&lt;Div303&gt;<sp/>Dupsko", "enemy_mmr": 4018, "expected_winrate": 0.4446258750331179}, {"time_played_at": "2019-12-18T16:35:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3957, "mmr_diff": -109, "enemy_nickame": "&lt;IndyK&gt;<sp/>HaPe", "enemy_mmr": 4066, "expected_winrate": 0.42917778277580165}, {"time_played_at": "2019-12-18T16:53:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3938, "mmr_diff": 110, "enemy_nickame": "FrozenZerg", "enemy_mmr": 3828, "expected_winrate": 0.5714631174083814}, {"time_played_at": "2019-12-20T18:17:10+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 0, "enemy_nickame": "&lt;\u01aeesXG&gt;<sp/>Rocky", "enemy_mmr": 3957, "expected_winrate": 0.5}, {"time_played_at": "2019-12-20T18:36:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3935, "mmr_diff": -246, "enemy_nickame": "utopike", "enemy_mmr": 4181, "expected_winrate": 0.3444157777997608}, {"time_played_at": "2019-12-20T18:42:21+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3955, "mmr_diff": -205, "enemy_nickame": "Nyx", "enemy_mmr": 4160, "expected_winrate": 0.36902597468573733}, {"time_played_at": "2019-12-20T18:53:00+00:00", "win": true, "race": "Zerg", "enemy_race": "Terran", "mmr": 2984, "mmr_diff": -106, "enemy_nickame": "Jason", "enemy_mmr": 3090, "expected_winrate": 0.4311019005277924}, {"time_played_at": "2019-12-20T18:59:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3939, "mmr_diff": 53, "enemy_nickame": "CapSto", "enemy_mmr": 3886, "expected_winrate": 0.5346141487768358}, {"time_played_at": "2019-12-20T19:06:55+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3959, "mmr_diff": -4, "enemy_nickame": "&lt;TAW&gt;<sp/>Pote", "enemy_mmr": 3963, "expected_winrate": 0.49738344991611666}, {"time_played_at": "2019-12-20T19:21:46+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3937, "mmr_diff": 62, "enemy_nickame": "Neydark", "enemy_mmr": 3875, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2019-12-21T13:30:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 1, "enemy_nickame": "Albus", "enemy_mmr": 3956, "expected_winrate": 0.5006541431191143}, {"time_played_at": "2019-12-21T13:41:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3936, "mmr_diff": -40, "enemy_nickame": "tiwai", "enemy_mmr": 3976, "expected_winrate": 0.47385811986038295}, {"time_played_at": "2019-12-21T13:54:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 6, "enemy_nickame": "tiwai", "enemy_mmr": 3953, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-12-21T14:00:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3937, "mmr_diff": 180, "enemy_nickame": "RXX", "enemy_mmr": 3757, "expected_winrate": 0.6156164673184111}, {"time_played_at": "2019-12-21T14:10:12+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3915, "mmr_diff": -92, "enemy_nickame": "xYn", "enemy_mmr": 4007, "expected_winrate": 0.44010774162905025}, {"time_played_at": "2019-12-21T14:27:45+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3896, "mmr_diff": -15, "enemy_nickame": "Stefan", "enemy_mmr": 3911, "expected_winrate": 0.49018910701799573}, {"time_played_at": "2019-12-21T16:32:08+00:00", "win": true, "race": "Zerg", "enemy_race": "Zerg", "mmr": 3023, "mmr_diff": -3, "enemy_nickame": "Undead", "enemy_mmr": 3026, "expected_winrate": 0.4980375795997298}, {"time_played_at": "2019-12-21T16:46:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3918, "mmr_diff": -49, "enemy_nickame": "Xenocide", "enemy_mmr": 3967, "expected_winrate": 0.4679908050602201}, {"time_played_at": "2019-12-21T16:49:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3941, "mmr_diff": -994, "enemy_nickame": "&lt;\u0413\u043d\u043e\u043c\u0438\u043a&gt;<sp/>IndeX", "enemy_mmr": 4935, "expected_winrate": 0.06908215857285668}, {"time_played_at": "2019-12-22T20:55:54+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3965, "mmr_diff": 67, "enemy_nickame": "Bingo", "enemy_mmr": 3898, "expected_winrate": 0.5437157089668173}, {"time_played_at": "2019-12-22T21:04:09+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3941, "mmr_diff": 61, "enemy_nickame": "Jungla", "enemy_mmr": 3880, "expected_winrate": 0.5398182558231894}, {"time_played_at": "2019-12-22T21:07:48+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3918, "mmr_diff": -9, "enemy_nickame": "DeepMind", "enemy_mmr": 3927, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-12-22T21:11:02+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3897, "mmr_diff": -51, "enemy_nickame": "DeepMind", "enemy_mmr": 3948, "expected_winrate": 0.4666881010864951}, {"time_played_at": "2019-12-22T21:26:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3877, "mmr_diff": 44, "enemy_nickame": "Nyxeu", "enemy_mmr": 3833, "expected_winrate": 0.5287505638922686}, {"time_played_at": "2019-12-23T16:23:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3897, "mmr_diff": 3, "enemy_nickame": "IntrinsiCat", "enemy_mmr": 3894, "expected_winrate": 0.5019624204002703}, {"time_played_at": "2019-12-23T16:30:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3898, "mmr_diff": 116, "enemy_nickame": "\u00e6\u00e6\u00e6", "enemy_mmr": 3782, "expected_winrate": 0.5753034142357183}, {"time_played_at": "2019-12-23T16:51:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3873, "mmr_diff": 87, "enemy_nickame": "Listig", "enemy_mmr": 3786, "expected_winrate": 0.5566659882772446}, {"time_played_at": "2019-12-24T11:03:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3892, "mmr_diff": 47, "enemy_nickame": "&lt;W\u00f8&gt;<sp/>poichiche", "enemy_mmr": 3845, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2019-12-24T11:17:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3869, "mmr_diff": 6, "enemy_nickame": "&lt;isIMBA&gt;<sp/>naincraft", "enemy_mmr": 3863, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-12-24T11:33:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3847, "mmr_diff": -119, "enemy_nickame": "ARCMAN", "enemy_mmr": 3966, "expected_winrate": 0.4227798108220997}, {"time_played_at": "2019-12-24T13:53:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "A.I. 1 (Elite)", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2019-12-24T18:36:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3872, "mmr_diff": 8, "enemy_nickame": "Vakhtang", "enemy_mmr": 3864, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-12-24T18:53:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3893, "mmr_diff": 50, "enemy_nickame": "Vakhtang", "enemy_mmr": 3843, "expected_winrate": 0.5326606025904235}, {"time_played_at": "2019-12-24T19:08:58+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3914, "mmr_diff": 74, "enemy_nickame": "PPO", "enemy_mmr": 3840, "expected_winrate": 0.5482559480584295}, {"time_played_at": "2019-12-24T20:35:20+00:00", "win": true, "race": "Zerg", "enemy_race": "Protoss", "mmr": 3057, "mmr_diff": 22, "enemy_nickame": "IAMFUNNYBOT", "enemy_mmr": 3035, "expected_winrate": 0.5143871841659987}, {"time_played_at": "2019-12-27T20:24:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3933, "mmr_diff": -100, "enemy_nickame": "HiveMind", "enemy_mmr": 4033, "expected_winrate": 0.4349563270554942}, {"time_played_at": "2019-12-27T20:40:39+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3914, "mmr_diff": 0, "enemy_nickame": "Racin", "enemy_mmr": 3914, "expected_winrate": 0.5}, {"time_played_at": "2019-12-27T21:24:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3936, "mmr_diff": -41, "enemy_nickame": "&lt;DemuCl&gt;<sp/>Jazzz", "enemy_mmr": 3977, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2019-12-28T14:03:26+00:00", "win": true, "race": "Zerg", "enemy_race": "Terran", "mmr": 3089, "mmr_diff": 51, "enemy_nickame": "SMCWWMarF", "enemy_mmr": 3038, "expected_winrate": 0.5333118989135048}, {"time_played_at": "2019-12-28T14:07:58+00:00", "win": false, "race": "Zerg", "enemy_race": "Zerg", "mmr": 3118, "mmr_diff": 4, "enemy_nickame": "Sferum", "enemy_mmr": 3114, "expected_winrate": 0.5026165500838834}, {"time_played_at": "2019-12-28T20:58:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 22, "enemy_nickame": "rOoSter", "enemy_mmr": 3937, "expected_winrate": 0.5143871841659987}, {"time_played_at": "2019-12-28T21:06:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3980, "mmr_diff": -260, "enemy_nickame": "contremaitre", "enemy_mmr": 4240, "expected_winrate": 0.3361922887074761}, {"time_played_at": "2020-01-04T19:04:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4009, "mmr_diff": -29, "enemy_nickame": "R\u00eago", "enemy_mmr": 4038, "expected_winrate": 0.4810389357983972}, {"time_played_at": "2020-01-04T19:07:07+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4031, "mmr_diff": -132, "enemy_nickame": "&lt;un\u018aea\u018a&gt;<sp/>\u00f2M\u00e9g\u00e0", "enemy_mmr": 4163, "expected_winrate": 0.4145013213281905}, {"time_played_at": "2020-01-04T19:19:31+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4057, "mmr_diff": -32, "enemy_nickame": "Tsumi", "enemy_mmr": 4089, "expected_winrate": 0.47907962915091085}, {"time_played_at": "2020-01-05T14:03:19+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4036, "mmr_diff": -160, "enemy_nickame": "&lt;Lowko&gt;<sp/>HardNeper", "enemy_mmr": 4196, "expected_winrate": 0.3968393991220355}, {"time_played_at": "2020-01-05T14:18:07+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4019, "mmr_diff": 14, "enemy_nickame": "delmak", "enemy_mmr": 4005, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2020-01-05T14:40:17+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4040, "mmr_diff": -3, "enemy_nickame": "&lt;P\u00c2R\u0142AH&gt;<sp/>SolusRex", "enemy_mmr": 4043, "expected_winrate": 0.4980375795997298}, {"time_played_at": "2020-01-05T14:47:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4019, "mmr_diff": -17, "enemy_nickame": "Sanedude", "enemy_mmr": 4036, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2020-01-05T14:55:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "Sanedude", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-01-05T15:02:49+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4041, "mmr_diff": -37, "enemy_nickame": "Tomstar", "enemy_mmr": 4078, "expected_winrate": 0.47581557748569775}, {"time_played_at": "2020-01-05T15:09:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4021, "mmr_diff": 93, "enemy_nickame": "Majcher", "enemy_mmr": 3928, "expected_winrate": 0.5605369146027809}, {"time_played_at": "2020-01-05T20:23:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4039, "mmr_diff": 103, "enemy_nickame": "&lt;ORRO&gt;<sp/>jul", "enemy_mmr": 3936, "expected_winrate": 0.5669718993599533}, {"time_played_at": "2020-01-05T20:30:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4015, "mmr_diff": 27, "enemy_nickame": "oppresticles", "enemy_mmr": 3988, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2020-01-05T20:34:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3992, "mmr_diff": -22, "enemy_nickame": "&lt;iksD&gt;<sp/>OzjaszGoldbe", "enemy_mmr": 4014, "expected_winrate": 0.48561281583400134}, {"time_played_at": "2020-01-05T20:39:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3972, "mmr_diff": -56, "enemy_nickame": "lIlIlIIlIlIl", "enemy_mmr": 4028, "expected_winrate": 0.46343336634463533}, {"time_played_at": "2020-01-06T18:55:58+00:00", "win": false, "race": "Terran", "enemy_race": "Protoss", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;Blacer&gt;<sp/>Hakerica", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-01-13T20:21:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3995, "mmr_diff": 80, "enemy_nickame": "&lt;TARAGO&gt;<sp/>Revenge", "enemy_mmr": 3915, "expected_winrate": 0.5521412274584168}, {"time_played_at": "2020-01-13T20:26:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4014, "mmr_diff": 118, "enemy_nickame": "&lt;TARAGO&gt;<sp/>Revenge", "enemy_mmr": 3896, "expected_winrate": 0.5765815195249419}, {"time_played_at": "2020-01-13T20:42:12+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3989, "mmr_diff": -28, "enemy_nickame": "MadProbe", "enemy_mmr": 4017, "expected_winrate": 0.48169217061119546}, {"time_played_at": "2020-01-13T20:56:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3968, "mmr_diff": -32, "enemy_nickame": "SUPERsKILLER", "enemy_mmr": 4000, "expected_winrate": 0.47907962915091085}, {"time_played_at": "2020-01-14T17:17:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3948, "mmr_diff": 12, "enemy_nickame": "TerenceSkill", "enemy_mmr": 3936, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2020-01-15T16:01:40+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3969, "mmr_diff": -68, "enemy_nickame": "&lt;aW&gt;<sp/>Jeatall", "enemy_mmr": 4037, "expected_winrate": 0.45563522259336753}, {"time_played_at": "2020-01-16T20:58:17+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3931, "mmr_diff": 86, "enemy_nickame": "Exit", "enemy_mmr": 3845, "expected_winrate": 0.556020151303233}, {"time_played_at": "2020-01-18T19:38:03+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3950, "mmr_diff": -30, "enemy_nickame": "&lt;SWWT&gt;<sp/>Epic", "enemy_mmr": 3980, "expected_winrate": 0.4803857658002591}, {"time_played_at": "2020-01-19T18:04:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3969, "mmr_diff": 80, "enemy_nickame": "StifleR", "enemy_mmr": 3889, "expected_winrate": 0.5521412274584168}, {"time_played_at": "2020-01-19T18:19:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3989, "mmr_diff": 10, "enemy_nickame": "&lt;Dytred&gt;<sp/>EmpiRE", "enemy_mmr": 3979, "expected_winrate": 0.506541061734927}, {"time_played_at": "2020-01-19T18:32:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4010, "mmr_diff": 13, "enemy_nickame": "MuKK", "enemy_mmr": 3997, "expected_winrate": 0.5085030455441815}, {"time_played_at": "2020-01-31T12:42:59+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4031, "mmr_diff": -44, "enemy_nickame": "&lt;adR&gt;<sp/>rdmZoo", "enemy_mmr": 4075, "expected_winrate": 0.4712494361077314}, {"time_played_at": "2020-01-31T12:54:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4011, "mmr_diff": -104, "enemy_nickame": "Stick", "enemy_mmr": 4115, "expected_winrate": 0.4323858060178517}, {"time_played_at": "2020-01-31T13:10:03+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3992, "mmr_diff": 64, "enemy_nickame": "&lt;GELSEN&gt;<sp/>Masaru", "enemy_mmr": 3928, "expected_winrate": 0.5417676213094246}, {"time_played_at": "2020-02-02T17:15:06+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4012, "mmr_diff": -80, "enemy_nickame": "&lt;0mg&gt;<sp/>Sroljo", "enemy_mmr": 4092, "expected_winrate": 0.4478587725415832}, {"time_played_at": "2020-02-02T17:26:32+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3992, "mmr_diff": -14, "enemy_nickame": "djakette", "enemy_mmr": 4006, "expected_winrate": 0.49084301506895067}, {"time_played_at": "2020-02-02T17:27:27+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3971, "mmr_diff": 58, "enemy_nickame": "Syocto", "enemy_mmr": 3913, "expected_winrate": 0.5378676713661427}, {"time_played_at": "2020-02-02T17:40:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3991, "mmr_diff": -4, "enemy_nickame": "VouS", "enemy_mmr": 3995, "expected_winrate": 0.49738344991611666}, {"time_played_at": "2020-02-02T17:48:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3970, "mmr_diff": -64, "enemy_nickame": "valera", "enemy_mmr": 4034, "expected_winrate": 0.4582323786905754}, {"time_played_at": "2020-02-02T18:09:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3993, "mmr_diff": 104, "enemy_nickame": "Jetix", "enemy_mmr": 3889, "expected_winrate": 0.5676141939821483}, {"time_played_at": "2020-02-05T21:02:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3989, "mmr_diff": 89, "enemy_nickame": "MorroLord", "enemy_mmr": 3900, "expected_winrate": 0.557957085634325}, {"time_played_at": "2020-02-05T21:05:33+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3965, "mmr_diff": -46, "enemy_nickame": "Orian", "enemy_mmr": 4011, "expected_winrate": 0.4699456739507617}, {"time_played_at": "2020-02-06T20:48:26+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3988, "mmr_diff": 26, "enemy_nickame": "MsDragonFly", "enemy_mmr": 3962, "expected_winrate": 0.5170011742274881}, {"time_played_at": "2020-02-06T21:02:53+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4009, "mmr_diff": 54, "enemy_nickame": "KJP", "enemy_mmr": 3955, "expected_winrate": 0.535265097920903}, {"time_played_at": "2020-02-09T20:04:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4029, "mmr_diff": -25, "enemy_nickame": "Grandclicker", "enemy_mmr": 4054, "expected_winrate": 0.48365224166479165}, {"time_played_at": "2020-02-09T20:19:03+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4004, "mmr_diff": 45, "enemy_nickame": "BlackSmith", "enemy_mmr": 3959, "expected_winrate": 0.5294024951224156}, {"time_played_at": "2020-02-10T19:08:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3981, "mmr_diff": 102, "enemy_nickame": "Kachu", "enemy_mmr": 3879, "expected_winrate": 0.566329379590959}, {"time_played_at": "2020-02-10T19:20:59+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3999, "mmr_diff": -73, "enemy_nickame": "Pablink", "enemy_mmr": 4072, "expected_winrate": 0.4523921838509467}, {"time_played_at": "2020-02-10T19:37:26+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4023, "mmr_diff": -9, "enemy_nickame": "&lt;biglol&gt;<sp/>bany", "enemy_mmr": 4032, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2020-02-11T17:52:08+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4045, "mmr_diff": 59, "enemy_nickame": "ZZtopGun", "enemy_mmr": 3986, "expected_winrate": 0.5385179979869474}, {"time_played_at": "2020-02-11T18:03:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4064, "mmr_diff": 98, "enemy_nickame": "ZZtopGun", "enemy_mmr": 3966, "expected_winrate": 0.563757090736234}, {"time_played_at": "2020-02-13T18:20:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4083, "mmr_diff": 81, "enemy_nickame": "Salomoon", "enemy_mmr": 4002, "expected_winrate": 0.552788168619027}, {"time_played_at": "2020-02-13T18:34:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4102, "mmr_diff": -136, "enemy_nickame": "&lt;BnetFR&gt;<sp/>NeWHoriZonS", "enemy_mmr": 4238, "expected_winrate": 0.411963550335502}, {"time_played_at": "2020-02-13T19:26:27+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4085, "mmr_diff": 90, "enemy_nickame": "HeroMarauder", "enemy_mmr": 3995, "expected_winrate": 0.5586023417718881}, {"time_played_at": "2020-02-13T19:45:12+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4104, "mmr_diff": -121, "enemy_nickame": "\u041e\u0422\u041c\u041e\u0420\u041e\u0417\u041e\u041a", "enemy_mmr": 4225, "expected_winrate": 0.42150324765525726}, {"time_played_at": "2020-02-14T12:24:59+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4123, "mmr_diff": 25, "enemy_nickame": "Haze", "enemy_mmr": 4098, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2020-02-14T12:29:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4101, "mmr_diff": -350, "enemy_nickame": "StormHead", "enemy_mmr": 4451, "expected_winrate": 0.2858142640872888}, {"time_played_at": "2020-02-15T12:57:31+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4083, "mmr_diff": -52, "enemy_nickame": "&lt;FxL&gt;<sp/>bojan", "enemy_mmr": 4135, "expected_winrate": 0.4660369182913983}, {"time_played_at": "2020-02-15T13:41:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4063, "mmr_diff": 21, "enemy_nickame": "llllllllllll", "enemy_mmr": 4042, "expected_winrate": 0.5137335580481893}, {"time_played_at": "2020-02-17T16:31:23+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4041, "mmr_diff": 33, "enemy_nickame": "&lt;lLiTl&gt;<sp/>Quickman", "enemy_mmr": 4008, "expected_winrate": 0.5215733330511455}, {"time_played_at": "2020-02-17T16:49:49+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4018, "mmr_diff": 7, "enemy_nickame": "&lt;lLiTl&gt;<sp/>Quickman", "enemy_mmr": 4011, "expected_winrate": 0.5045788764382211}, {"time_played_at": "2020-02-17T17:15:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3997, "mmr_diff": -155, "enemy_nickame": "Stilgar", "enemy_mmr": 4152, "expected_winrate": 0.39997507454646586}, {"time_played_at": "2020-02-17T17:31:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;BnetFR&gt;<sp/>NeWHoriZonS", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-02-17T17:47:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;BnetFR&gt;<sp/>NeWHoriZonS", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-02-18T18:41:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4019, "mmr_diff": -89, "enemy_nickame": "Canfup", "enemy_mmr": 4108, "expected_winrate": 0.4420429143656749}, {"time_played_at": "2020-02-18T18:56:03+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4000, "mmr_diff": -95, "enemy_nickame": "Hello", "enemy_mmr": 4095, "expected_winrate": 0.43817438762285926}, {"time_played_at": "2020-02-18T19:11:38+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4024, "mmr_diff": -47, "enemy_nickame": "Hello", "enemy_mmr": 4071, "expected_winrate": 0.46929394553496245}, {"time_played_at": "2020-02-18T19:24:22+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4047, "mmr_diff": -290, "enemy_nickame": "ajb", "enemy_mmr": 4337, "expected_winrate": 0.3189054546669155}, {"time_played_at": "2020-02-20T20:24:49+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4067, "mmr_diff": 219, "enemy_nickame": "Badcomedian", "enemy_mmr": 3848, "expected_winrate": 0.6394619681316271}, {"time_played_at": "2020-02-21T16:46:06+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4048, "mmr_diff": -63, "enemy_nickame": "razor", "enemy_mmr": 4111, "expected_winrate": 0.4588820281084352}, {"time_played_at": "2020-02-21T17:06:44+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4029, "mmr_diff": 20, "enemy_nickame": "&lt;0301&gt;<sp/>kookooseen", "enemy_mmr": 4009, "expected_winrate": 0.5130798849527788}, {"time_played_at": "2020-02-21T17:20:16+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4050, "mmr_diff": -94, "enemy_nickame": "Scythe", "enemy_mmr": 4144, "expected_winrate": 0.4388186333591383}, {"time_played_at": "2020-02-21T19:32:38+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4071, "mmr_diff": 50, "enemy_nickame": "Sentinel", "enemy_mmr": 4021, "expected_winrate": 0.5326606025904235}, {"time_played_at": "2020-02-26T18:13:51+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4091, "mmr_diff": -45, "enemy_nickame": "BlackAnubis", "enemy_mmr": 4136, "expected_winrate": 0.47059750487758445}, {"time_played_at": "2020-02-26T18:27:28+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4114, "mmr_diff": -99, "enemy_nickame": "&lt;BornG&gt;<sp/>LucidityDark", "enemy_mmr": 4213, "expected_winrate": 0.4355995097595788}, {"time_played_at": "2020-02-27T21:17:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4139, "mmr_diff": -262, "enemy_nickame": "&lt;PlAr&gt;<sp/>Arcanewinds", "enemy_mmr": 4401, "expected_winrate": 0.33502542553804826}, {"time_played_at": "2020-02-28T07:06:26+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4117, "mmr_diff": -327, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 4444, "expected_winrate": 0.2982553300458027}, {"time_played_at": "2020-02-29T15:07:01+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4100, "mmr_diff": -367, "enemy_nickame": "&lt;HBeS&gt;<sp/>LoziRa", "enemy_mmr": 4467, "expected_winrate": 0.27682160785890525}, {"time_played_at": "2020-02-29T15:22:31+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4083, "mmr_diff": 23, "enemy_nickame": "StepO", "enemy_mmr": 4060, "expected_winrate": 0.5150407610740062}, {"time_played_at": "2020-02-29T15:40:54+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4104, "mmr_diff": -89, "enemy_nickame": "Othello", "enemy_mmr": 4193, "expected_winrate": 0.4420429143656749}, {"time_played_at": "2020-02-29T15:49:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4085, "mmr_diff": -90, "enemy_nickame": "&lt;Irri&gt;<sp/>Irrichi", "enemy_mmr": 4175, "expected_winrate": 0.44139765822811194}, {"time_played_at": "2020-03-01T20:09:47+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4066, "mmr_diff": 67, "enemy_nickame": "FckVwls", "enemy_mmr": 3999, "expected_winrate": 0.5437157089668173}, {"time_played_at": "2020-03-02T09:38:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4086, "mmr_diff": 82, "enemy_nickame": "Piliskner", "enemy_mmr": 4004, "expected_winrate": 0.5534349310880278}, {"time_played_at": "2020-03-02T09:52:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4105, "mmr_diff": -180, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 4285, "expected_winrate": 0.3843835326815888}, {"time_played_at": "2020-03-02T10:06:27+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4088, "mmr_diff": 69, "enemy_nickame": "TGNP", "enemy_mmr": 4019, "expected_winrate": 0.5450136951714643}, {"time_played_at": "2020-03-02T13:26:04+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4106, "mmr_diff": -84, "enemy_nickame": "WizZy", "enemy_mmr": 4190, "expected_winrate": 0.4452720886026404}, {"time_played_at": "2020-03-02T13:45:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4130, "mmr_diff": -36, "enemy_nickame": "WizZy", "enemy_mmr": 4166, "expected_winrate": 0.47646823150757606}, {"time_played_at": "2020-03-04T17:23:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4153, "mmr_diff": -30, "enemy_nickame": "MothMonkey", "enemy_mmr": 4183, "expected_winrate": 0.4803857658002591}, {"time_played_at": "2020-03-04T17:39:40+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4132, "mmr_diff": 56, "enemy_nickame": "Leaf", "enemy_mmr": 4076, "expected_winrate": 0.5365666336553646}, {"time_played_at": "2020-03-04T17:52:41+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4109, "mmr_diff": -133, "enemy_nickame": "helloRJ", "enemy_mmr": 4242, "expected_winrate": 0.4138664474466713}, {"time_played_at": "2020-03-05T21:18:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4091, "mmr_diff": 74, "enemy_nickame": "Cyborg", "enemy_mmr": 4017, "expected_winrate": 0.5482559480584295}, {"time_played_at": "2020-03-09T10:57:07+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4068, "mmr_diff": 40468, "enemy_nickame": "\u043c\u044f\u0441\u043d\u0438\u043a", "enemy_mmr": -36400, "expected_winrate": 1.0}, {"time_played_at": "2020-03-09T11:03:30+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4050, "mmr_diff": -178, "enemy_nickame": "Noldo", "enemy_mmr": 4228, "expected_winrate": 0.3856226141648234}, {"time_played_at": "2020-03-09T11:22:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4033, "mmr_diff": 32, "enemy_nickame": "Vorp", "enemy_mmr": 4001, "expected_winrate": 0.520920370849089}, {"time_played_at": "2020-03-10T19:22:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4053, "mmr_diff": -46, "enemy_nickame": "&lt;FaDr&gt;<sp/>BURNIE", "enemy_mmr": 4099, "expected_winrate": 0.4699456739507617}, {"time_played_at": "2020-03-10T19:40:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4032, "mmr_diff": -18, "enemy_nickame": "Drakezul", "enemy_mmr": 4050, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2020-03-11T20:53:48+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4054, "mmr_diff": 81, "enemy_nickame": "StaryPijany", "enemy_mmr": 3973, "expected_winrate": 0.552788168619027}, {"time_played_at": "2020-03-12T18:55:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4030, "mmr_diff": -7, "enemy_nickame": "ORIGYN", "enemy_mmr": 4037, "expected_winrate": 0.4954211235617789}, {"time_played_at": "2020-03-12T19:06:49+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4009, "mmr_diff": 104, "enemy_nickame": "Salomoon", "enemy_mmr": 3905, "expected_winrate": 0.5676141939821483}, {"time_played_at": "2020-03-13T07:52:51+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3984, "mmr_diff": -256, "enemy_nickame": "&lt;Dobro&gt;<sp/>KINE", "enemy_mmr": 4240, "expected_winrate": 0.3385320109141423}, {"time_played_at": "2020-03-14T15:13:34+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3970, "mmr_diff": -95, "enemy_nickame": "adrianjakuba", "enemy_mmr": 4065, "expected_winrate": 0.43817438762285926}, {"time_played_at": "2020-03-14T15:18:34+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3993, "mmr_diff": 18, "enemy_nickame": "ODISEO", "enemy_mmr": 3975, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2020-03-14T15:34:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4014, "mmr_diff": 95, "enemy_nickame": "&lt;SCTR&gt;<sp/>LimeTime", "enemy_mmr": 3919, "expected_winrate": 0.5618256123771407}, {"time_played_at": "2020-03-14T16:18:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4033, "mmr_diff": -58, "enemy_nickame": "&lt;PLA2N&gt;<sp/>ZloyVakarian", "enemy_mmr": 4091, "expected_winrate": 0.4621323286338574}, {"time_played_at": "2020-03-14T16:31:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4013, "mmr_diff": -80, "enemy_nickame": "hellyeah", "enemy_mmr": 4093, "expected_winrate": 0.4478587725415832}, {"time_played_at": "2020-03-14T16:58:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "A.I. 1 (Elite)", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-03-14T20:10:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3994, "mmr_diff": -51, "enemy_nickame": "&lt;GROF&gt;<sp/>Shefarin", "enemy_mmr": 4045, "expected_winrate": 0.4666881010864951}, {"time_played_at": "2020-03-14T20:23:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4017, "mmr_diff": -28, "enemy_nickame": "Ben", "enemy_mmr": 4045, "expected_winrate": 0.48169217061119546}, {"time_played_at": "2020-03-18T12:33:17+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4040, "mmr_diff": -61, "enemy_nickame": "ManeWicht", "enemy_mmr": 4101, "expected_winrate": 0.4601817441768105}, {"time_played_at": "2020-03-18T12:41:44+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4020, "mmr_diff": 45, "enemy_nickame": "Apollo", "enemy_mmr": 3975, "expected_winrate": 0.5294024951224156}, {"time_played_at": "2020-03-18T12:57:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4040, "mmr_diff": -149, "enemy_nickame": "&lt;noIMBA&gt;<sp/>Facehugger", "enemy_mmr": 4189, "expected_winrate": 0.40374871115781824}, {"time_played_at": "2020-03-22T11:58:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4066, "mmr_diff": 19, "enemy_nickame": "&lt;Hasu&gt;<sp/>RunGen", "enemy_mmr": 4047, "expected_winrate": 0.5124261671126104}, {"time_played_at": "2020-03-22T12:03:13+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4044, "mmr_diff": 41, "enemy_nickame": "OOOOOOOOOOOO", "enemy_mmr": 4003, "expected_winrate": 0.5267941904791901}, {"time_played_at": "2020-03-24T16:59:08+00:00", "win": true, "race": "Zerg", "enemy_race": "Protoss", "mmr": 3086, "mmr_diff": 8, "enemy_nickame": "Steelseer", "enemy_mmr": 3078, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2020-03-29T20:40:34+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4022, "mmr_diff": -18, "enemy_nickame": "&lt;SCBoys&gt;<sp/>CiRkuS", "enemy_mmr": 4040, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2020-03-30T15:48:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4001, "mmr_diff": 4, "enemy_nickame": "Bee", "enemy_mmr": 3997, "expected_winrate": 0.5026165500838834}, {"time_played_at": "2020-03-31T12:27:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3979, "mmr_diff": -31, "enemy_nickame": "&lt;lLiTl&gt;<sp/>Rud", "enemy_mmr": 4010, "expected_winrate": 0.479732662842747}, {"time_played_at": "2020-04-01T06:54:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4000, "mmr_diff": -23, "enemy_nickame": "&lt;TRSO&gt;<sp/>THERIPPER", "enemy_mmr": 4023, "expected_winrate": 0.4849592389259938}, {"time_played_at": "2020-04-14T08:05:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "A.I. 1 (Very Easy)", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-15T14:28:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4022, "mmr_diff": 18, "enemy_nickame": "MrBeck", "enemy_mmr": 4004, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2020-04-15T14:50:51+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4043, "mmr_diff": 104, "enemy_nickame": "Anrik", "enemy_mmr": 3939, "expected_winrate": 0.5676141939821483}, {"time_played_at": "2020-04-15T15:03:08+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4018, "mmr_diff": -135, "enemy_nickame": "Tomus", "enemy_mmr": 4153, "expected_winrate": 0.41259755997469955}, {"time_played_at": "2020-04-15T19:20:27+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;TGCrew&gt;<sp/>Paloma", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-15T19:29:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;TGCrew&gt;<sp/>Paloma", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-15T19:41:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;TGCrew&gt;<sp/>Paloma", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-17T19:15:54+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4001, "mmr_diff": 39, "enemy_nickame": "Vanquish", "enemy_mmr": 3962, "expected_winrate": 0.5254894805551138}, {"time_played_at": "2020-04-17T19:31:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4021, "mmr_diff": -9, "enemy_nickame": "Boban", "enemy_mmr": 4030, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2020-04-17T20:10:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4062, "mmr_diff": 12, "enemy_nickame": "Etharis", "enemy_mmr": 4050, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2020-04-17T20:20:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4040, "mmr_diff": -40, "enemy_nickame": "&lt;Peeps&gt;<sp/>ReNoVation", "enemy_mmr": 4080, "expected_winrate": 0.47385811986038295}, {"time_played_at": "2020-04-17T20:26:10+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4062, "mmr_diff": -31, "enemy_nickame": "&lt;HBGS&gt;<sp/>ShoWTimE", "enemy_mmr": 4093, "expected_winrate": 0.479732662842747}, {"time_played_at": "2020-04-18T20:05:07+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4042, "mmr_diff": -29, "enemy_nickame": "MouseGGAXE", "enemy_mmr": 4071, "expected_winrate": 0.4810389357983972}, {"time_played_at": "2020-04-18T20:18:26+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4021, "mmr_diff": 8, "enemy_nickame": "&lt;HsDL&gt;<sp/>Domius", "enemy_mmr": 4013, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2020-04-18T20:30:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4042, "mmr_diff": -104, "enemy_nickame": "Alyaska", "enemy_mmr": 4146, "expected_winrate": 0.4323858060178517}, {"time_played_at": "2020-04-18T20:45:46+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4022, "mmr_diff": -87, "enemy_nickame": "&lt;RBP3&gt;<sp/>Steal", "enemy_mmr": 4109, "expected_winrate": 0.44333401172275544}, {"time_played_at": "2020-04-19T10:59:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "shadowofmich", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-19T11:14:04+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "shadowofmich", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-19T11:26:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "shadowofmich", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-19T11:34:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "shadowofmich", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-19T11:48:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "shadowofmich", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-19T12:01:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "shadowofmich", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-20T11:40:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4047, "mmr_diff": 28, "enemy_nickame": "Kilkenny", "enemy_mmr": 4019, "expected_winrate": 0.5183078293888046}, {"time_played_at": "2020-04-21T19:29:13+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4067, "mmr_diff": 18, "enemy_nickame": "BsCMBANerd", "enemy_mmr": 4049, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2020-04-22T20:24:41+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4045, "mmr_diff": 47, "enemy_nickame": "puLse", "enemy_mmr": 3998, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2020-04-22T20:30:29+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4022, "mmr_diff": 1, "enemy_nickame": "puLse", "enemy_mmr": 4021, "expected_winrate": 0.5006541431191143}, {"time_played_at": "2020-04-22T20:45:38+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4001, "mmr_diff": 42, "enemy_nickame": "mSin", "enemy_mmr": 3959, "expected_winrate": 0.5274464093596006}, {"time_played_at": "2020-04-23T15:13:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;ROXKIS&gt;<sp/>Shaddar", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-23T15:24:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;ROXKIS&gt;<sp/>Shaddar", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-23T15:33:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;ROXKIS&gt;<sp/>Shaddar", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-23T15:40:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;ROXKIS&gt;<sp/>Shaddar", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-23T15:56:17+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;ROXKIS&gt;<sp/>Shaddar", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-23T16:04:26+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;ROXKIS&gt;<sp/>Shaddar", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-23T16:22:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "&lt;ROXKIS&gt;<sp/>Shaddar", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-04-24T18:14:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4021, "mmr_diff": 36, "enemy_nickame": "Spider", "enemy_mmr": 3985, "expected_winrate": 0.5235317684924239}, {"time_played_at": "2020-04-24T18:18:47+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3999, "mmr_diff": 9, "enemy_nickame": "Spider", "enemy_mmr": 3990, "expected_winrate": 0.5058870193731037}, {"time_played_at": "2020-04-27T11:04:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3977, "mmr_diff": -25, "enemy_nickame": "Mitchowyn", "enemy_mmr": 4002, "expected_winrate": 0.48365224166479165}, {"time_played_at": "2020-04-27T11:06:38+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3956, "mmr_diff": -77, "enemy_nickame": "Etharis", "enemy_mmr": 4033, "expected_winrate": 0.449800646746463}, {"time_played_at": "2020-04-27T11:15:08+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3980, "mmr_diff": 97, "enemy_nickame": "DupaDuupa", "enemy_mmr": 3883, "expected_winrate": 0.5631134765259213}, {"time_played_at": "2020-04-27T11:29:31+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3955, "mmr_diff": -168, "enemy_nickame": "&lt;BARJO&gt;<sp/>JDH", "enemy_mmr": 4123, "expected_winrate": 0.39183999647141454}, {"time_played_at": "2020-04-27T11:42:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3975, "mmr_diff": -224, "enemy_nickame": "&lt;NetGG&gt;<sp/>vladozerg", "enemy_mmr": 4199, "expected_winrate": 0.35752730772110347}, {"time_played_at": "2020-04-27T12:02:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 108, "enemy_nickame": "Schmaunzer", "enemy_mmr": 3851, "expected_winrate": 0.5701810794636865}, {"time_played_at": "2020-04-27T12:24:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3935, "mmr_diff": 46, "enemy_nickame": "Ise", "enemy_mmr": 3889, "expected_winrate": 0.5300543260492383}, {"time_played_at": "2020-04-28T12:16:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3912, "mmr_diff": -133, "enemy_nickame": "DupaDuupa", "enemy_mmr": 4045, "expected_winrate": 0.4138664474466713}, {"time_played_at": "2020-04-28T12:40:14+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3872, "mmr_diff": -1163, "enemy_nickame": "&lt;Mkers&gt;<sp/>Doc", "enemy_mmr": 5035, "expected_winrate": 0.045517365974079564}, {"time_played_at": "2020-04-28T13:05:12+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3895, "mmr_diff": 39, "enemy_nickame": "AndrU", "enemy_mmr": 3856, "expected_winrate": 0.5254894805551138}, {"time_played_at": "2020-04-30T10:56:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3915, "mmr_diff": -9, "enemy_nickame": "&lt;RIIP&gt;<sp/>Airea", "enemy_mmr": 3924, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2020-04-30T11:20:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3937, "mmr_diff": 35, "enemy_nickame": "&lt;RIIP&gt;<sp/>Airea", "enemy_mmr": 3902, "expected_winrate": 0.5228790340944155}, {"time_played_at": "2020-04-30T11:33:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3957, "mmr_diff": -131, "enemy_nickame": "KillemAll", "enemy_mmr": 4088, "expected_winrate": 0.41513647933297476}, {"time_played_at": "2020-04-30T18:14:21+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3983, "mmr_diff": 62, "enemy_nickame": "FrosT", "enemy_mmr": 3921, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2020-04-30T18:34:01+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3964, "mmr_diff": -91, "enemy_nickame": "&lt;BRs&gt;<sp/>GoodFellas", "enemy_mmr": 4055, "expected_winrate": 0.44075259994384575}, {"time_played_at": "2020-05-01T11:39:32+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3988, "mmr_diff": 36, "enemy_nickame": "Samaya", "enemy_mmr": 3952, "expected_winrate": 0.5235317684924239}, {"time_played_at": "2020-05-01T11:59:09+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3965, "mmr_diff": -62, "enemy_nickame": "fireballkid", "enemy_mmr": 4027, "expected_winrate": 0.45953181733049886}, {"time_played_at": "2020-05-01T12:12:21+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3945, "mmr_diff": 40, "enemy_nickame": "xyzxyzxyz", "enemy_mmr": 3905, "expected_winrate": 0.5261418801396169}, {"time_played_at": "2020-05-01T12:37:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3923, "mmr_diff": 153, "enemy_nickame": "&lt;HsDL&gt;<sp/>Zero", "enemy_mmr": 3770, "expected_winrate": 0.5987683411538888}, {"time_played_at": "2020-05-01T12:42:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3944, "mmr_diff": 4, "enemy_nickame": "Cptred", "enemy_mmr": 3940, "expected_winrate": 0.5026165500838834}, {"time_played_at": "2020-05-01T12:54:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3965, "mmr_diff": 66, "enemy_nickame": "Cptred", "enemy_mmr": 3899, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2020-05-01T13:09:10+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3942, "mmr_diff": -140, "enemy_nickame": "&lt;IBeA\u015aI&gt;<sp/>Epiku", "enemy_mmr": 4082, "expected_winrate": 0.40943045167820846}, {"time_played_at": "2020-05-02T14:40:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3968, "mmr_diff": 47, "enemy_nickame": "&lt;IndyK&gt;<sp/>Wawszyn", "enemy_mmr": 3921, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2020-05-02T14:53:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3945, "mmr_diff": 14, "enemy_nickame": "&lt;EZPTS&gt;<sp/>talisman", "enemy_mmr": 3931, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2020-05-02T18:28:26+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": -36400, "mmr_diff": 0, "enemy_nickame": "A.I. 1 (Very Easy)", "enemy_mmr": -36400, "expected_winrate": 0.5}, {"time_played_at": "2020-05-02T18:35:12+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": -36400, "mmr_diff": 0, "enemy_nickame": "A.I. 1 (Very Easy)", "enemy_mmr": -36400, "expected_winrate": 0.5}, {"time_played_at": "2020-05-02T18:46:10+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": -36400, "mmr_diff": 0, "enemy_nickame": "A.I. 1 (Easy)", "enemy_mmr": -36400, "expected_winrate": 0.5}, {"time_played_at": "2020-05-02T19:06:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3966, "mmr_diff": 7, "enemy_nickame": "Pokimon", "enemy_mmr": 3959, "expected_winrate": 0.5045788764382211}, {"time_played_at": "2020-05-02T19:20:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3944, "mmr_diff": -54, "enemy_nickame": "mozgj", "enemy_mmr": 3998, "expected_winrate": 0.4647349020790969}, {"time_played_at": "2020-05-02T19:31:03+00:00", "win": true, "race": "Zerg", "enemy_race": "Zerg", "mmr": 3117, "mmr_diff": -2, "enemy_nickame": "doomsdayza", "enemy_mmr": 3119, "expected_winrate": 0.49869171600104734}, {"time_played_at": "2020-05-03T20:09:30+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3966, "mmr_diff": 78, "enemy_nickame": "RomaNo", "enemy_mmr": 3888, "expected_winrate": 0.550846817630644}, {"time_played_at": "2020-05-03T20:33:12+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3942, "mmr_diff": -97, "enemy_nickame": "&lt;FSeS&gt;<sp/>Wizzl\u00f4", "enemy_mmr": 4039, "expected_winrate": 0.43688652347407875}, {"time_played_at": "2020-05-03T20:43:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3966, "mmr_diff": -22, "enemy_nickame": "Mich", "enemy_mmr": 3988, "expected_winrate": 0.48561281583400134}, {"time_played_at": "2020-05-03T20:53:32+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3946, "mmr_diff": -79, "enemy_nickame": "Epicnoob", "enemy_mmr": 4025, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2020-05-04T12:43:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3926, "mmr_diff": 95, "enemy_nickame": "StaMinA", "enemy_mmr": 3831, "expected_winrate": 0.5618256123771407}, {"time_played_at": "2020-05-04T12:58:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3945, "mmr_diff": -7, "enemy_nickame": "Doghum", "enemy_mmr": 3952, "expected_winrate": 0.4954211235617789}, {"time_played_at": "2020-05-04T13:02:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3967, "mmr_diff": 22, "enemy_nickame": "Piiras", "enemy_mmr": 3945, "expected_winrate": 0.5143871841659987}, {"time_played_at": "2020-05-05T17:32:14+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3988, "mmr_diff": 119, "enemy_nickame": "&lt;VKT&gt;<sp/>R\u00f8rtangen", "enemy_mmr": 3869, "expected_winrate": 0.5772201891779002}, {"time_played_at": "2020-05-05T17:44:27+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4005, "mmr_diff": 24, "enemy_nickame": "&lt;\u01aeesXG&gt;<sp/>Rymdkrigaren", "enemy_mmr": 3981, "expected_winrate": 0.5156942865406842}, {"time_played_at": "2020-05-05T18:00:50+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4026, "mmr_diff": 193, "enemy_nickame": "helldenn", "enemy_mmr": 3833, "expected_winrate": 0.6236333410254552}, {"time_played_at": "2020-05-07T09:30:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4042, "mmr_diff": 34, "enemy_nickame": "&lt;BRSKR&gt;<sp/>Hexe", "enemy_mmr": 4008, "expected_winrate": 0.5222262215402946}, {"time_played_at": "2020-05-07T09:42:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4062, "mmr_diff": -57, "enemy_nickame": "Yeezus", "enemy_mmr": 4119, "expected_winrate": 0.4627827841407167}, {"time_played_at": "2020-05-07T10:13:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4086, "mmr_diff": 14, "enemy_nickame": "Yeezus", "enemy_mmr": 4072, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2020-05-08T11:14:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4107, "mmr_diff": 60, "enemy_nickame": "&lt;tXs&gt;<sp/>TheBloke", "enemy_mmr": 4047, "expected_winrate": 0.5391681935344519}, {"time_played_at": "2020-05-08T11:34:03+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4127, "mmr_diff": 109, "enemy_nickame": "Ergopro", "enemy_mmr": 4018, "expected_winrate": 0.5708222172241983}, {"time_played_at": "2020-05-10T18:56:45+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4145, "mmr_diff": -282, "enemy_nickame": "T\u00f6rtt\u00f6", "enemy_mmr": 4427, "expected_winrate": 0.3234692470348148}, {"time_played_at": "2020-05-10T19:12:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4131, "mmr_diff": 26, "enemy_nickame": "&lt;2G1M&gt;<sp/>Mime", "enemy_mmr": 4105, "expected_winrate": 0.5170011742274881}, {"time_played_at": "2020-05-10T19:29:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4109, "mmr_diff": -18, "enemy_nickame": "&lt;2G1M&gt;<sp/>Mime", "enemy_mmr": 4127, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2020-05-11T09:23:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4088, "mmr_diff": -137, "enemy_nickame": "DonkeyMonkey", "enemy_mmr": 4225, "expected_winrate": 0.4113298327220324}, {"time_played_at": "2020-05-11T09:35:55+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4070, "mmr_diff": -72, "enemy_nickame": "Elosai", "enemy_mmr": 4142, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2020-05-11T09:41:36+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4051, "mmr_diff": 107, "enemy_nickame": "ElBarto", "enemy_mmr": 3944, "expected_winrate": 0.5695397061906963}, {"time_played_at": "2020-05-11T16:06:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "TGE", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-05-11T16:28:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "TGE", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-05-12T17:37:31+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4026, "mmr_diff": -14, "enemy_nickame": "Tiger", "enemy_mmr": 4040, "expected_winrate": 0.49084301506895067}, {"time_played_at": "2020-05-12T17:59:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4005, "mmr_diff": -11, "enemy_nickame": "BuRneR", "enemy_mmr": 4016, "expected_winrate": 0.49280491829094863}, {"time_played_at": "2020-05-12T18:11:01+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4027, "mmr_diff": -99, "enemy_nickame": "\u041b\u043e\u0445", "enemy_mmr": 4126, "expected_winrate": 0.4355995097595788}, {"time_played_at": "2020-05-15T20:33:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "A.I. 1 (Elite)", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-05-15T20:43:42+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "A.I. 1 (Elite)", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-05-15T20:56:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4006, "mmr_diff": 46, "enemy_nickame": "TerenceSkill", "enemy_mmr": 3960, "expected_winrate": 0.5300543260492383}, {"time_played_at": "2020-05-25T11:18:22+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "TGE", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-05-25T11:33:51+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "TGE", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-05-25T11:59:22+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "TGE", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-05-26T09:13:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4026, "mmr_diff": 45, "enemy_nickame": "Marvin", "enemy_mmr": 3981, "expected_winrate": 0.5294024951224156}, {"time_played_at": "2020-05-26T09:34:07+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4046, "mmr_diff": 6, "enemy_nickame": "kerokero", "enemy_mmr": 4040, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2020-05-26T09:46:32+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4024, "mmr_diff": -50, "enemy_nickame": "MKPrime", "enemy_mmr": 4074, "expected_winrate": 0.4673393974095765}, {"time_played_at": "2020-05-27T09:57:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "A.I. 1 (Elite)", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-05-27T10:12:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4004, "mmr_diff": -89, "enemy_nickame": "MasterZERG", "enemy_mmr": 4093, "expected_winrate": 0.4420429143656749}, {"time_played_at": "2020-05-27T10:21:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3985, "mmr_diff": 98, "enemy_nickame": "Froze", "enemy_mmr": 3887, "expected_winrate": 0.563757090736234}, {"time_played_at": "2020-05-27T10:32:29+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4004, "mmr_diff": -169, "enemy_nickame": "giletjaune", "enemy_mmr": 4173, "expected_winrate": 0.3912166399665741}, {"time_played_at": "2020-05-27T10:56:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4030, "mmr_diff": -73, "enemy_nickame": "CleanSweep", "enemy_mmr": 4103, "expected_winrate": 0.4523921838509467}, {"time_played_at": "2020-05-29T11:34:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "A.I. 1 (Elite)", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-05-29T12:17:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4054, "mmr_diff": 125, "enemy_nickame": "&lt;SeoYN&gt;<sp/>General", "enemy_mmr": 3929, "expected_winrate": 0.5810467174657031}, {"time_played_at": "2020-05-29T17:58:42+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4072, "mmr_diff": 32, "enemy_nickame": "Sclera", "enemy_mmr": 4040, "expected_winrate": 0.520920370849089}, {"time_played_at": "2020-05-29T18:27:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4093, "mmr_diff": 12, "enemy_nickame": "&lt;Hasu&gt;<sp/>RunGen", "enemy_mmr": 4081, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2020-05-30T20:50:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4071, "mmr_diff": 122, "enemy_nickame": "Hellfighter", "enemy_mmr": 3949, "expected_winrate": 0.579134641806555}, {"time_played_at": "2020-05-30T21:10:17+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4089, "mmr_diff": -34, "enemy_nickame": "Onkelelak", "enemy_mmr": 4123, "expected_winrate": 0.47777377845970537}, {"time_played_at": "2020-06-01T11:40:30+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4112, "mmr_diff": -141, "enemy_nickame": "Minoda", "enemy_mmr": 4253, "expected_winrate": 0.4087979217905979}, {"time_played_at": "2020-06-01T11:53:17+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4094, "mmr_diff": -129, "enemy_nickame": "iga", "enemy_mmr": 4223, "expected_winrate": 0.4164076397687468}, {"time_played_at": "2020-06-02T18:39:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4076, "mmr_diff": 17, "enemy_nickame": "IIIIIIIII", "enemy_mmr": 4059, "expected_winrate": 0.5111186061324027}, {"time_played_at": "2020-06-02T18:56:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4097, "mmr_diff": 69, "enemy_nickame": "&lt;IndyK&gt;<sp/>Wawszyn", "enemy_mmr": 4028, "expected_winrate": 0.5450136951714643}, {"time_played_at": "2020-06-03T17:53:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4117, "mmr_diff": 171, "enemy_nickame": "&lt;DisES&gt;<sp/>Kamenashi", "enemy_mmr": 3946, "expected_winrate": 0.6100290069264851}, {"time_played_at": "2020-06-03T17:54:42+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4133, "mmr_diff": -27, "enemy_nickame": "Etharis", "enemy_mmr": 4160, "expected_winrate": 0.48234546801180256}, {"time_played_at": "2020-06-03T18:04:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4156, "mmr_diff": -88, "enemy_nickame": "Liverpool", "enemy_mmr": 4244, "expected_winrate": 0.44268836623770724}, {"time_played_at": "2020-06-03T18:34:39+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4180, "mmr_diff": -124, "enemy_nickame": "feetlover", "enemy_mmr": 4304, "expected_winrate": 0.41959037361733365}, {"time_played_at": "2020-06-04T19:03:54+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4203, "mmr_diff": 21, "enemy_nickame": "JOOPSTAR", "enemy_mmr": 4182, "expected_winrate": 0.5137335580481893}, {"time_played_at": "2020-06-04T19:18:46+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4181, "mmr_diff": -189, "enemy_nickame": "&lt;AiR\u01c2&gt;<sp/>SuperNova", "enemy_mmr": 4370, "expected_winrate": 0.37882641391385774}, {"time_played_at": "2020-06-09T16:57:17+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 0, "mmr_diff": 0, "enemy_nickame": "A.I. 1 (Elite)", "enemy_mmr": 0, "expected_winrate": 0.5}, {"time_played_at": "2020-06-09T17:03:47+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4208, "mmr_diff": 14, "enemy_nickame": "Ziiim", "enemy_mmr": 4194, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2020-06-09T17:11:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4186, "mmr_diff": 39, "enemy_nickame": "djakette", "enemy_mmr": 4147, "expected_winrate": 0.5254894805551138}, {"time_played_at": "2020-06-09T17:24:17+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4164, "mmr_diff": -68, "enemy_nickame": "StaMinA", "enemy_mmr": 4232, "expected_winrate": 0.45563522259336753}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<p>There are a couple of clear outliers:</p>
<ul>
<li>there are some games at a MMR of -36400; I may be bad at StarCraft, but not that bad. I’m not willing to trust our replay parser about them, so I’ll just throw these out.</li>
<li>the games at a MMR of 0 are mostly custom or vs AI games. Those are recorded in replays as well. We’ll dump them too.</li>
<li>there are few games where I offraced as Zerg, and the game tracks a separate MMR for each race you play as. We’ll skip those as well and look only at the Protoss perspective. This</li>
</ul>
<div id="cell-12" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[(df.mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (df.enemy_mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (df.race <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Protoss"</span>)]</span>
<span id="cb5-2">data</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">time_played_at</th>
<th data-quarto-table-cell-role="th">win</th>
<th data-quarto-table-cell-role="th">race</th>
<th data-quarto-table-cell-role="th">enemy_race</th>
<th data-quarto-table-cell-role="th">mmr</th>
<th data-quarto-table-cell-role="th">mmr_diff</th>
<th data-quarto-table-cell-role="th">enemy_nickame</th>
<th data-quarto-table-cell-role="th">enemy_mmr</th>
<th data-quarto-table-cell-role="th">expected_winrate</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">428</td>
<td>2019-10-06 12:23:56+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Protoss</td>
<td>3751</td>
<td>25</td>
<td>MJM</td>
<td>3726</td>
<td>0.516348</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">8</td>
<td>2019-10-06 12:36:36+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Protoss</td>
<td>3826</td>
<td>78</td>
<td>vasea</td>
<td>3748</td>
<td>0.550847</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">322</td>
<td>2019-10-08 19:33:28+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Protoss</td>
<td>3893</td>
<td>-53</td>
<td>Wavelength</td>
<td>3946</td>
<td>0.465386</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">54</td>
<td>2019-10-10 07:41:27+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>3828</td>
<td>26</td>
<td>PereiRa</td>
<td>3802</td>
<td>0.517001</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">343</td>
<td>2019-10-10 07:55:19+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>3760</td>
<td>-56</td>
<td>&amp;lt;PROOO&amp;gt;&lt;sp/&gt;Jesperpro</td>
<td>3816</td>
<td>0.463433</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">285</td>
<td>2020-06-04 19:03:54+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Terran</td>
<td>4203</td>
<td>21</td>
<td>JOOPSTAR</td>
<td>4182</td>
<td>0.513734</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">145</td>
<td>2020-06-04 19:18:46+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>4181</td>
<td>-189</td>
<td>&amp;lt;AiRǂ&amp;gt;&lt;sp/&gt;SuperNova</td>
<td>4370</td>
<td>0.378826</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">79</td>
<td>2020-06-09 17:03:47+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Protoss</td>
<td>4208</td>
<td>14</td>
<td>Ziiim</td>
<td>4194</td>
<td>0.509157</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2020-06-09 17:11:15+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>4186</td>
<td>39</td>
<td>djakette</td>
<td>4147</td>
<td>0.525489</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">207</td>
<td>2020-06-09 17:24:17+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Terran</td>
<td>4164</td>
<td>-68</td>
<td>StaMinA</td>
<td>4232</td>
<td>0.455635</td>
</tr>
</tbody>
</table>

<p>343 rows × 9 columns</p>
</div>
</div>
</div>
<div id="cell-13" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">altair.Chart(data).mark_circle().encode(</span>
<span id="cb6-2">    altair.X(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>),</span>
<span id="cb6-3">    altair.Y(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr'</span>,</span>
<span id="cb6-4">             scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Scale(zero<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)),</span>
<span id="cb6-5">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_race'</span>,</span>
<span id="cb6-6">).interactive()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">

<div id="altair-viz-df00d593d3ac4c37b08c3c1f2554e345"></div>
<script type="text/javascript">
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-df00d593d3ac4c37b08c3c1f2554e345") {
      outputDiv = document.getElementById("altair-viz-df00d593d3ac4c37b08c3c1f2554e345");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm//vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm//vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm//vega-lite@4.8.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm//vega-embed@6?noext",
    };

    function loadScript(lib) {
      return new Promise(function(resolve, reject) {
        var s = document.createElement('script');
        s.src = paths[lib];
        s.async = true;
        s.onload = () => resolve(paths[lib]);
        s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
        document.getElementsByTagName("head")[0].appendChild(s);
      });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else if (typeof vegaEmbed === "function") {
      displayChart(vegaEmbed);
    } else {
      loadScript("vega")
        .then(() => loadScript("vega-lite"))
        .then(() => loadScript("vega-embed"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 400, "continuousHeight": 300}}, "data": {"name": "data-2a019bd732a64de4399bd051ca2a465b"}, "mark": "circle", "encoding": {"color": {"type": "nominal", "field": "enemy_race"}, "x": {"type": "temporal", "field": "time_played_at"}, "y": {"type": "quantitative", "field": "mmr", "scale": {"zero": false}}}, "selection": {"selector002": {"type": "interval", "bind": "scales", "encodings": ["x", "y"]}}, "$schema": "https://vega.github.io/schema/vega-lite/v4.8.1.json", "datasets": {"data-2a019bd732a64de4399bd051ca2a465b": [{"time_played_at": "2019-10-06T12:23:56+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3751, "mmr_diff": 25, "enemy_nickame": "MJM", "enemy_mmr": 3726, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2019-10-06T12:36:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3826, "mmr_diff": 78, "enemy_nickame": "vasea", "enemy_mmr": 3748, "expected_winrate": 0.550846817630644}, {"time_played_at": "2019-10-08T19:33:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3893, "mmr_diff": -53, "enemy_nickame": "Wavelength", "enemy_mmr": 3946, "expected_winrate": 0.4653858512231642}, {"time_played_at": "2019-10-10T07:41:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3828, "mmr_diff": 26, "enemy_nickame": "PereiRa", "enemy_mmr": 3802, "expected_winrate": 0.5170011742274881}, {"time_played_at": "2019-10-10T07:55:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3760, "mmr_diff": -56, "enemy_nickame": "&lt;PROOO&gt;<sp/>Jesperpro", "enemy_mmr": 3816, "expected_winrate": 0.46343336634463533}, {"time_played_at": "2019-10-10T20:42:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3827, "mmr_diff": 126, "enemy_nickame": "Pippuri", "enemy_mmr": 3701, "expected_winrate": 0.5816835383970852}, {"time_played_at": "2019-10-14T19:15:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3878, "mmr_diff": 17, "enemy_nickame": "Supermaru", "enemy_mmr": 3861, "expected_winrate": 0.5111186061324027}, {"time_played_at": "2019-10-21T11:14:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3819, "mmr_diff": -88, "enemy_nickame": "&lt;IDLK&gt;<sp/>jasben", "enemy_mmr": 3907, "expected_winrate": 0.44268836623770724}, {"time_played_at": "2019-10-22T11:34:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3881, "mmr_diff": -185, "enemy_nickame": "&lt;\u041d\u0422\u0422&gt;<sp/>SPQR", "enemy_mmr": 4066, "expected_winrate": 0.3812924158311464}, {"time_played_at": "2019-10-22T11:42:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3840, "mmr_diff": 83, "enemy_nickame": "NiGHTKiNG", "enemy_mmr": 3757, "expected_winrate": 0.5540815127263503}, {"time_played_at": "2019-10-22T12:04:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3885, "mmr_diff": -465, "enemy_nickame": "&lt;\u041c\u041486&gt;<sp/>Moldovanin", "enemy_mmr": 4350, "expected_winrate": 0.22851649491264128}, {"time_played_at": "2019-10-22T12:19:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3862, "mmr_diff": -102, "enemy_nickame": "Zergorix", "enemy_mmr": 3964, "expected_winrate": 0.433670620409041}, {"time_played_at": "2019-10-29T09:32:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3821, "mmr_diff": -73, "enemy_nickame": "Tomaso", "enemy_mmr": 3894, "expected_winrate": 0.4523921838509467}, {"time_played_at": "2019-10-29T11:14:53+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3871, "mmr_diff": 890, "enemy_nickame": "YellowCoke", "enemy_mmr": 2981, "expected_winrate": 0.9112303439884303}, {"time_played_at": "2019-10-29T11:20:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3915, "mmr_diff": -17, "enemy_nickame": "abelian", "enemy_mmr": 3932, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2019-10-29T11:28:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3873, "mmr_diff": -79, "enemy_nickame": "abelian", "enemy_mmr": 3952, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2019-10-29T11:42:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3836, "mmr_diff": -119, "enemy_nickame": "llllllllllll", "enemy_mmr": 3955, "expected_winrate": 0.4227798108220997}, {"time_played_at": "2019-10-29T18:17:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3802, "mmr_diff": -110, "enemy_nickame": "beh", "enemy_mmr": 3912, "expected_winrate": 0.4285368825916186}, {"time_played_at": "2019-10-29T18:18:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3767, "mmr_diff": 27, "enemy_nickame": "Hannibal", "enemy_mmr": 3740, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2019-10-29T18:34:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3728, "mmr_diff": -16, "enemy_nickame": "&lt;Dobro&gt;<sp/>\u043f\u0438\u0440\u0430\u0436\u043e\u043a", "enemy_mmr": 3744, "expected_winrate": 0.4895352325390119}, {"time_played_at": "2019-10-30T07:06:31+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3881, "mmr_diff": 389, "enemy_nickame": "Paulie", "enemy_mmr": 3492, "expected_winrate": 0.7345530624972029}, {"time_played_at": "2019-10-31T18:12:23+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3881, "mmr_diff": -761, "enemy_nickame": "Tyson", "enemy_mmr": 4642, "expected_winrate": 0.12012861418038036}, {"time_played_at": "2019-10-31T18:55:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3766, "mmr_diff": 10, "enemy_nickame": "Granaatappel", "enemy_mmr": 3756, "expected_winrate": 0.506541061734927}, {"time_played_at": "2019-10-31T19:07:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3730, "mmr_diff": 66, "enemy_nickame": "&lt;IndyK&gt;<sp/>Sven", "enemy_mmr": 3664, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2019-11-01T09:05:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3691, "mmr_diff": -78, "enemy_nickame": "&lt;NerCC&gt;<sp/>speck", "enemy_mmr": 3769, "expected_winrate": 0.4491531823693559}, {"time_played_at": "2019-11-01T09:15:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3729, "mmr_diff": -142, "enemy_nickame": "Ghalib", "enemy_mmr": 3871, "expected_winrate": 0.40816569372083916}, {"time_played_at": "2019-11-01T13:42:38+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3696, "mmr_diff": 65, "enemy_nickame": "&lt;PiGPan&gt;<sp/>Garethax", "enemy_mmr": 3631, "expected_winrate": 0.5424171287450194}, {"time_played_at": "2019-11-02T17:45:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3661, "mmr_diff": 30, "enemy_nickame": "KKroer", "enemy_mmr": 3631, "expected_winrate": 0.5196142341997408}, {"time_played_at": "2019-11-02T17:46:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3691, "mmr_diff": 85, "enemy_nickame": "&lt;A\u01c2move&gt;<sp/>AmoveZerg", "enemy_mmr": 3606, "expected_winrate": 0.5553741249668821}, {"time_played_at": "2019-11-02T17:51:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3718, "mmr_diff": 33, "enemy_nickame": "Hazard", "enemy_mmr": 3685, "expected_winrate": 0.5215733330511455}, {"time_played_at": "2019-11-02T17:55:38+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3688, "mmr_diff": 62, "enemy_nickame": "Pleydellia", "enemy_mmr": 3626, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2019-11-02T20:06:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3655, "mmr_diff": 8, "enemy_nickame": "lllllll", "enemy_mmr": 3647, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-11-02T20:15:14+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3684, "mmr_diff": 58, "enemy_nickame": "lllllll", "enemy_mmr": 3626, "expected_winrate": 0.5378676713661427}, {"time_played_at": "2019-11-02T20:29:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3711, "mmr_diff": -25, "enemy_nickame": "&lt;PiGPan&gt;<sp/>Noose", "enemy_mmr": 3736, "expected_winrate": 0.48365224166479165}, {"time_played_at": "2019-11-03T11:18:56+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3740, "mmr_diff": -44, "enemy_nickame": "&lt;DaGOAT&gt;<sp/>Sinus", "enemy_mmr": 3784, "expected_winrate": 0.4712494361077314}, {"time_played_at": "2019-11-03T11:35:01+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3769, "mmr_diff": -87, "enemy_nickame": "&lt;LESeV&gt;<sp/>iceclaw", "enemy_mmr": 3856, "expected_winrate": 0.44333401172275544}, {"time_played_at": "2019-11-04T20:40:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3799, "mmr_diff": -67, "enemy_nickame": "&lt;FreeHK&gt;<sp/>jellun", "enemy_mmr": 3866, "expected_winrate": 0.4562842910331827}, {"time_played_at": "2019-11-04T20:46:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3825, "mmr_diff": -22, "enemy_nickame": "North", "enemy_mmr": 3847, "expected_winrate": 0.48561281583400134}, {"time_played_at": "2019-11-04T20:53:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3800, "mmr_diff": -83, "enemy_nickame": "&lt;MiClan&gt;<sp/>MiSHANYA", "enemy_mmr": 3883, "expected_winrate": 0.44591848727364963}, {"time_played_at": "2019-11-04T20:57:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3777, "mmr_diff": 16, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 3761, "expected_winrate": 0.5104647674609881}, {"time_played_at": "2019-11-05T18:35:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3752, "mmr_diff": 66, "enemy_nickame": "Fleetz", "enemy_mmr": 3686, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2019-11-05T18:43:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3774, "mmr_diff": -53, "enemy_nickame": "&lt;XsR&gt;<sp/>Ajotaele", "enemy_mmr": 3827, "expected_winrate": 0.4653858512231642}, {"time_played_at": "2019-11-05T18:48:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3752, "mmr_diff": -19, "enemy_nickame": "&lt;dumbfu&gt;<sp/>cheesus", "enemy_mmr": 3771, "expected_winrate": 0.4875738328873896}, {"time_played_at": "2019-11-05T18:58:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3776, "mmr_diff": 24, "enemy_nickame": "smthFISHYcmg", "enemy_mmr": 3752, "expected_winrate": 0.5156942865406842}, {"time_played_at": "2019-11-06T21:43:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3798, "mmr_diff": -5, "enemy_nickame": "ProtoZZavr", "enemy_mmr": 3803, "expected_winrate": 0.4967293291893}, {"time_played_at": "2019-11-08T09:33:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3821, "mmr_diff": -101, "enemy_nickame": "Zend", "enemy_mmr": 3922, "expected_winrate": 0.4343133632425947}, {"time_played_at": "2019-11-12T09:42:59+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3847, "mmr_diff": -41, "enemy_nickame": "&lt;UATeam&gt;<sp/>click", "enemy_mmr": 3888, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2019-11-12T09:49:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3870, "mmr_diff": -30, "enemy_nickame": "midhigh", "enemy_mmr": 3900, "expected_winrate": 0.4803857658002591}, {"time_played_at": "2019-11-12T10:06:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3890, "mmr_diff": -72, "enemy_nickame": "Paulie", "enemy_mmr": 3962, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2019-11-17T09:58:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3913, "mmr_diff": -79, "enemy_nickame": "TrashCanMan", "enemy_mmr": 3992, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2019-11-17T10:20:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3894, "mmr_diff": 96, "enemy_nickame": "MightyMurloc", "enemy_mmr": 3798, "expected_winrate": 0.5624696497063278}, {"time_played_at": "2019-11-18T15:44:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3913, "mmr_diff": 116, "enemy_nickame": "&lt;lLiTl&gt;<sp/>Eniman", "enemy_mmr": 3797, "expected_winrate": 0.5753034142357183}, {"time_played_at": "2019-11-18T15:58:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3893, "mmr_diff": 103, "enemy_nickame": "\u0432\u043b\u0430\u0434", "enemy_mmr": 3790, "expected_winrate": 0.5669718993599533}, {"time_played_at": "2019-11-18T16:08:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3911, "mmr_diff": -55, "enemy_nickame": "trouth", "enemy_mmr": 3966, "expected_winrate": 0.4640840730548977}, {"time_played_at": "2019-11-18T16:17:57+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3891, "mmr_diff": 10, "enemy_nickame": "OlympusRoyal", "enemy_mmr": 3881, "expected_winrate": 0.506541061734927}, {"time_played_at": "2019-11-18T17:08:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3912, "mmr_diff": 89, "enemy_nickame": "InsighT", "enemy_mmr": 3823, "expected_winrate": 0.557957085634325}, {"time_played_at": "2019-11-18T17:26:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3888, "mmr_diff": -16, "enemy_nickame": "trouth", "enemy_mmr": 3904, "expected_winrate": 0.4895352325390119}, {"time_played_at": "2019-11-18T17:32:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3910, "mmr_diff": -10, "enemy_nickame": "Raver", "enemy_mmr": 3920, "expected_winrate": 0.49345893826507303}, {"time_played_at": "2019-11-18T17:48:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3889, "mmr_diff": -18, "enemy_nickame": "&lt;TheDOH&gt;<sp/>secretspace", "enemy_mmr": 3907, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2019-11-18T18:03:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3911, "mmr_diff": -50, "enemy_nickame": "Cosmobrother", "enemy_mmr": 3961, "expected_winrate": 0.4673393974095765}, {"time_played_at": "2019-11-19T07:23:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3934, "mmr_diff": 60, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 3874, "expected_winrate": 0.5391681935344519}, {"time_played_at": "2019-11-19T19:02:22+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3954, "mmr_diff": 384, "enemy_nickame": "&lt;EESC&gt;<sp/>penduloSFX", "enemy_mmr": 3570, "expected_winrate": 0.7319942855046018}, {"time_played_at": "2019-11-19T19:05:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3972, "mmr_diff": -387, "enemy_nickame": "Pudgey", "enemy_mmr": 4359, "expected_winrate": 0.2664685738023793}, {"time_played_at": "2019-11-19T19:10:36+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3947, "mmr_diff": -62, "enemy_nickame": "&lt;TDDA&gt;<sp/>EMM", "enemy_mmr": 4009, "expected_winrate": 0.45953181733049886}, {"time_played_at": "2019-11-19T19:33:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3950, "mmr_diff": 91, "enemy_nickame": "YvanDuR\u00eave", "enemy_mmr": 3859, "expected_winrate": 0.5592474000561543}, {"time_played_at": "2019-11-20T07:59:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3969, "mmr_diff": -19, "enemy_nickame": "BuRneR", "enemy_mmr": 3988, "expected_winrate": 0.4875738328873896}, {"time_played_at": "2019-11-20T08:19:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3948, "mmr_diff": 63, "enemy_nickame": "&lt;CocoCo&gt;<sp/>Goty", "enemy_mmr": 3885, "expected_winrate": 0.5411179718915647}, {"time_played_at": "2019-11-25T17:38:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3925, "mmr_diff": -95, "enemy_nickame": "&lt;kOzY&gt;<sp/>Dave", "enemy_mmr": 4020, "expected_winrate": 0.43817438762285926}, {"time_played_at": "2019-11-25T17:53:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3949, "mmr_diff": 14, "enemy_nickame": "Crombo", "enemy_mmr": 3935, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-11-26T18:58:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3927, "mmr_diff": 19, "enemy_nickame": "\u043f\u0440\u043e\u0440\u0432\u0435\u043c\u0441\u044f", "enemy_mmr": 3908, "expected_winrate": 0.5124261671126104}, {"time_played_at": "2019-11-26T19:04:47+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3905, "mmr_diff": -691, "enemy_nickame": "Doomweed", "enemy_mmr": 4596, "expected_winrate": 0.1408736498380834}, {"time_played_at": "2019-11-26T19:11:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3899, "mmr_diff": -952, "enemy_nickame": "SkyFlare", "enemy_mmr": 4851, "expected_winrate": 0.07649305137834163}, {"time_played_at": "2019-11-26T19:20:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3924, "mmr_diff": -17, "enemy_nickame": "Chief", "enemy_mmr": 3941, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2019-11-26T19:32:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3944, "mmr_diff": 136, "enemy_nickame": "Romio", "enemy_mmr": 3808, "expected_winrate": 0.5880364496644981}, {"time_played_at": "2019-11-28T19:00:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3962, "mmr_diff": 20, "enemy_nickame": "&lt;SILeSp&gt;<sp/>Galactus", "enemy_mmr": 3942, "expected_winrate": 0.5130798849527788}, {"time_played_at": "2019-11-28T19:09:44+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3940, "mmr_diff": 86, "enemy_nickame": "&lt;vGL&gt;<sp/>Celestial", "enemy_mmr": 3854, "expected_winrate": 0.556020151303233}, {"time_played_at": "2019-11-28T19:23:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 3, "enemy_nickame": "Inquisition", "enemy_mmr": 3956, "expected_winrate": 0.5019624204002703}, {"time_played_at": "2019-11-29T18:07:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3981, "mmr_diff": 5, "enemy_nickame": "zzTp", "enemy_mmr": 3976, "expected_winrate": 0.5032706708107001}, {"time_played_at": "2019-11-29T18:14:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3959, "mmr_diff": -39, "enemy_nickame": "zzTp", "enemy_mmr": 3998, "expected_winrate": 0.47451051944488615}, {"time_played_at": "2019-11-29T18:31:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3939, "mmr_diff": -14, "enemy_nickame": "&lt;ERHELM&gt;<sp/>Erik", "enemy_mmr": 3953, "expected_winrate": 0.49084301506895067}, {"time_played_at": "2019-12-02T19:29:02+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3961, "mmr_diff": -107, "enemy_nickame": "&lt;IWtD&gt;<sp/>DiabloFeTo", "enemy_mmr": 4068, "expected_winrate": 0.4304602938093038}, {"time_played_at": "2019-12-02T19:42:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3985, "mmr_diff": 25, "enemy_nickame": "&lt;OnkelS&gt;<sp/>Prolow", "enemy_mmr": 3960, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2019-12-02T20:09:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4006, "mmr_diff": -10, "enemy_nickame": "kalarazar", "enemy_mmr": 4016, "expected_winrate": 0.49345893826507303}, {"time_played_at": "2019-12-03T18:33:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4028, "mmr_diff": -27, "enemy_nickame": "&lt;Furri&gt;<sp/>PrinceOfIEM", "enemy_mmr": 4055, "expected_winrate": 0.48234546801180256}, {"time_played_at": "2019-12-03T18:55:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4007, "mmr_diff": 82, "enemy_nickame": "&lt;IBeA\u015aI&gt;<sp/>Bummsjordy", "enemy_mmr": 3925, "expected_winrate": 0.5534349310880278}, {"time_played_at": "2019-12-03T19:10:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4026, "mmr_diff": -78, "enemy_nickame": "Orian", "enemy_mmr": 4104, "expected_winrate": 0.4491531823693559}, {"time_played_at": "2019-12-05T19:21:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4007, "mmr_diff": 18, "enemy_nickame": "AlexMacedon", "enemy_mmr": 3989, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2019-12-05T19:43:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4028, "mmr_diff": 27, "enemy_nickame": "Niinja", "enemy_mmr": 4001, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2019-12-09T20:18:26+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4049, "mmr_diff": -188, "enemy_nickame": "Delaam", "enemy_mmr": 4237, "expected_winrate": 0.3794423330829675}, {"time_played_at": "2019-12-09T20:28:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4032, "mmr_diff": -129, "enemy_nickame": "PeterLax", "enemy_mmr": 4161, "expected_winrate": 0.4164076397687468}, {"time_played_at": "2019-12-09T20:36:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4015, "mmr_diff": -9, "enemy_nickame": "&lt;OGCO\u0421K&gt;<sp/>ShushYo", "enemy_mmr": 4024, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-12-09T20:39:03+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4036, "mmr_diff": -72, "enemy_nickame": "Heradrass", "enemy_mmr": 4108, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2019-12-10T19:05:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4017, "mmr_diff": -108, "enemy_nickame": "NS\u0192Faxo", "enemy_mmr": 4125, "expected_winrate": 0.42981892053631354}, {"time_played_at": "2019-12-11T20:04:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4042, "mmr_diff": 14, "enemy_nickame": "&lt;PiGPan&gt;<sp/>TNTea", "enemy_mmr": 4028, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-12-11T20:23:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4020, "mmr_diff": 8, "enemy_nickame": "Legionaru", "enemy_mmr": 4012, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-12-12T18:10:58+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4041, "mmr_diff": 49, "enemy_nickame": "Ciprian", "enemy_mmr": 3992, "expected_winrate": 0.5320091949397798}, {"time_played_at": "2019-12-12T18:48:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4061, "mmr_diff": -83, "enemy_nickame": "&lt;Nutri&gt;<sp/>Highscribe", "enemy_mmr": 4144, "expected_winrate": 0.44591848727364963}, {"time_played_at": "2019-12-12T19:02:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4042, "mmr_diff": 13, "enemy_nickame": "contremaitre", "enemy_mmr": 4029, "expected_winrate": 0.5085030455441815}, {"time_played_at": "2019-12-12T19:21:45+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4063, "mmr_diff": 12, "enemy_nickame": "Fraze", "enemy_mmr": 4051, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2019-12-12T19:28:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4041, "mmr_diff": -90, "enemy_nickame": "NazelHut", "enemy_mmr": 4131, "expected_winrate": 0.44139765822811194}, {"time_played_at": "2019-12-12T19:42:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4022, "mmr_diff": -385, "enemy_nickame": "cloud", "enemy_mmr": 4407, "expected_winrate": 0.2674927102443324}, {"time_played_at": "2019-12-12T19:53:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4001, "mmr_diff": -36, "enemy_nickame": "Xaenor", "enemy_mmr": 4037, "expected_winrate": 0.47646823150757606}, {"time_played_at": "2019-12-12T20:52:10+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3980, "mmr_diff": 15, "enemy_nickame": "&lt;snajpu&gt;<sp/>Auddi", "enemy_mmr": 3965, "expected_winrate": 0.5098108929820042}, {"time_played_at": "2019-12-12T21:03:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4001, "mmr_diff": 57, "enemy_nickame": "&lt;snajpu&gt;<sp/>Auddi", "enemy_mmr": 3944, "expected_winrate": 0.5372172158592833}, {"time_played_at": "2019-12-12T21:16:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3978, "mmr_diff": -191, "enemy_nickame": "Vidra", "enemy_mmr": 4169, "expected_winrate": 0.3775957486362336}, {"time_played_at": "2019-12-12T21:29:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 75, "enemy_nickame": "Noobofsc", "enemy_mmr": 3882, "expected_winrate": 0.5489039163154777}, {"time_played_at": "2019-12-14T10:50:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3933, "mmr_diff": -85, "enemy_nickame": "&lt;Div303&gt;<sp/>Dupsko", "enemy_mmr": 4018, "expected_winrate": 0.4446258750331179}, {"time_played_at": "2019-12-18T16:35:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3957, "mmr_diff": -109, "enemy_nickame": "&lt;IndyK&gt;<sp/>HaPe", "enemy_mmr": 4066, "expected_winrate": 0.42917778277580165}, {"time_played_at": "2019-12-18T16:53:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3938, "mmr_diff": 110, "enemy_nickame": "FrozenZerg", "enemy_mmr": 3828, "expected_winrate": 0.5714631174083814}, {"time_played_at": "2019-12-20T18:17:10+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 0, "enemy_nickame": "&lt;\u01aeesXG&gt;<sp/>Rocky", "enemy_mmr": 3957, "expected_winrate": 0.5}, {"time_played_at": "2019-12-20T18:36:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3935, "mmr_diff": -246, "enemy_nickame": "utopike", "enemy_mmr": 4181, "expected_winrate": 0.3444157777997608}, {"time_played_at": "2019-12-20T18:42:21+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3955, "mmr_diff": -205, "enemy_nickame": "Nyx", "enemy_mmr": 4160, "expected_winrate": 0.36902597468573733}, {"time_played_at": "2019-12-20T18:59:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3939, "mmr_diff": 53, "enemy_nickame": "CapSto", "enemy_mmr": 3886, "expected_winrate": 0.5346141487768358}, {"time_played_at": "2019-12-20T19:06:55+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3959, "mmr_diff": -4, "enemy_nickame": "&lt;TAW&gt;<sp/>Pote", "enemy_mmr": 3963, "expected_winrate": 0.49738344991611666}, {"time_played_at": "2019-12-20T19:21:46+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3937, "mmr_diff": 62, "enemy_nickame": "Neydark", "enemy_mmr": 3875, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2019-12-21T13:30:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 1, "enemy_nickame": "Albus", "enemy_mmr": 3956, "expected_winrate": 0.5006541431191143}, {"time_played_at": "2019-12-21T13:41:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3936, "mmr_diff": -40, "enemy_nickame": "tiwai", "enemy_mmr": 3976, "expected_winrate": 0.47385811986038295}, {"time_played_at": "2019-12-21T13:54:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 6, "enemy_nickame": "tiwai", "enemy_mmr": 3953, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-12-21T14:00:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3937, "mmr_diff": 180, "enemy_nickame": "RXX", "enemy_mmr": 3757, "expected_winrate": 0.6156164673184111}, {"time_played_at": "2019-12-21T14:10:12+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3915, "mmr_diff": -92, "enemy_nickame": "xYn", "enemy_mmr": 4007, "expected_winrate": 0.44010774162905025}, {"time_played_at": "2019-12-21T14:27:45+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3896, "mmr_diff": -15, "enemy_nickame": "Stefan", "enemy_mmr": 3911, "expected_winrate": 0.49018910701799573}, {"time_played_at": "2019-12-21T16:46:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3918, "mmr_diff": -49, "enemy_nickame": "Xenocide", "enemy_mmr": 3967, "expected_winrate": 0.4679908050602201}, {"time_played_at": "2019-12-21T16:49:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3941, "mmr_diff": -994, "enemy_nickame": "&lt;\u0413\u043d\u043e\u043c\u0438\u043a&gt;<sp/>IndeX", "enemy_mmr": 4935, "expected_winrate": 0.06908215857285668}, {"time_played_at": "2019-12-22T20:55:54+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3965, "mmr_diff": 67, "enemy_nickame": "Bingo", "enemy_mmr": 3898, "expected_winrate": 0.5437157089668173}, {"time_played_at": "2019-12-22T21:04:09+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3941, "mmr_diff": 61, "enemy_nickame": "Jungla", "enemy_mmr": 3880, "expected_winrate": 0.5398182558231894}, {"time_played_at": "2019-12-22T21:07:48+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3918, "mmr_diff": -9, "enemy_nickame": "DeepMind", "enemy_mmr": 3927, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-12-22T21:11:02+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3897, "mmr_diff": -51, "enemy_nickame": "DeepMind", "enemy_mmr": 3948, "expected_winrate": 0.4666881010864951}, {"time_played_at": "2019-12-22T21:26:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3877, "mmr_diff": 44, "enemy_nickame": "Nyxeu", "enemy_mmr": 3833, "expected_winrate": 0.5287505638922686}, {"time_played_at": "2019-12-23T16:23:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3897, "mmr_diff": 3, "enemy_nickame": "IntrinsiCat", "enemy_mmr": 3894, "expected_winrate": 0.5019624204002703}, {"time_played_at": "2019-12-23T16:30:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3898, "mmr_diff": 116, "enemy_nickame": "\u00e6\u00e6\u00e6", "enemy_mmr": 3782, "expected_winrate": 0.5753034142357183}, {"time_played_at": "2019-12-23T16:51:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3873, "mmr_diff": 87, "enemy_nickame": "Listig", "enemy_mmr": 3786, "expected_winrate": 0.5566659882772446}, {"time_played_at": "2019-12-24T11:03:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3892, "mmr_diff": 47, "enemy_nickame": "&lt;W\u00f8&gt;<sp/>poichiche", "enemy_mmr": 3845, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2019-12-24T11:17:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3869, "mmr_diff": 6, "enemy_nickame": "&lt;isIMBA&gt;<sp/>naincraft", "enemy_mmr": 3863, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-12-24T11:33:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3847, "mmr_diff": -119, "enemy_nickame": "ARCMAN", "enemy_mmr": 3966, "expected_winrate": 0.4227798108220997}, {"time_played_at": "2019-12-24T18:36:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3872, "mmr_diff": 8, "enemy_nickame": "Vakhtang", "enemy_mmr": 3864, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-12-24T18:53:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3893, "mmr_diff": 50, "enemy_nickame": "Vakhtang", "enemy_mmr": 3843, "expected_winrate": 0.5326606025904235}, {"time_played_at": "2019-12-24T19:08:58+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3914, "mmr_diff": 74, "enemy_nickame": "PPO", "enemy_mmr": 3840, "expected_winrate": 0.5482559480584295}, {"time_played_at": "2019-12-27T20:24:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3933, "mmr_diff": -100, "enemy_nickame": "HiveMind", "enemy_mmr": 4033, "expected_winrate": 0.4349563270554942}, {"time_played_at": "2019-12-27T20:40:39+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3914, "mmr_diff": 0, "enemy_nickame": "Racin", "enemy_mmr": 3914, "expected_winrate": 0.5}, {"time_played_at": "2019-12-27T21:24:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3936, "mmr_diff": -41, "enemy_nickame": "&lt;DemuCl&gt;<sp/>Jazzz", "enemy_mmr": 3977, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2019-12-28T20:58:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 22, "enemy_nickame": "rOoSter", "enemy_mmr": 3937, "expected_winrate": 0.5143871841659987}, {"time_played_at": "2019-12-28T21:06:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3980, "mmr_diff": -260, "enemy_nickame": "contremaitre", "enemy_mmr": 4240, "expected_winrate": 0.3361922887074761}, {"time_played_at": "2020-01-04T19:04:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4009, "mmr_diff": -29, "enemy_nickame": "R\u00eago", "enemy_mmr": 4038, "expected_winrate": 0.4810389357983972}, {"time_played_at": "2020-01-04T19:07:07+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4031, "mmr_diff": -132, "enemy_nickame": "&lt;un\u018aea\u018a&gt;<sp/>\u00f2M\u00e9g\u00e0", "enemy_mmr": 4163, "expected_winrate": 0.4145013213281905}, {"time_played_at": "2020-01-04T19:19:31+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4057, "mmr_diff": -32, "enemy_nickame": "Tsumi", "enemy_mmr": 4089, "expected_winrate": 0.47907962915091085}, {"time_played_at": "2020-01-05T14:03:19+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4036, "mmr_diff": -160, "enemy_nickame": "&lt;Lowko&gt;<sp/>HardNeper", "enemy_mmr": 4196, "expected_winrate": 0.3968393991220355}, {"time_played_at": "2020-01-05T14:18:07+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4019, "mmr_diff": 14, "enemy_nickame": "delmak", "enemy_mmr": 4005, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2020-01-05T14:40:17+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4040, "mmr_diff": -3, "enemy_nickame": "&lt;P\u00c2R\u0142AH&gt;<sp/>SolusRex", "enemy_mmr": 4043, "expected_winrate": 0.4980375795997298}, {"time_played_at": "2020-01-05T14:47:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4019, "mmr_diff": -17, "enemy_nickame": "Sanedude", "enemy_mmr": 4036, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2020-01-05T15:02:49+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4041, "mmr_diff": -37, "enemy_nickame": "Tomstar", "enemy_mmr": 4078, "expected_winrate": 0.47581557748569775}, {"time_played_at": "2020-01-05T15:09:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4021, "mmr_diff": 93, "enemy_nickame": "Majcher", "enemy_mmr": 3928, "expected_winrate": 0.5605369146027809}, {"time_played_at": "2020-01-05T20:23:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4039, "mmr_diff": 103, "enemy_nickame": "&lt;ORRO&gt;<sp/>jul", "enemy_mmr": 3936, "expected_winrate": 0.5669718993599533}, {"time_played_at": "2020-01-05T20:30:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4015, "mmr_diff": 27, "enemy_nickame": "oppresticles", "enemy_mmr": 3988, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2020-01-05T20:34:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3992, "mmr_diff": -22, "enemy_nickame": "&lt;iksD&gt;<sp/>OzjaszGoldbe", "enemy_mmr": 4014, "expected_winrate": 0.48561281583400134}, {"time_played_at": "2020-01-05T20:39:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3972, "mmr_diff": -56, "enemy_nickame": "lIlIlIIlIlIl", "enemy_mmr": 4028, "expected_winrate": 0.46343336634463533}, {"time_played_at": "2020-01-13T20:21:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3995, "mmr_diff": 80, "enemy_nickame": "&lt;TARAGO&gt;<sp/>Revenge", "enemy_mmr": 3915, "expected_winrate": 0.5521412274584168}, {"time_played_at": "2020-01-13T20:26:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4014, "mmr_diff": 118, "enemy_nickame": "&lt;TARAGO&gt;<sp/>Revenge", "enemy_mmr": 3896, "expected_winrate": 0.5765815195249419}, {"time_played_at": "2020-01-13T20:42:12+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3989, "mmr_diff": -28, "enemy_nickame": "MadProbe", "enemy_mmr": 4017, "expected_winrate": 0.48169217061119546}, {"time_played_at": "2020-01-13T20:56:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3968, "mmr_diff": -32, "enemy_nickame": "SUPERsKILLER", "enemy_mmr": 4000, "expected_winrate": 0.47907962915091085}, {"time_played_at": "2020-01-14T17:17:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3948, "mmr_diff": 12, "enemy_nickame": "TerenceSkill", "enemy_mmr": 3936, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2020-01-15T16:01:40+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3969, "mmr_diff": -68, "enemy_nickame": "&lt;aW&gt;<sp/>Jeatall", "enemy_mmr": 4037, "expected_winrate": 0.45563522259336753}, {"time_played_at": "2020-01-16T20:58:17+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3931, "mmr_diff": 86, "enemy_nickame": "Exit", "enemy_mmr": 3845, "expected_winrate": 0.556020151303233}, {"time_played_at": "2020-01-18T19:38:03+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3950, "mmr_diff": -30, "enemy_nickame": "&lt;SWWT&gt;<sp/>Epic", "enemy_mmr": 3980, "expected_winrate": 0.4803857658002591}, {"time_played_at": "2020-01-19T18:04:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3969, "mmr_diff": 80, "enemy_nickame": "StifleR", "enemy_mmr": 3889, "expected_winrate": 0.5521412274584168}, {"time_played_at": "2020-01-19T18:19:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3989, "mmr_diff": 10, "enemy_nickame": "&lt;Dytred&gt;<sp/>EmpiRE", "enemy_mmr": 3979, "expected_winrate": 0.506541061734927}, {"time_played_at": "2020-01-19T18:32:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4010, "mmr_diff": 13, "enemy_nickame": "MuKK", "enemy_mmr": 3997, "expected_winrate": 0.5085030455441815}, {"time_played_at": "2020-01-31T12:42:59+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4031, "mmr_diff": -44, "enemy_nickame": "&lt;adR&gt;<sp/>rdmZoo", "enemy_mmr": 4075, "expected_winrate": 0.4712494361077314}, {"time_played_at": "2020-01-31T12:54:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4011, "mmr_diff": -104, "enemy_nickame": "Stick", "enemy_mmr": 4115, "expected_winrate": 0.4323858060178517}, {"time_played_at": "2020-01-31T13:10:03+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3992, "mmr_diff": 64, "enemy_nickame": "&lt;GELSEN&gt;<sp/>Masaru", "enemy_mmr": 3928, "expected_winrate": 0.5417676213094246}, {"time_played_at": "2020-02-02T17:15:06+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4012, "mmr_diff": -80, "enemy_nickame": "&lt;0mg&gt;<sp/>Sroljo", "enemy_mmr": 4092, "expected_winrate": 0.4478587725415832}, {"time_played_at": "2020-02-02T17:26:32+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3992, "mmr_diff": -14, "enemy_nickame": "djakette", "enemy_mmr": 4006, "expected_winrate": 0.49084301506895067}, {"time_played_at": "2020-02-02T17:27:27+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3971, "mmr_diff": 58, "enemy_nickame": "Syocto", "enemy_mmr": 3913, "expected_winrate": 0.5378676713661427}, {"time_played_at": "2020-02-02T17:40:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3991, "mmr_diff": -4, "enemy_nickame": "VouS", "enemy_mmr": 3995, "expected_winrate": 0.49738344991611666}, {"time_played_at": "2020-02-02T17:48:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3970, "mmr_diff": -64, "enemy_nickame": "valera", "enemy_mmr": 4034, "expected_winrate": 0.4582323786905754}, {"time_played_at": "2020-02-02T18:09:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3993, "mmr_diff": 104, "enemy_nickame": "Jetix", "enemy_mmr": 3889, "expected_winrate": 0.5676141939821483}, {"time_played_at": "2020-02-05T21:02:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3989, "mmr_diff": 89, "enemy_nickame": "MorroLord", "enemy_mmr": 3900, "expected_winrate": 0.557957085634325}, {"time_played_at": "2020-02-05T21:05:33+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3965, "mmr_diff": -46, "enemy_nickame": "Orian", "enemy_mmr": 4011, "expected_winrate": 0.4699456739507617}, {"time_played_at": "2020-02-06T20:48:26+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3988, "mmr_diff": 26, "enemy_nickame": "MsDragonFly", "enemy_mmr": 3962, "expected_winrate": 0.5170011742274881}, {"time_played_at": "2020-02-06T21:02:53+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4009, "mmr_diff": 54, "enemy_nickame": "KJP", "enemy_mmr": 3955, "expected_winrate": 0.535265097920903}, {"time_played_at": "2020-02-09T20:04:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4029, "mmr_diff": -25, "enemy_nickame": "Grandclicker", "enemy_mmr": 4054, "expected_winrate": 0.48365224166479165}, {"time_played_at": "2020-02-09T20:19:03+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4004, "mmr_diff": 45, "enemy_nickame": "BlackSmith", "enemy_mmr": 3959, "expected_winrate": 0.5294024951224156}, {"time_played_at": "2020-02-10T19:08:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3981, "mmr_diff": 102, "enemy_nickame": "Kachu", "enemy_mmr": 3879, "expected_winrate": 0.566329379590959}, {"time_played_at": "2020-02-10T19:20:59+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3999, "mmr_diff": -73, "enemy_nickame": "Pablink", "enemy_mmr": 4072, "expected_winrate": 0.4523921838509467}, {"time_played_at": "2020-02-10T19:37:26+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4023, "mmr_diff": -9, "enemy_nickame": "&lt;biglol&gt;<sp/>bany", "enemy_mmr": 4032, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2020-02-11T17:52:08+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4045, "mmr_diff": 59, "enemy_nickame": "ZZtopGun", "enemy_mmr": 3986, "expected_winrate": 0.5385179979869474}, {"time_played_at": "2020-02-11T18:03:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4064, "mmr_diff": 98, "enemy_nickame": "ZZtopGun", "enemy_mmr": 3966, "expected_winrate": 0.563757090736234}, {"time_played_at": "2020-02-13T18:20:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4083, "mmr_diff": 81, "enemy_nickame": "Salomoon", "enemy_mmr": 4002, "expected_winrate": 0.552788168619027}, {"time_played_at": "2020-02-13T18:34:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4102, "mmr_diff": -136, "enemy_nickame": "&lt;BnetFR&gt;<sp/>NeWHoriZonS", "enemy_mmr": 4238, "expected_winrate": 0.411963550335502}, {"time_played_at": "2020-02-13T19:26:27+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4085, "mmr_diff": 90, "enemy_nickame": "HeroMarauder", "enemy_mmr": 3995, "expected_winrate": 0.5586023417718881}, {"time_played_at": "2020-02-13T19:45:12+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4104, "mmr_diff": -121, "enemy_nickame": "\u041e\u0422\u041c\u041e\u0420\u041e\u0417\u041e\u041a", "enemy_mmr": 4225, "expected_winrate": 0.42150324765525726}, {"time_played_at": "2020-02-14T12:24:59+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4123, "mmr_diff": 25, "enemy_nickame": "Haze", "enemy_mmr": 4098, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2020-02-14T12:29:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4101, "mmr_diff": -350, "enemy_nickame": "StormHead", "enemy_mmr": 4451, "expected_winrate": 0.2858142640872888}, {"time_played_at": "2020-02-15T12:57:31+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4083, "mmr_diff": -52, "enemy_nickame": "&lt;FxL&gt;<sp/>bojan", "enemy_mmr": 4135, "expected_winrate": 0.4660369182913983}, {"time_played_at": "2020-02-15T13:41:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4063, "mmr_diff": 21, "enemy_nickame": "llllllllllll", "enemy_mmr": 4042, "expected_winrate": 0.5137335580481893}, {"time_played_at": "2020-02-17T16:31:23+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4041, "mmr_diff": 33, "enemy_nickame": "&lt;lLiTl&gt;<sp/>Quickman", "enemy_mmr": 4008, "expected_winrate": 0.5215733330511455}, {"time_played_at": "2020-02-17T16:49:49+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4018, "mmr_diff": 7, "enemy_nickame": "&lt;lLiTl&gt;<sp/>Quickman", "enemy_mmr": 4011, "expected_winrate": 0.5045788764382211}, {"time_played_at": "2020-02-17T17:15:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3997, "mmr_diff": -155, "enemy_nickame": "Stilgar", "enemy_mmr": 4152, "expected_winrate": 0.39997507454646586}, {"time_played_at": "2020-02-18T18:41:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4019, "mmr_diff": -89, "enemy_nickame": "Canfup", "enemy_mmr": 4108, "expected_winrate": 0.4420429143656749}, {"time_played_at": "2020-02-18T18:56:03+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4000, "mmr_diff": -95, "enemy_nickame": "Hello", "enemy_mmr": 4095, "expected_winrate": 0.43817438762285926}, {"time_played_at": "2020-02-18T19:11:38+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4024, "mmr_diff": -47, "enemy_nickame": "Hello", "enemy_mmr": 4071, "expected_winrate": 0.46929394553496245}, {"time_played_at": "2020-02-18T19:24:22+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4047, "mmr_diff": -290, "enemy_nickame": "ajb", "enemy_mmr": 4337, "expected_winrate": 0.3189054546669155}, {"time_played_at": "2020-02-20T20:24:49+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4067, "mmr_diff": 219, "enemy_nickame": "Badcomedian", "enemy_mmr": 3848, "expected_winrate": 0.6394619681316271}, {"time_played_at": "2020-02-21T16:46:06+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4048, "mmr_diff": -63, "enemy_nickame": "razor", "enemy_mmr": 4111, "expected_winrate": 0.4588820281084352}, {"time_played_at": "2020-02-21T17:06:44+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4029, "mmr_diff": 20, "enemy_nickame": "&lt;0301&gt;<sp/>kookooseen", "enemy_mmr": 4009, "expected_winrate": 0.5130798849527788}, {"time_played_at": "2020-02-21T17:20:16+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4050, "mmr_diff": -94, "enemy_nickame": "Scythe", "enemy_mmr": 4144, "expected_winrate": 0.4388186333591383}, {"time_played_at": "2020-02-21T19:32:38+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4071, "mmr_diff": 50, "enemy_nickame": "Sentinel", "enemy_mmr": 4021, "expected_winrate": 0.5326606025904235}, {"time_played_at": "2020-02-26T18:13:51+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4091, "mmr_diff": -45, "enemy_nickame": "BlackAnubis", "enemy_mmr": 4136, "expected_winrate": 0.47059750487758445}, {"time_played_at": "2020-02-26T18:27:28+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4114, "mmr_diff": -99, "enemy_nickame": "&lt;BornG&gt;<sp/>LucidityDark", "enemy_mmr": 4213, "expected_winrate": 0.4355995097595788}, {"time_played_at": "2020-02-27T21:17:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4139, "mmr_diff": -262, "enemy_nickame": "&lt;PlAr&gt;<sp/>Arcanewinds", "enemy_mmr": 4401, "expected_winrate": 0.33502542553804826}, {"time_played_at": "2020-02-28T07:06:26+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4117, "mmr_diff": -327, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 4444, "expected_winrate": 0.2982553300458027}, {"time_played_at": "2020-02-29T15:07:01+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4100, "mmr_diff": -367, "enemy_nickame": "&lt;HBeS&gt;<sp/>LoziRa", "enemy_mmr": 4467, "expected_winrate": 0.27682160785890525}, {"time_played_at": "2020-02-29T15:22:31+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4083, "mmr_diff": 23, "enemy_nickame": "StepO", "enemy_mmr": 4060, "expected_winrate": 0.5150407610740062}, {"time_played_at": "2020-02-29T15:40:54+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4104, "mmr_diff": -89, "enemy_nickame": "Othello", "enemy_mmr": 4193, "expected_winrate": 0.4420429143656749}, {"time_played_at": "2020-02-29T15:49:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4085, "mmr_diff": -90, "enemy_nickame": "&lt;Irri&gt;<sp/>Irrichi", "enemy_mmr": 4175, "expected_winrate": 0.44139765822811194}, {"time_played_at": "2020-03-01T20:09:47+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4066, "mmr_diff": 67, "enemy_nickame": "FckVwls", "enemy_mmr": 3999, "expected_winrate": 0.5437157089668173}, {"time_played_at": "2020-03-02T09:38:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4086, "mmr_diff": 82, "enemy_nickame": "Piliskner", "enemy_mmr": 4004, "expected_winrate": 0.5534349310880278}, {"time_played_at": "2020-03-02T09:52:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4105, "mmr_diff": -180, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 4285, "expected_winrate": 0.3843835326815888}, {"time_played_at": "2020-03-02T10:06:27+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4088, "mmr_diff": 69, "enemy_nickame": "TGNP", "enemy_mmr": 4019, "expected_winrate": 0.5450136951714643}, {"time_played_at": "2020-03-02T13:26:04+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4106, "mmr_diff": -84, "enemy_nickame": "WizZy", "enemy_mmr": 4190, "expected_winrate": 0.4452720886026404}, {"time_played_at": "2020-03-02T13:45:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4130, "mmr_diff": -36, "enemy_nickame": "WizZy", "enemy_mmr": 4166, "expected_winrate": 0.47646823150757606}, {"time_played_at": "2020-03-04T17:23:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4153, "mmr_diff": -30, "enemy_nickame": "MothMonkey", "enemy_mmr": 4183, "expected_winrate": 0.4803857658002591}, {"time_played_at": "2020-03-04T17:39:40+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4132, "mmr_diff": 56, "enemy_nickame": "Leaf", "enemy_mmr": 4076, "expected_winrate": 0.5365666336553646}, {"time_played_at": "2020-03-04T17:52:41+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4109, "mmr_diff": -133, "enemy_nickame": "helloRJ", "enemy_mmr": 4242, "expected_winrate": 0.4138664474466713}, {"time_played_at": "2020-03-05T21:18:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4091, "mmr_diff": 74, "enemy_nickame": "Cyborg", "enemy_mmr": 4017, "expected_winrate": 0.5482559480584295}, {"time_played_at": "2020-03-09T11:03:30+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4050, "mmr_diff": -178, "enemy_nickame": "Noldo", "enemy_mmr": 4228, "expected_winrate": 0.3856226141648234}, {"time_played_at": "2020-03-09T11:22:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4033, "mmr_diff": 32, "enemy_nickame": "Vorp", "enemy_mmr": 4001, "expected_winrate": 0.520920370849089}, {"time_played_at": "2020-03-10T19:22:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4053, "mmr_diff": -46, "enemy_nickame": "&lt;FaDr&gt;<sp/>BURNIE", "enemy_mmr": 4099, "expected_winrate": 0.4699456739507617}, {"time_played_at": "2020-03-10T19:40:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4032, "mmr_diff": -18, "enemy_nickame": "Drakezul", "enemy_mmr": 4050, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2020-03-11T20:53:48+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4054, "mmr_diff": 81, "enemy_nickame": "StaryPijany", "enemy_mmr": 3973, "expected_winrate": 0.552788168619027}, {"time_played_at": "2020-03-12T18:55:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4030, "mmr_diff": -7, "enemy_nickame": "ORIGYN", "enemy_mmr": 4037, "expected_winrate": 0.4954211235617789}, {"time_played_at": "2020-03-12T19:06:49+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4009, "mmr_diff": 104, "enemy_nickame": "Salomoon", "enemy_mmr": 3905, "expected_winrate": 0.5676141939821483}, {"time_played_at": "2020-03-13T07:52:51+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3984, "mmr_diff": -256, "enemy_nickame": "&lt;Dobro&gt;<sp/>KINE", "enemy_mmr": 4240, "expected_winrate": 0.3385320109141423}, {"time_played_at": "2020-03-14T15:13:34+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3970, "mmr_diff": -95, "enemy_nickame": "adrianjakuba", "enemy_mmr": 4065, "expected_winrate": 0.43817438762285926}, {"time_played_at": "2020-03-14T15:18:34+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3993, "mmr_diff": 18, "enemy_nickame": "ODISEO", "enemy_mmr": 3975, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2020-03-14T15:34:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4014, "mmr_diff": 95, "enemy_nickame": "&lt;SCTR&gt;<sp/>LimeTime", "enemy_mmr": 3919, "expected_winrate": 0.5618256123771407}, {"time_played_at": "2020-03-14T16:18:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4033, "mmr_diff": -58, "enemy_nickame": "&lt;PLA2N&gt;<sp/>ZloyVakarian", "enemy_mmr": 4091, "expected_winrate": 0.4621323286338574}, {"time_played_at": "2020-03-14T16:31:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4013, "mmr_diff": -80, "enemy_nickame": "hellyeah", "enemy_mmr": 4093, "expected_winrate": 0.4478587725415832}, {"time_played_at": "2020-03-14T20:10:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3994, "mmr_diff": -51, "enemy_nickame": "&lt;GROF&gt;<sp/>Shefarin", "enemy_mmr": 4045, "expected_winrate": 0.4666881010864951}, {"time_played_at": "2020-03-14T20:23:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4017, "mmr_diff": -28, "enemy_nickame": "Ben", "enemy_mmr": 4045, "expected_winrate": 0.48169217061119546}, {"time_played_at": "2020-03-18T12:33:17+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4040, "mmr_diff": -61, "enemy_nickame": "ManeWicht", "enemy_mmr": 4101, "expected_winrate": 0.4601817441768105}, {"time_played_at": "2020-03-18T12:41:44+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4020, "mmr_diff": 45, "enemy_nickame": "Apollo", "enemy_mmr": 3975, "expected_winrate": 0.5294024951224156}, {"time_played_at": "2020-03-18T12:57:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4040, "mmr_diff": -149, "enemy_nickame": "&lt;noIMBA&gt;<sp/>Facehugger", "enemy_mmr": 4189, "expected_winrate": 0.40374871115781824}, {"time_played_at": "2020-03-22T11:58:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4066, "mmr_diff": 19, "enemy_nickame": "&lt;Hasu&gt;<sp/>RunGen", "enemy_mmr": 4047, "expected_winrate": 0.5124261671126104}, {"time_played_at": "2020-03-22T12:03:13+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4044, "mmr_diff": 41, "enemy_nickame": "OOOOOOOOOOOO", "enemy_mmr": 4003, "expected_winrate": 0.5267941904791901}, {"time_played_at": "2020-03-29T20:40:34+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4022, "mmr_diff": -18, "enemy_nickame": "&lt;SCBoys&gt;<sp/>CiRkuS", "enemy_mmr": 4040, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2020-03-30T15:48:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4001, "mmr_diff": 4, "enemy_nickame": "Bee", "enemy_mmr": 3997, "expected_winrate": 0.5026165500838834}, {"time_played_at": "2020-03-31T12:27:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3979, "mmr_diff": -31, "enemy_nickame": "&lt;lLiTl&gt;<sp/>Rud", "enemy_mmr": 4010, "expected_winrate": 0.479732662842747}, {"time_played_at": "2020-04-01T06:54:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4000, "mmr_diff": -23, "enemy_nickame": "&lt;TRSO&gt;<sp/>THERIPPER", "enemy_mmr": 4023, "expected_winrate": 0.4849592389259938}, {"time_played_at": "2020-04-15T14:28:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4022, "mmr_diff": 18, "enemy_nickame": "MrBeck", "enemy_mmr": 4004, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2020-04-15T14:50:51+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4043, "mmr_diff": 104, "enemy_nickame": "Anrik", "enemy_mmr": 3939, "expected_winrate": 0.5676141939821483}, {"time_played_at": "2020-04-15T15:03:08+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4018, "mmr_diff": -135, "enemy_nickame": "Tomus", "enemy_mmr": 4153, "expected_winrate": 0.41259755997469955}, {"time_played_at": "2020-04-17T19:15:54+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4001, "mmr_diff": 39, "enemy_nickame": "Vanquish", "enemy_mmr": 3962, "expected_winrate": 0.5254894805551138}, {"time_played_at": "2020-04-17T19:31:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4021, "mmr_diff": -9, "enemy_nickame": "Boban", "enemy_mmr": 4030, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2020-04-17T20:10:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4062, "mmr_diff": 12, "enemy_nickame": "Etharis", "enemy_mmr": 4050, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2020-04-17T20:20:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4040, "mmr_diff": -40, "enemy_nickame": "&lt;Peeps&gt;<sp/>ReNoVation", "enemy_mmr": 4080, "expected_winrate": 0.47385811986038295}, {"time_played_at": "2020-04-17T20:26:10+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4062, "mmr_diff": -31, "enemy_nickame": "&lt;HBGS&gt;<sp/>ShoWTimE", "enemy_mmr": 4093, "expected_winrate": 0.479732662842747}, {"time_played_at": "2020-04-18T20:05:07+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4042, "mmr_diff": -29, "enemy_nickame": "MouseGGAXE", "enemy_mmr": 4071, "expected_winrate": 0.4810389357983972}, {"time_played_at": "2020-04-18T20:18:26+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4021, "mmr_diff": 8, "enemy_nickame": "&lt;HsDL&gt;<sp/>Domius", "enemy_mmr": 4013, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2020-04-18T20:30:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4042, "mmr_diff": -104, "enemy_nickame": "Alyaska", "enemy_mmr": 4146, "expected_winrate": 0.4323858060178517}, {"time_played_at": "2020-04-18T20:45:46+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4022, "mmr_diff": -87, "enemy_nickame": "&lt;RBP3&gt;<sp/>Steal", "enemy_mmr": 4109, "expected_winrate": 0.44333401172275544}, {"time_played_at": "2020-04-20T11:40:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4047, "mmr_diff": 28, "enemy_nickame": "Kilkenny", "enemy_mmr": 4019, "expected_winrate": 0.5183078293888046}, {"time_played_at": "2020-04-21T19:29:13+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4067, "mmr_diff": 18, "enemy_nickame": "BsCMBANerd", "enemy_mmr": 4049, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2020-04-22T20:24:41+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4045, "mmr_diff": 47, "enemy_nickame": "puLse", "enemy_mmr": 3998, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2020-04-22T20:30:29+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4022, "mmr_diff": 1, "enemy_nickame": "puLse", "enemy_mmr": 4021, "expected_winrate": 0.5006541431191143}, {"time_played_at": "2020-04-22T20:45:38+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4001, "mmr_diff": 42, "enemy_nickame": "mSin", "enemy_mmr": 3959, "expected_winrate": 0.5274464093596006}, {"time_played_at": "2020-04-24T18:14:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4021, "mmr_diff": 36, "enemy_nickame": "Spider", "enemy_mmr": 3985, "expected_winrate": 0.5235317684924239}, {"time_played_at": "2020-04-24T18:18:47+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3999, "mmr_diff": 9, "enemy_nickame": "Spider", "enemy_mmr": 3990, "expected_winrate": 0.5058870193731037}, {"time_played_at": "2020-04-27T11:04:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3977, "mmr_diff": -25, "enemy_nickame": "Mitchowyn", "enemy_mmr": 4002, "expected_winrate": 0.48365224166479165}, {"time_played_at": "2020-04-27T11:06:38+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3956, "mmr_diff": -77, "enemy_nickame": "Etharis", "enemy_mmr": 4033, "expected_winrate": 0.449800646746463}, {"time_played_at": "2020-04-27T11:15:08+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3980, "mmr_diff": 97, "enemy_nickame": "DupaDuupa", "enemy_mmr": 3883, "expected_winrate": 0.5631134765259213}, {"time_played_at": "2020-04-27T11:29:31+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3955, "mmr_diff": -168, "enemy_nickame": "&lt;BARJO&gt;<sp/>JDH", "enemy_mmr": 4123, "expected_winrate": 0.39183999647141454}, {"time_played_at": "2020-04-27T11:42:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3975, "mmr_diff": -224, "enemy_nickame": "&lt;NetGG&gt;<sp/>vladozerg", "enemy_mmr": 4199, "expected_winrate": 0.35752730772110347}, {"time_played_at": "2020-04-27T12:02:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 108, "enemy_nickame": "Schmaunzer", "enemy_mmr": 3851, "expected_winrate": 0.5701810794636865}, {"time_played_at": "2020-04-27T12:24:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3935, "mmr_diff": 46, "enemy_nickame": "Ise", "enemy_mmr": 3889, "expected_winrate": 0.5300543260492383}, {"time_played_at": "2020-04-28T12:16:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3912, "mmr_diff": -133, "enemy_nickame": "DupaDuupa", "enemy_mmr": 4045, "expected_winrate": 0.4138664474466713}, {"time_played_at": "2020-04-28T12:40:14+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3872, "mmr_diff": -1163, "enemy_nickame": "&lt;Mkers&gt;<sp/>Doc", "enemy_mmr": 5035, "expected_winrate": 0.045517365974079564}, {"time_played_at": "2020-04-28T13:05:12+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3895, "mmr_diff": 39, "enemy_nickame": "AndrU", "enemy_mmr": 3856, "expected_winrate": 0.5254894805551138}, {"time_played_at": "2020-04-30T10:56:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3915, "mmr_diff": -9, "enemy_nickame": "&lt;RIIP&gt;<sp/>Airea", "enemy_mmr": 3924, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2020-04-30T11:20:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3937, "mmr_diff": 35, "enemy_nickame": "&lt;RIIP&gt;<sp/>Airea", "enemy_mmr": 3902, "expected_winrate": 0.5228790340944155}, {"time_played_at": "2020-04-30T11:33:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3957, "mmr_diff": -131, "enemy_nickame": "KillemAll", "enemy_mmr": 4088, "expected_winrate": 0.41513647933297476}, {"time_played_at": "2020-04-30T18:14:21+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3983, "mmr_diff": 62, "enemy_nickame": "FrosT", "enemy_mmr": 3921, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2020-04-30T18:34:01+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3964, "mmr_diff": -91, "enemy_nickame": "&lt;BRs&gt;<sp/>GoodFellas", "enemy_mmr": 4055, "expected_winrate": 0.44075259994384575}, {"time_played_at": "2020-05-01T11:39:32+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3988, "mmr_diff": 36, "enemy_nickame": "Samaya", "enemy_mmr": 3952, "expected_winrate": 0.5235317684924239}, {"time_played_at": "2020-05-01T11:59:09+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3965, "mmr_diff": -62, "enemy_nickame": "fireballkid", "enemy_mmr": 4027, "expected_winrate": 0.45953181733049886}, {"time_played_at": "2020-05-01T12:12:21+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3945, "mmr_diff": 40, "enemy_nickame": "xyzxyzxyz", "enemy_mmr": 3905, "expected_winrate": 0.5261418801396169}, {"time_played_at": "2020-05-01T12:37:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3923, "mmr_diff": 153, "enemy_nickame": "&lt;HsDL&gt;<sp/>Zero", "enemy_mmr": 3770, "expected_winrate": 0.5987683411538888}, {"time_played_at": "2020-05-01T12:42:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3944, "mmr_diff": 4, "enemy_nickame": "Cptred", "enemy_mmr": 3940, "expected_winrate": 0.5026165500838834}, {"time_played_at": "2020-05-01T12:54:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3965, "mmr_diff": 66, "enemy_nickame": "Cptred", "enemy_mmr": 3899, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2020-05-01T13:09:10+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3942, "mmr_diff": -140, "enemy_nickame": "&lt;IBeA\u015aI&gt;<sp/>Epiku", "enemy_mmr": 4082, "expected_winrate": 0.40943045167820846}, {"time_played_at": "2020-05-02T14:40:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3968, "mmr_diff": 47, "enemy_nickame": "&lt;IndyK&gt;<sp/>Wawszyn", "enemy_mmr": 3921, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2020-05-02T14:53:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3945, "mmr_diff": 14, "enemy_nickame": "&lt;EZPTS&gt;<sp/>talisman", "enemy_mmr": 3931, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2020-05-02T19:06:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3966, "mmr_diff": 7, "enemy_nickame": "Pokimon", "enemy_mmr": 3959, "expected_winrate": 0.5045788764382211}, {"time_played_at": "2020-05-02T19:20:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3944, "mmr_diff": -54, "enemy_nickame": "mozgj", "enemy_mmr": 3998, "expected_winrate": 0.4647349020790969}, {"time_played_at": "2020-05-03T20:09:30+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3966, "mmr_diff": 78, "enemy_nickame": "RomaNo", "enemy_mmr": 3888, "expected_winrate": 0.550846817630644}, {"time_played_at": "2020-05-03T20:33:12+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3942, "mmr_diff": -97, "enemy_nickame": "&lt;FSeS&gt;<sp/>Wizzl\u00f4", "enemy_mmr": 4039, "expected_winrate": 0.43688652347407875}, {"time_played_at": "2020-05-03T20:43:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3966, "mmr_diff": -22, "enemy_nickame": "Mich", "enemy_mmr": 3988, "expected_winrate": 0.48561281583400134}, {"time_played_at": "2020-05-03T20:53:32+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3946, "mmr_diff": -79, "enemy_nickame": "Epicnoob", "enemy_mmr": 4025, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2020-05-04T12:43:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3926, "mmr_diff": 95, "enemy_nickame": "StaMinA", "enemy_mmr": 3831, "expected_winrate": 0.5618256123771407}, {"time_played_at": "2020-05-04T12:58:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3945, "mmr_diff": -7, "enemy_nickame": "Doghum", "enemy_mmr": 3952, "expected_winrate": 0.4954211235617789}, {"time_played_at": "2020-05-04T13:02:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3967, "mmr_diff": 22, "enemy_nickame": "Piiras", "enemy_mmr": 3945, "expected_winrate": 0.5143871841659987}, {"time_played_at": "2020-05-05T17:32:14+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3988, "mmr_diff": 119, "enemy_nickame": "&lt;VKT&gt;<sp/>R\u00f8rtangen", "enemy_mmr": 3869, "expected_winrate": 0.5772201891779002}, {"time_played_at": "2020-05-05T17:44:27+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4005, "mmr_diff": 24, "enemy_nickame": "&lt;\u01aeesXG&gt;<sp/>Rymdkrigaren", "enemy_mmr": 3981, "expected_winrate": 0.5156942865406842}, {"time_played_at": "2020-05-05T18:00:50+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4026, "mmr_diff": 193, "enemy_nickame": "helldenn", "enemy_mmr": 3833, "expected_winrate": 0.6236333410254552}, {"time_played_at": "2020-05-07T09:30:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4042, "mmr_diff": 34, "enemy_nickame": "&lt;BRSKR&gt;<sp/>Hexe", "enemy_mmr": 4008, "expected_winrate": 0.5222262215402946}, {"time_played_at": "2020-05-07T09:42:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4062, "mmr_diff": -57, "enemy_nickame": "Yeezus", "enemy_mmr": 4119, "expected_winrate": 0.4627827841407167}, {"time_played_at": "2020-05-07T10:13:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4086, "mmr_diff": 14, "enemy_nickame": "Yeezus", "enemy_mmr": 4072, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2020-05-08T11:14:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4107, "mmr_diff": 60, "enemy_nickame": "&lt;tXs&gt;<sp/>TheBloke", "enemy_mmr": 4047, "expected_winrate": 0.5391681935344519}, {"time_played_at": "2020-05-08T11:34:03+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4127, "mmr_diff": 109, "enemy_nickame": "Ergopro", "enemy_mmr": 4018, "expected_winrate": 0.5708222172241983}, {"time_played_at": "2020-05-10T18:56:45+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4145, "mmr_diff": -282, "enemy_nickame": "T\u00f6rtt\u00f6", "enemy_mmr": 4427, "expected_winrate": 0.3234692470348148}, {"time_played_at": "2020-05-10T19:12:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4131, "mmr_diff": 26, "enemy_nickame": "&lt;2G1M&gt;<sp/>Mime", "enemy_mmr": 4105, "expected_winrate": 0.5170011742274881}, {"time_played_at": "2020-05-10T19:29:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4109, "mmr_diff": -18, "enemy_nickame": "&lt;2G1M&gt;<sp/>Mime", "enemy_mmr": 4127, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2020-05-11T09:23:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4088, "mmr_diff": -137, "enemy_nickame": "DonkeyMonkey", "enemy_mmr": 4225, "expected_winrate": 0.4113298327220324}, {"time_played_at": "2020-05-11T09:35:55+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4070, "mmr_diff": -72, "enemy_nickame": "Elosai", "enemy_mmr": 4142, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2020-05-11T09:41:36+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4051, "mmr_diff": 107, "enemy_nickame": "ElBarto", "enemy_mmr": 3944, "expected_winrate": 0.5695397061906963}, {"time_played_at": "2020-05-12T17:37:31+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4026, "mmr_diff": -14, "enemy_nickame": "Tiger", "enemy_mmr": 4040, "expected_winrate": 0.49084301506895067}, {"time_played_at": "2020-05-12T17:59:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4005, "mmr_diff": -11, "enemy_nickame": "BuRneR", "enemy_mmr": 4016, "expected_winrate": 0.49280491829094863}, {"time_played_at": "2020-05-12T18:11:01+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4027, "mmr_diff": -99, "enemy_nickame": "\u041b\u043e\u0445", "enemy_mmr": 4126, "expected_winrate": 0.4355995097595788}, {"time_played_at": "2020-05-15T20:56:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4006, "mmr_diff": 46, "enemy_nickame": "TerenceSkill", "enemy_mmr": 3960, "expected_winrate": 0.5300543260492383}, {"time_played_at": "2020-05-26T09:13:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4026, "mmr_diff": 45, "enemy_nickame": "Marvin", "enemy_mmr": 3981, "expected_winrate": 0.5294024951224156}, {"time_played_at": "2020-05-26T09:34:07+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4046, "mmr_diff": 6, "enemy_nickame": "kerokero", "enemy_mmr": 4040, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2020-05-26T09:46:32+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4024, "mmr_diff": -50, "enemy_nickame": "MKPrime", "enemy_mmr": 4074, "expected_winrate": 0.4673393974095765}, {"time_played_at": "2020-05-27T10:12:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4004, "mmr_diff": -89, "enemy_nickame": "MasterZERG", "enemy_mmr": 4093, "expected_winrate": 0.4420429143656749}, {"time_played_at": "2020-05-27T10:21:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3985, "mmr_diff": 98, "enemy_nickame": "Froze", "enemy_mmr": 3887, "expected_winrate": 0.563757090736234}, {"time_played_at": "2020-05-27T10:32:29+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4004, "mmr_diff": -169, "enemy_nickame": "giletjaune", "enemy_mmr": 4173, "expected_winrate": 0.3912166399665741}, {"time_played_at": "2020-05-27T10:56:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4030, "mmr_diff": -73, "enemy_nickame": "CleanSweep", "enemy_mmr": 4103, "expected_winrate": 0.4523921838509467}, {"time_played_at": "2020-05-29T12:17:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4054, "mmr_diff": 125, "enemy_nickame": "&lt;SeoYN&gt;<sp/>General", "enemy_mmr": 3929, "expected_winrate": 0.5810467174657031}, {"time_played_at": "2020-05-29T17:58:42+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4072, "mmr_diff": 32, "enemy_nickame": "Sclera", "enemy_mmr": 4040, "expected_winrate": 0.520920370849089}, {"time_played_at": "2020-05-29T18:27:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4093, "mmr_diff": 12, "enemy_nickame": "&lt;Hasu&gt;<sp/>RunGen", "enemy_mmr": 4081, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2020-05-30T20:50:13+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4071, "mmr_diff": 122, "enemy_nickame": "Hellfighter", "enemy_mmr": 3949, "expected_winrate": 0.579134641806555}, {"time_played_at": "2020-05-30T21:10:17+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4089, "mmr_diff": -34, "enemy_nickame": "Onkelelak", "enemy_mmr": 4123, "expected_winrate": 0.47777377845970537}, {"time_played_at": "2020-06-01T11:40:30+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4112, "mmr_diff": -141, "enemy_nickame": "Minoda", "enemy_mmr": 4253, "expected_winrate": 0.4087979217905979}, {"time_played_at": "2020-06-01T11:53:17+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4094, "mmr_diff": -129, "enemy_nickame": "iga", "enemy_mmr": 4223, "expected_winrate": 0.4164076397687468}, {"time_played_at": "2020-06-02T18:39:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4076, "mmr_diff": 17, "enemy_nickame": "IIIIIIIII", "enemy_mmr": 4059, "expected_winrate": 0.5111186061324027}, {"time_played_at": "2020-06-02T18:56:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4097, "mmr_diff": 69, "enemy_nickame": "&lt;IndyK&gt;<sp/>Wawszyn", "enemy_mmr": 4028, "expected_winrate": 0.5450136951714643}, {"time_played_at": "2020-06-03T17:53:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4117, "mmr_diff": 171, "enemy_nickame": "&lt;DisES&gt;<sp/>Kamenashi", "enemy_mmr": 3946, "expected_winrate": 0.6100290069264851}, {"time_played_at": "2020-06-03T17:54:42+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4133, "mmr_diff": -27, "enemy_nickame": "Etharis", "enemy_mmr": 4160, "expected_winrate": 0.48234546801180256}, {"time_played_at": "2020-06-03T18:04:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4156, "mmr_diff": -88, "enemy_nickame": "Liverpool", "enemy_mmr": 4244, "expected_winrate": 0.44268836623770724}, {"time_played_at": "2020-06-03T18:34:39+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4180, "mmr_diff": -124, "enemy_nickame": "feetlover", "enemy_mmr": 4304, "expected_winrate": 0.41959037361733365}, {"time_played_at": "2020-06-04T19:03:54+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4203, "mmr_diff": 21, "enemy_nickame": "JOOPSTAR", "enemy_mmr": 4182, "expected_winrate": 0.5137335580481893}, {"time_played_at": "2020-06-04T19:18:46+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4181, "mmr_diff": -189, "enemy_nickame": "&lt;AiR\u01c2&gt;<sp/>SuperNova", "enemy_mmr": 4370, "expected_winrate": 0.37882641391385774}, {"time_played_at": "2020-06-09T17:03:47+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4208, "mmr_diff": 14, "enemy_nickame": "Ziiim", "enemy_mmr": 4194, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2020-06-09T17:11:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4186, "mmr_diff": 39, "enemy_nickame": "djakette", "enemy_mmr": 4147, "expected_winrate": 0.5254894805551138}, {"time_played_at": "2020-06-09T17:24:17+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4164, "mmr_diff": -68, "enemy_nickame": "StaMinA", "enemy_mmr": 4232, "expected_winrate": 0.45563522259336753}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<p>I’d say it’s a steady climb upwards, but sometimes it feels nothing like that.</p>
<p>I’m also going to limit my current analysis to 2019 replays (I did have more before October, but I think I lost them somewhere):</p>
<div id="cell-15" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">data2019 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019-01-01'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020-01-01'</span>)]</span>
<span id="cb7-2">data2019</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">time_played_at</th>
<th data-quarto-table-cell-role="th">win</th>
<th data-quarto-table-cell-role="th">race</th>
<th data-quarto-table-cell-role="th">enemy_race</th>
<th data-quarto-table-cell-role="th">mmr</th>
<th data-quarto-table-cell-role="th">mmr_diff</th>
<th data-quarto-table-cell-role="th">enemy_nickame</th>
<th data-quarto-table-cell-role="th">enemy_mmr</th>
<th data-quarto-table-cell-role="th">expected_winrate</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">428</td>
<td>2019-10-06 12:23:56+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Protoss</td>
<td>3751</td>
<td>25</td>
<td>MJM</td>
<td>3726</td>
<td>0.516348</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">8</td>
<td>2019-10-06 12:36:36+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Protoss</td>
<td>3826</td>
<td>78</td>
<td>vasea</td>
<td>3748</td>
<td>0.550847</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">322</td>
<td>2019-10-08 19:33:28+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Protoss</td>
<td>3893</td>
<td>-53</td>
<td>Wavelength</td>
<td>3946</td>
<td>0.465386</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">54</td>
<td>2019-10-10 07:41:27+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>3828</td>
<td>26</td>
<td>PereiRa</td>
<td>3802</td>
<td>0.517001</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">343</td>
<td>2019-10-10 07:55:19+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>3760</td>
<td>-56</td>
<td>&amp;lt;PROOO&amp;gt;&lt;sp/&gt;Jesperpro</td>
<td>3816</td>
<td>0.463433</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">388</td>
<td>2019-12-27 20:24:27+00:00</td>
<td>False</td>
<td>Protoss</td>
<td>Zerg</td>
<td>3933</td>
<td>-100</td>
<td>HiveMind</td>
<td>4033</td>
<td>0.434956</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">25</td>
<td>2019-12-27 20:40:39+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>3914</td>
<td>0</td>
<td>Racin</td>
<td>3914</td>
<td>0.500000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">205</td>
<td>2019-12-27 21:24:06+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>3936</td>
<td>-41</td>
<td>&amp;lt;DemuCl&amp;gt;&lt;sp/&gt;Jazzz</td>
<td>3977</td>
<td>0.473206</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">59</td>
<td>2019-12-28 20:58:25+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Terran</td>
<td>3959</td>
<td>22</td>
<td>rOoSter</td>
<td>3937</td>
<td>0.514387</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">361</td>
<td>2019-12-28 21:06:48+00:00</td>
<td>True</td>
<td>Protoss</td>
<td>Zerg</td>
<td>3980</td>
<td>-260</td>
<td>contremaitre</td>
<td>4240</td>
<td>0.336192</td>
</tr>
</tbody>
</table>

<p>142 rows × 9 columns</p>
</div>
</div>
</div>
<div id="cell-16" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">altair.Chart(data2019).mark_circle().encode(</span>
<span id="cb8-2">    altair.X(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_played_at'</span>),</span>
<span id="cb8-3">    altair.Y(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mmr'</span>,</span>
<span id="cb8-4">             scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Scale(zero<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)),</span>
<span id="cb8-5">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_race'</span>,</span>
<span id="cb8-6">).interactive()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">

<div id="altair-viz-b3a398756b184736824024cfe15956bd"></div>
<script type="text/javascript">
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-b3a398756b184736824024cfe15956bd") {
      outputDiv = document.getElementById("altair-viz-b3a398756b184736824024cfe15956bd");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm//vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm//vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm//vega-lite@4.8.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm//vega-embed@6?noext",
    };

    function loadScript(lib) {
      return new Promise(function(resolve, reject) {
        var s = document.createElement('script');
        s.src = paths[lib];
        s.async = true;
        s.onload = () => resolve(paths[lib]);
        s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
        document.getElementsByTagName("head")[0].appendChild(s);
      });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else if (typeof vegaEmbed === "function") {
      displayChart(vegaEmbed);
    } else {
      loadScript("vega")
        .then(() => loadScript("vega-lite"))
        .then(() => loadScript("vega-embed"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 400, "continuousHeight": 300}}, "data": {"name": "data-7464f7b13068e315102d31f4862b1a3f"}, "mark": "circle", "encoding": {"color": {"type": "nominal", "field": "enemy_race"}, "x": {"type": "temporal", "field": "time_played_at"}, "y": {"type": "quantitative", "field": "mmr", "scale": {"zero": false}}}, "selection": {"selector003": {"type": "interval", "bind": "scales", "encodings": ["x", "y"]}}, "$schema": "https://vega.github.io/schema/vega-lite/v4.8.1.json", "datasets": {"data-7464f7b13068e315102d31f4862b1a3f": [{"time_played_at": "2019-10-06T12:23:56+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3751, "mmr_diff": 25, "enemy_nickame": "MJM", "enemy_mmr": 3726, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2019-10-06T12:36:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3826, "mmr_diff": 78, "enemy_nickame": "vasea", "enemy_mmr": 3748, "expected_winrate": 0.550846817630644}, {"time_played_at": "2019-10-08T19:33:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3893, "mmr_diff": -53, "enemy_nickame": "Wavelength", "enemy_mmr": 3946, "expected_winrate": 0.4653858512231642}, {"time_played_at": "2019-10-10T07:41:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3828, "mmr_diff": 26, "enemy_nickame": "PereiRa", "enemy_mmr": 3802, "expected_winrate": 0.5170011742274881}, {"time_played_at": "2019-10-10T07:55:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3760, "mmr_diff": -56, "enemy_nickame": "&lt;PROOO&gt;<sp/>Jesperpro", "enemy_mmr": 3816, "expected_winrate": 0.46343336634463533}, {"time_played_at": "2019-10-10T20:42:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3827, "mmr_diff": 126, "enemy_nickame": "Pippuri", "enemy_mmr": 3701, "expected_winrate": 0.5816835383970852}, {"time_played_at": "2019-10-14T19:15:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3878, "mmr_diff": 17, "enemy_nickame": "Supermaru", "enemy_mmr": 3861, "expected_winrate": 0.5111186061324027}, {"time_played_at": "2019-10-21T11:14:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3819, "mmr_diff": -88, "enemy_nickame": "&lt;IDLK&gt;<sp/>jasben", "enemy_mmr": 3907, "expected_winrate": 0.44268836623770724}, {"time_played_at": "2019-10-22T11:34:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3881, "mmr_diff": -185, "enemy_nickame": "&lt;\u041d\u0422\u0422&gt;<sp/>SPQR", "enemy_mmr": 4066, "expected_winrate": 0.3812924158311464}, {"time_played_at": "2019-10-22T11:42:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3840, "mmr_diff": 83, "enemy_nickame": "NiGHTKiNG", "enemy_mmr": 3757, "expected_winrate": 0.5540815127263503}, {"time_played_at": "2019-10-22T12:04:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3885, "mmr_diff": -465, "enemy_nickame": "&lt;\u041c\u041486&gt;<sp/>Moldovanin", "enemy_mmr": 4350, "expected_winrate": 0.22851649491264128}, {"time_played_at": "2019-10-22T12:19:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3862, "mmr_diff": -102, "enemy_nickame": "Zergorix", "enemy_mmr": 3964, "expected_winrate": 0.433670620409041}, {"time_played_at": "2019-10-29T09:32:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3821, "mmr_diff": -73, "enemy_nickame": "Tomaso", "enemy_mmr": 3894, "expected_winrate": 0.4523921838509467}, {"time_played_at": "2019-10-29T11:14:53+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3871, "mmr_diff": 890, "enemy_nickame": "YellowCoke", "enemy_mmr": 2981, "expected_winrate": 0.9112303439884303}, {"time_played_at": "2019-10-29T11:20:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3915, "mmr_diff": -17, "enemy_nickame": "abelian", "enemy_mmr": 3932, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2019-10-29T11:28:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3873, "mmr_diff": -79, "enemy_nickame": "abelian", "enemy_mmr": 3952, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2019-10-29T11:42:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3836, "mmr_diff": -119, "enemy_nickame": "llllllllllll", "enemy_mmr": 3955, "expected_winrate": 0.4227798108220997}, {"time_played_at": "2019-10-29T18:17:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3802, "mmr_diff": -110, "enemy_nickame": "beh", "enemy_mmr": 3912, "expected_winrate": 0.4285368825916186}, {"time_played_at": "2019-10-29T18:18:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3767, "mmr_diff": 27, "enemy_nickame": "Hannibal", "enemy_mmr": 3740, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2019-10-29T18:34:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3728, "mmr_diff": -16, "enemy_nickame": "&lt;Dobro&gt;<sp/>\u043f\u0438\u0440\u0430\u0436\u043e\u043a", "enemy_mmr": 3744, "expected_winrate": 0.4895352325390119}, {"time_played_at": "2019-10-30T07:06:31+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3881, "mmr_diff": 389, "enemy_nickame": "Paulie", "enemy_mmr": 3492, "expected_winrate": 0.7345530624972029}, {"time_played_at": "2019-10-31T18:12:23+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3881, "mmr_diff": -761, "enemy_nickame": "Tyson", "enemy_mmr": 4642, "expected_winrate": 0.12012861418038036}, {"time_played_at": "2019-10-31T18:55:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3766, "mmr_diff": 10, "enemy_nickame": "Granaatappel", "enemy_mmr": 3756, "expected_winrate": 0.506541061734927}, {"time_played_at": "2019-10-31T19:07:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3730, "mmr_diff": 66, "enemy_nickame": "&lt;IndyK&gt;<sp/>Sven", "enemy_mmr": 3664, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2019-11-01T09:05:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3691, "mmr_diff": -78, "enemy_nickame": "&lt;NerCC&gt;<sp/>speck", "enemy_mmr": 3769, "expected_winrate": 0.4491531823693559}, {"time_played_at": "2019-11-01T09:15:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3729, "mmr_diff": -142, "enemy_nickame": "Ghalib", "enemy_mmr": 3871, "expected_winrate": 0.40816569372083916}, {"time_played_at": "2019-11-01T13:42:38+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3696, "mmr_diff": 65, "enemy_nickame": "&lt;PiGPan&gt;<sp/>Garethax", "enemy_mmr": 3631, "expected_winrate": 0.5424171287450194}, {"time_played_at": "2019-11-02T17:45:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3661, "mmr_diff": 30, "enemy_nickame": "KKroer", "enemy_mmr": 3631, "expected_winrate": 0.5196142341997408}, {"time_played_at": "2019-11-02T17:46:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3691, "mmr_diff": 85, "enemy_nickame": "&lt;A\u01c2move&gt;<sp/>AmoveZerg", "enemy_mmr": 3606, "expected_winrate": 0.5553741249668821}, {"time_played_at": "2019-11-02T17:51:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3718, "mmr_diff": 33, "enemy_nickame": "Hazard", "enemy_mmr": 3685, "expected_winrate": 0.5215733330511455}, {"time_played_at": "2019-11-02T17:55:38+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3688, "mmr_diff": 62, "enemy_nickame": "Pleydellia", "enemy_mmr": 3626, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2019-11-02T20:06:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3655, "mmr_diff": 8, "enemy_nickame": "lllllll", "enemy_mmr": 3647, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-11-02T20:15:14+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3684, "mmr_diff": 58, "enemy_nickame": "lllllll", "enemy_mmr": 3626, "expected_winrate": 0.5378676713661427}, {"time_played_at": "2019-11-02T20:29:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3711, "mmr_diff": -25, "enemy_nickame": "&lt;PiGPan&gt;<sp/>Noose", "enemy_mmr": 3736, "expected_winrate": 0.48365224166479165}, {"time_played_at": "2019-11-03T11:18:56+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3740, "mmr_diff": -44, "enemy_nickame": "&lt;DaGOAT&gt;<sp/>Sinus", "enemy_mmr": 3784, "expected_winrate": 0.4712494361077314}, {"time_played_at": "2019-11-03T11:35:01+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3769, "mmr_diff": -87, "enemy_nickame": "&lt;LESeV&gt;<sp/>iceclaw", "enemy_mmr": 3856, "expected_winrate": 0.44333401172275544}, {"time_played_at": "2019-11-04T20:40:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3799, "mmr_diff": -67, "enemy_nickame": "&lt;FreeHK&gt;<sp/>jellun", "enemy_mmr": 3866, "expected_winrate": 0.4562842910331827}, {"time_played_at": "2019-11-04T20:46:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3825, "mmr_diff": -22, "enemy_nickame": "North", "enemy_mmr": 3847, "expected_winrate": 0.48561281583400134}, {"time_played_at": "2019-11-04T20:53:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3800, "mmr_diff": -83, "enemy_nickame": "&lt;MiClan&gt;<sp/>MiSHANYA", "enemy_mmr": 3883, "expected_winrate": 0.44591848727364963}, {"time_played_at": "2019-11-04T20:57:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3777, "mmr_diff": 16, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 3761, "expected_winrate": 0.5104647674609881}, {"time_played_at": "2019-11-05T18:35:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3752, "mmr_diff": 66, "enemy_nickame": "Fleetz", "enemy_mmr": 3686, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2019-11-05T18:43:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3774, "mmr_diff": -53, "enemy_nickame": "&lt;XsR&gt;<sp/>Ajotaele", "enemy_mmr": 3827, "expected_winrate": 0.4653858512231642}, {"time_played_at": "2019-11-05T18:48:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3752, "mmr_diff": -19, "enemy_nickame": "&lt;dumbfu&gt;<sp/>cheesus", "enemy_mmr": 3771, "expected_winrate": 0.4875738328873896}, {"time_played_at": "2019-11-05T18:58:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3776, "mmr_diff": 24, "enemy_nickame": "smthFISHYcmg", "enemy_mmr": 3752, "expected_winrate": 0.5156942865406842}, {"time_played_at": "2019-11-06T21:43:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3798, "mmr_diff": -5, "enemy_nickame": "ProtoZZavr", "enemy_mmr": 3803, "expected_winrate": 0.4967293291893}, {"time_played_at": "2019-11-08T09:33:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3821, "mmr_diff": -101, "enemy_nickame": "Zend", "enemy_mmr": 3922, "expected_winrate": 0.4343133632425947}, {"time_played_at": "2019-11-12T09:42:59+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3847, "mmr_diff": -41, "enemy_nickame": "&lt;UATeam&gt;<sp/>click", "enemy_mmr": 3888, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2019-11-12T09:49:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3870, "mmr_diff": -30, "enemy_nickame": "midhigh", "enemy_mmr": 3900, "expected_winrate": 0.4803857658002591}, {"time_played_at": "2019-11-12T10:06:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3890, "mmr_diff": -72, "enemy_nickame": "Paulie", "enemy_mmr": 3962, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2019-11-17T09:58:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3913, "mmr_diff": -79, "enemy_nickame": "TrashCanMan", "enemy_mmr": 3992, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2019-11-17T10:20:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3894, "mmr_diff": 96, "enemy_nickame": "MightyMurloc", "enemy_mmr": 3798, "expected_winrate": 0.5624696497063278}, {"time_played_at": "2019-11-18T15:44:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3913, "mmr_diff": 116, "enemy_nickame": "&lt;lLiTl&gt;<sp/>Eniman", "enemy_mmr": 3797, "expected_winrate": 0.5753034142357183}, {"time_played_at": "2019-11-18T15:58:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3893, "mmr_diff": 103, "enemy_nickame": "\u0432\u043b\u0430\u0434", "enemy_mmr": 3790, "expected_winrate": 0.5669718993599533}, {"time_played_at": "2019-11-18T16:08:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3911, "mmr_diff": -55, "enemy_nickame": "trouth", "enemy_mmr": 3966, "expected_winrate": 0.4640840730548977}, {"time_played_at": "2019-11-18T16:17:57+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3891, "mmr_diff": 10, "enemy_nickame": "OlympusRoyal", "enemy_mmr": 3881, "expected_winrate": 0.506541061734927}, {"time_played_at": "2019-11-18T17:08:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3912, "mmr_diff": 89, "enemy_nickame": "InsighT", "enemy_mmr": 3823, "expected_winrate": 0.557957085634325}, {"time_played_at": "2019-11-18T17:26:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3888, "mmr_diff": -16, "enemy_nickame": "trouth", "enemy_mmr": 3904, "expected_winrate": 0.4895352325390119}, {"time_played_at": "2019-11-18T17:32:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3910, "mmr_diff": -10, "enemy_nickame": "Raver", "enemy_mmr": 3920, "expected_winrate": 0.49345893826507303}, {"time_played_at": "2019-11-18T17:48:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3889, "mmr_diff": -18, "enemy_nickame": "&lt;TheDOH&gt;<sp/>secretspace", "enemy_mmr": 3907, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2019-11-18T18:03:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3911, "mmr_diff": -50, "enemy_nickame": "Cosmobrother", "enemy_mmr": 3961, "expected_winrate": 0.4673393974095765}, {"time_played_at": "2019-11-19T07:23:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3934, "mmr_diff": 60, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 3874, "expected_winrate": 0.5391681935344519}, {"time_played_at": "2019-11-19T19:02:22+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3954, "mmr_diff": 384, "enemy_nickame": "&lt;EESC&gt;<sp/>penduloSFX", "enemy_mmr": 3570, "expected_winrate": 0.7319942855046018}, {"time_played_at": "2019-11-19T19:05:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3972, "mmr_diff": -387, "enemy_nickame": "Pudgey", "enemy_mmr": 4359, "expected_winrate": 0.2664685738023793}, {"time_played_at": "2019-11-19T19:10:36+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3947, "mmr_diff": -62, "enemy_nickame": "&lt;TDDA&gt;<sp/>EMM", "enemy_mmr": 4009, "expected_winrate": 0.45953181733049886}, {"time_played_at": "2019-11-19T19:33:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3950, "mmr_diff": 91, "enemy_nickame": "YvanDuR\u00eave", "enemy_mmr": 3859, "expected_winrate": 0.5592474000561543}, {"time_played_at": "2019-11-20T07:59:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3969, "mmr_diff": -19, "enemy_nickame": "BuRneR", "enemy_mmr": 3988, "expected_winrate": 0.4875738328873896}, {"time_played_at": "2019-11-20T08:19:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3948, "mmr_diff": 63, "enemy_nickame": "&lt;CocoCo&gt;<sp/>Goty", "enemy_mmr": 3885, "expected_winrate": 0.5411179718915647}, {"time_played_at": "2019-11-25T17:38:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3925, "mmr_diff": -95, "enemy_nickame": "&lt;kOzY&gt;<sp/>Dave", "enemy_mmr": 4020, "expected_winrate": 0.43817438762285926}, {"time_played_at": "2019-11-25T17:53:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3949, "mmr_diff": 14, "enemy_nickame": "Crombo", "enemy_mmr": 3935, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-11-26T18:58:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3927, "mmr_diff": 19, "enemy_nickame": "\u043f\u0440\u043e\u0440\u0432\u0435\u043c\u0441\u044f", "enemy_mmr": 3908, "expected_winrate": 0.5124261671126104}, {"time_played_at": "2019-11-26T19:04:47+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3905, "mmr_diff": -691, "enemy_nickame": "Doomweed", "enemy_mmr": 4596, "expected_winrate": 0.1408736498380834}, {"time_played_at": "2019-11-26T19:11:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3899, "mmr_diff": -952, "enemy_nickame": "SkyFlare", "enemy_mmr": 4851, "expected_winrate": 0.07649305137834163}, {"time_played_at": "2019-11-26T19:20:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3924, "mmr_diff": -17, "enemy_nickame": "Chief", "enemy_mmr": 3941, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2019-11-26T19:32:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3944, "mmr_diff": 136, "enemy_nickame": "Romio", "enemy_mmr": 3808, "expected_winrate": 0.5880364496644981}, {"time_played_at": "2019-11-28T19:00:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3962, "mmr_diff": 20, "enemy_nickame": "&lt;SILeSp&gt;<sp/>Galactus", "enemy_mmr": 3942, "expected_winrate": 0.5130798849527788}, {"time_played_at": "2019-11-28T19:09:44+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3940, "mmr_diff": 86, "enemy_nickame": "&lt;vGL&gt;<sp/>Celestial", "enemy_mmr": 3854, "expected_winrate": 0.556020151303233}, {"time_played_at": "2019-11-28T19:23:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 3, "enemy_nickame": "Inquisition", "enemy_mmr": 3956, "expected_winrate": 0.5019624204002703}, {"time_played_at": "2019-11-29T18:07:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3981, "mmr_diff": 5, "enemy_nickame": "zzTp", "enemy_mmr": 3976, "expected_winrate": 0.5032706708107001}, {"time_played_at": "2019-11-29T18:14:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3959, "mmr_diff": -39, "enemy_nickame": "zzTp", "enemy_mmr": 3998, "expected_winrate": 0.47451051944488615}, {"time_played_at": "2019-11-29T18:31:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3939, "mmr_diff": -14, "enemy_nickame": "&lt;ERHELM&gt;<sp/>Erik", "enemy_mmr": 3953, "expected_winrate": 0.49084301506895067}, {"time_played_at": "2019-12-02T19:29:02+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3961, "mmr_diff": -107, "enemy_nickame": "&lt;IWtD&gt;<sp/>DiabloFeTo", "enemy_mmr": 4068, "expected_winrate": 0.4304602938093038}, {"time_played_at": "2019-12-02T19:42:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3985, "mmr_diff": 25, "enemy_nickame": "&lt;OnkelS&gt;<sp/>Prolow", "enemy_mmr": 3960, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2019-12-02T20:09:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4006, "mmr_diff": -10, "enemy_nickame": "kalarazar", "enemy_mmr": 4016, "expected_winrate": 0.49345893826507303}, {"time_played_at": "2019-12-03T18:33:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4028, "mmr_diff": -27, "enemy_nickame": "&lt;Furri&gt;<sp/>PrinceOfIEM", "enemy_mmr": 4055, "expected_winrate": 0.48234546801180256}, {"time_played_at": "2019-12-03T18:55:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4007, "mmr_diff": 82, "enemy_nickame": "&lt;IBeA\u015aI&gt;<sp/>Bummsjordy", "enemy_mmr": 3925, "expected_winrate": 0.5534349310880278}, {"time_played_at": "2019-12-03T19:10:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4026, "mmr_diff": -78, "enemy_nickame": "Orian", "enemy_mmr": 4104, "expected_winrate": 0.4491531823693559}, {"time_played_at": "2019-12-05T19:21:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4007, "mmr_diff": 18, "enemy_nickame": "AlexMacedon", "enemy_mmr": 3989, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2019-12-05T19:43:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4028, "mmr_diff": 27, "enemy_nickame": "Niinja", "enemy_mmr": 4001, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2019-12-09T20:18:26+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4049, "mmr_diff": -188, "enemy_nickame": "Delaam", "enemy_mmr": 4237, "expected_winrate": 0.3794423330829675}, {"time_played_at": "2019-12-09T20:28:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4032, "mmr_diff": -129, "enemy_nickame": "PeterLax", "enemy_mmr": 4161, "expected_winrate": 0.4164076397687468}, {"time_played_at": "2019-12-09T20:36:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4015, "mmr_diff": -9, "enemy_nickame": "&lt;OGCO\u0421K&gt;<sp/>ShushYo", "enemy_mmr": 4024, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-12-09T20:39:03+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4036, "mmr_diff": -72, "enemy_nickame": "Heradrass", "enemy_mmr": 4108, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2019-12-10T19:05:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4017, "mmr_diff": -108, "enemy_nickame": "NS\u0192Faxo", "enemy_mmr": 4125, "expected_winrate": 0.42981892053631354}, {"time_played_at": "2019-12-11T20:04:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4042, "mmr_diff": 14, "enemy_nickame": "&lt;PiGPan&gt;<sp/>TNTea", "enemy_mmr": 4028, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-12-11T20:23:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4020, "mmr_diff": 8, "enemy_nickame": "Legionaru", "enemy_mmr": 4012, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-12-12T18:10:58+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4041, "mmr_diff": 49, "enemy_nickame": "Ciprian", "enemy_mmr": 3992, "expected_winrate": 0.5320091949397798}, {"time_played_at": "2019-12-12T18:48:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4061, "mmr_diff": -83, "enemy_nickame": "&lt;Nutri&gt;<sp/>Highscribe", "enemy_mmr": 4144, "expected_winrate": 0.44591848727364963}, {"time_played_at": "2019-12-12T19:02:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4042, "mmr_diff": 13, "enemy_nickame": "contremaitre", "enemy_mmr": 4029, "expected_winrate": 0.5085030455441815}, {"time_played_at": "2019-12-12T19:21:45+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4063, "mmr_diff": 12, "enemy_nickame": "Fraze", "enemy_mmr": 4051, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2019-12-12T19:28:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4041, "mmr_diff": -90, "enemy_nickame": "NazelHut", "enemy_mmr": 4131, "expected_winrate": 0.44139765822811194}, {"time_played_at": "2019-12-12T19:42:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4022, "mmr_diff": -385, "enemy_nickame": "cloud", "enemy_mmr": 4407, "expected_winrate": 0.2674927102443324}, {"time_played_at": "2019-12-12T19:53:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4001, "mmr_diff": -36, "enemy_nickame": "Xaenor", "enemy_mmr": 4037, "expected_winrate": 0.47646823150757606}, {"time_played_at": "2019-12-12T20:52:10+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3980, "mmr_diff": 15, "enemy_nickame": "&lt;snajpu&gt;<sp/>Auddi", "enemy_mmr": 3965, "expected_winrate": 0.5098108929820042}, {"time_played_at": "2019-12-12T21:03:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4001, "mmr_diff": 57, "enemy_nickame": "&lt;snajpu&gt;<sp/>Auddi", "enemy_mmr": 3944, "expected_winrate": 0.5372172158592833}, {"time_played_at": "2019-12-12T21:16:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3978, "mmr_diff": -191, "enemy_nickame": "Vidra", "enemy_mmr": 4169, "expected_winrate": 0.3775957486362336}, {"time_played_at": "2019-12-12T21:29:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 75, "enemy_nickame": "Noobofsc", "enemy_mmr": 3882, "expected_winrate": 0.5489039163154777}, {"time_played_at": "2019-12-14T10:50:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3933, "mmr_diff": -85, "enemy_nickame": "&lt;Div303&gt;<sp/>Dupsko", "enemy_mmr": 4018, "expected_winrate": 0.4446258750331179}, {"time_played_at": "2019-12-18T16:35:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3957, "mmr_diff": -109, "enemy_nickame": "&lt;IndyK&gt;<sp/>HaPe", "enemy_mmr": 4066, "expected_winrate": 0.42917778277580165}, {"time_played_at": "2019-12-18T16:53:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3938, "mmr_diff": 110, "enemy_nickame": "FrozenZerg", "enemy_mmr": 3828, "expected_winrate": 0.5714631174083814}, {"time_played_at": "2019-12-20T18:17:10+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 0, "enemy_nickame": "&lt;\u01aeesXG&gt;<sp/>Rocky", "enemy_mmr": 3957, "expected_winrate": 0.5}, {"time_played_at": "2019-12-20T18:36:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3935, "mmr_diff": -246, "enemy_nickame": "utopike", "enemy_mmr": 4181, "expected_winrate": 0.3444157777997608}, {"time_played_at": "2019-12-20T18:42:21+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3955, "mmr_diff": -205, "enemy_nickame": "Nyx", "enemy_mmr": 4160, "expected_winrate": 0.36902597468573733}, {"time_played_at": "2019-12-20T18:59:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3939, "mmr_diff": 53, "enemy_nickame": "CapSto", "enemy_mmr": 3886, "expected_winrate": 0.5346141487768358}, {"time_played_at": "2019-12-20T19:06:55+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3959, "mmr_diff": -4, "enemy_nickame": "&lt;TAW&gt;<sp/>Pote", "enemy_mmr": 3963, "expected_winrate": 0.49738344991611666}, {"time_played_at": "2019-12-20T19:21:46+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3937, "mmr_diff": 62, "enemy_nickame": "Neydark", "enemy_mmr": 3875, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2019-12-21T13:30:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 1, "enemy_nickame": "Albus", "enemy_mmr": 3956, "expected_winrate": 0.5006541431191143}, {"time_played_at": "2019-12-21T13:41:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3936, "mmr_diff": -40, "enemy_nickame": "tiwai", "enemy_mmr": 3976, "expected_winrate": 0.47385811986038295}, {"time_played_at": "2019-12-21T13:54:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 6, "enemy_nickame": "tiwai", "enemy_mmr": 3953, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-12-21T14:00:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3937, "mmr_diff": 180, "enemy_nickame": "RXX", "enemy_mmr": 3757, "expected_winrate": 0.6156164673184111}, {"time_played_at": "2019-12-21T14:10:12+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3915, "mmr_diff": -92, "enemy_nickame": "xYn", "enemy_mmr": 4007, "expected_winrate": 0.44010774162905025}, {"time_played_at": "2019-12-21T14:27:45+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3896, "mmr_diff": -15, "enemy_nickame": "Stefan", "enemy_mmr": 3911, "expected_winrate": 0.49018910701799573}, {"time_played_at": "2019-12-21T16:46:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3918, "mmr_diff": -49, "enemy_nickame": "Xenocide", "enemy_mmr": 3967, "expected_winrate": 0.4679908050602201}, {"time_played_at": "2019-12-21T16:49:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3941, "mmr_diff": -994, "enemy_nickame": "&lt;\u0413\u043d\u043e\u043c\u0438\u043a&gt;<sp/>IndeX", "enemy_mmr": 4935, "expected_winrate": 0.06908215857285668}, {"time_played_at": "2019-12-22T20:55:54+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3965, "mmr_diff": 67, "enemy_nickame": "Bingo", "enemy_mmr": 3898, "expected_winrate": 0.5437157089668173}, {"time_played_at": "2019-12-22T21:04:09+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3941, "mmr_diff": 61, "enemy_nickame": "Jungla", "enemy_mmr": 3880, "expected_winrate": 0.5398182558231894}, {"time_played_at": "2019-12-22T21:07:48+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3918, "mmr_diff": -9, "enemy_nickame": "DeepMind", "enemy_mmr": 3927, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-12-22T21:11:02+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3897, "mmr_diff": -51, "enemy_nickame": "DeepMind", "enemy_mmr": 3948, "expected_winrate": 0.4666881010864951}, {"time_played_at": "2019-12-22T21:26:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3877, "mmr_diff": 44, "enemy_nickame": "Nyxeu", "enemy_mmr": 3833, "expected_winrate": 0.5287505638922686}, {"time_played_at": "2019-12-23T16:23:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3897, "mmr_diff": 3, "enemy_nickame": "IntrinsiCat", "enemy_mmr": 3894, "expected_winrate": 0.5019624204002703}, {"time_played_at": "2019-12-23T16:30:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3898, "mmr_diff": 116, "enemy_nickame": "\u00e6\u00e6\u00e6", "enemy_mmr": 3782, "expected_winrate": 0.5753034142357183}, {"time_played_at": "2019-12-23T16:51:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3873, "mmr_diff": 87, "enemy_nickame": "Listig", "enemy_mmr": 3786, "expected_winrate": 0.5566659882772446}, {"time_played_at": "2019-12-24T11:03:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3892, "mmr_diff": 47, "enemy_nickame": "&lt;W\u00f8&gt;<sp/>poichiche", "enemy_mmr": 3845, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2019-12-24T11:17:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3869, "mmr_diff": 6, "enemy_nickame": "&lt;isIMBA&gt;<sp/>naincraft", "enemy_mmr": 3863, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-12-24T11:33:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3847, "mmr_diff": -119, "enemy_nickame": "ARCMAN", "enemy_mmr": 3966, "expected_winrate": 0.4227798108220997}, {"time_played_at": "2019-12-24T18:36:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3872, "mmr_diff": 8, "enemy_nickame": "Vakhtang", "enemy_mmr": 3864, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-12-24T18:53:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3893, "mmr_diff": 50, "enemy_nickame": "Vakhtang", "enemy_mmr": 3843, "expected_winrate": 0.5326606025904235}, {"time_played_at": "2019-12-24T19:08:58+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3914, "mmr_diff": 74, "enemy_nickame": "PPO", "enemy_mmr": 3840, "expected_winrate": 0.5482559480584295}, {"time_played_at": "2019-12-27T20:24:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3933, "mmr_diff": -100, "enemy_nickame": "HiveMind", "enemy_mmr": 4033, "expected_winrate": 0.4349563270554942}, {"time_played_at": "2019-12-27T20:40:39+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3914, "mmr_diff": 0, "enemy_nickame": "Racin", "enemy_mmr": 3914, "expected_winrate": 0.5}, {"time_played_at": "2019-12-27T21:24:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3936, "mmr_diff": -41, "enemy_nickame": "&lt;DemuCl&gt;<sp/>Jazzz", "enemy_mmr": 3977, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2019-12-28T20:58:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 22, "enemy_nickame": "rOoSter", "enemy_mmr": 3937, "expected_winrate": 0.5143871841659987}, {"time_played_at": "2019-12-28T21:06:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3980, "mmr_diff": -260, "enemy_nickame": "contremaitre", "enemy_mmr": 4240, "expected_winrate": 0.3361922887074761}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<p>We can now take a look at whether our <code>expected_winrate</code> metric makes sense:</p>
<div id="cell-18" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">altair.Chart(data2019).mark_circle().encode(</span>
<span id="cb9-2">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.X(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_mmr'</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Scale(zero<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)),</span>
<span id="cb9-3">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Y(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'expected_winrate'</span>),</span>
<span id="cb9-4">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'win'</span>,</span>
<span id="cb9-5">).interactive()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">

<div id="altair-viz-5f3ba7db1a8a476d948c2283bbd6979b"></div>
<script type="text/javascript">
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-5f3ba7db1a8a476d948c2283bbd6979b") {
      outputDiv = document.getElementById("altair-viz-5f3ba7db1a8a476d948c2283bbd6979b");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm//vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm//vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm//vega-lite@4.8.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm//vega-embed@6?noext",
    };

    function loadScript(lib) {
      return new Promise(function(resolve, reject) {
        var s = document.createElement('script');
        s.src = paths[lib];
        s.async = true;
        s.onload = () => resolve(paths[lib]);
        s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
        document.getElementsByTagName("head")[0].appendChild(s);
      });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else if (typeof vegaEmbed === "function") {
      displayChart(vegaEmbed);
    } else {
      loadScript("vega")
        .then(() => loadScript("vega-lite"))
        .then(() => loadScript("vega-embed"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 400, "continuousHeight": 300}}, "data": {"name": "data-7464f7b13068e315102d31f4862b1a3f"}, "mark": "circle", "encoding": {"color": {"type": "nominal", "field": "win"}, "x": {"type": "quantitative", "field": "enemy_mmr", "scale": {"zero": false}}, "y": {"type": "quantitative", "field": "expected_winrate"}}, "selection": {"selector004": {"type": "interval", "bind": "scales", "encodings": ["x", "y"]}}, "$schema": "https://vega.github.io/schema/vega-lite/v4.8.1.json", "datasets": {"data-7464f7b13068e315102d31f4862b1a3f": [{"time_played_at": "2019-10-06T12:23:56+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3751, "mmr_diff": 25, "enemy_nickame": "MJM", "enemy_mmr": 3726, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2019-10-06T12:36:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3826, "mmr_diff": 78, "enemy_nickame": "vasea", "enemy_mmr": 3748, "expected_winrate": 0.550846817630644}, {"time_played_at": "2019-10-08T19:33:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3893, "mmr_diff": -53, "enemy_nickame": "Wavelength", "enemy_mmr": 3946, "expected_winrate": 0.4653858512231642}, {"time_played_at": "2019-10-10T07:41:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3828, "mmr_diff": 26, "enemy_nickame": "PereiRa", "enemy_mmr": 3802, "expected_winrate": 0.5170011742274881}, {"time_played_at": "2019-10-10T07:55:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3760, "mmr_diff": -56, "enemy_nickame": "&lt;PROOO&gt;<sp/>Jesperpro", "enemy_mmr": 3816, "expected_winrate": 0.46343336634463533}, {"time_played_at": "2019-10-10T20:42:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3827, "mmr_diff": 126, "enemy_nickame": "Pippuri", "enemy_mmr": 3701, "expected_winrate": 0.5816835383970852}, {"time_played_at": "2019-10-14T19:15:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3878, "mmr_diff": 17, "enemy_nickame": "Supermaru", "enemy_mmr": 3861, "expected_winrate": 0.5111186061324027}, {"time_played_at": "2019-10-21T11:14:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3819, "mmr_diff": -88, "enemy_nickame": "&lt;IDLK&gt;<sp/>jasben", "enemy_mmr": 3907, "expected_winrate": 0.44268836623770724}, {"time_played_at": "2019-10-22T11:34:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3881, "mmr_diff": -185, "enemy_nickame": "&lt;\u041d\u0422\u0422&gt;<sp/>SPQR", "enemy_mmr": 4066, "expected_winrate": 0.3812924158311464}, {"time_played_at": "2019-10-22T11:42:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3840, "mmr_diff": 83, "enemy_nickame": "NiGHTKiNG", "enemy_mmr": 3757, "expected_winrate": 0.5540815127263503}, {"time_played_at": "2019-10-22T12:04:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3885, "mmr_diff": -465, "enemy_nickame": "&lt;\u041c\u041486&gt;<sp/>Moldovanin", "enemy_mmr": 4350, "expected_winrate": 0.22851649491264128}, {"time_played_at": "2019-10-22T12:19:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3862, "mmr_diff": -102, "enemy_nickame": "Zergorix", "enemy_mmr": 3964, "expected_winrate": 0.433670620409041}, {"time_played_at": "2019-10-29T09:32:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3821, "mmr_diff": -73, "enemy_nickame": "Tomaso", "enemy_mmr": 3894, "expected_winrate": 0.4523921838509467}, {"time_played_at": "2019-10-29T11:14:53+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3871, "mmr_diff": 890, "enemy_nickame": "YellowCoke", "enemy_mmr": 2981, "expected_winrate": 0.9112303439884303}, {"time_played_at": "2019-10-29T11:20:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3915, "mmr_diff": -17, "enemy_nickame": "abelian", "enemy_mmr": 3932, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2019-10-29T11:28:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3873, "mmr_diff": -79, "enemy_nickame": "abelian", "enemy_mmr": 3952, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2019-10-29T11:42:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3836, "mmr_diff": -119, "enemy_nickame": "llllllllllll", "enemy_mmr": 3955, "expected_winrate": 0.4227798108220997}, {"time_played_at": "2019-10-29T18:17:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3802, "mmr_diff": -110, "enemy_nickame": "beh", "enemy_mmr": 3912, "expected_winrate": 0.4285368825916186}, {"time_played_at": "2019-10-29T18:18:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3767, "mmr_diff": 27, "enemy_nickame": "Hannibal", "enemy_mmr": 3740, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2019-10-29T18:34:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3728, "mmr_diff": -16, "enemy_nickame": "&lt;Dobro&gt;<sp/>\u043f\u0438\u0440\u0430\u0436\u043e\u043a", "enemy_mmr": 3744, "expected_winrate": 0.4895352325390119}, {"time_played_at": "2019-10-30T07:06:31+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3881, "mmr_diff": 389, "enemy_nickame": "Paulie", "enemy_mmr": 3492, "expected_winrate": 0.7345530624972029}, {"time_played_at": "2019-10-31T18:12:23+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3881, "mmr_diff": -761, "enemy_nickame": "Tyson", "enemy_mmr": 4642, "expected_winrate": 0.12012861418038036}, {"time_played_at": "2019-10-31T18:55:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3766, "mmr_diff": 10, "enemy_nickame": "Granaatappel", "enemy_mmr": 3756, "expected_winrate": 0.506541061734927}, {"time_played_at": "2019-10-31T19:07:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3730, "mmr_diff": 66, "enemy_nickame": "&lt;IndyK&gt;<sp/>Sven", "enemy_mmr": 3664, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2019-11-01T09:05:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3691, "mmr_diff": -78, "enemy_nickame": "&lt;NerCC&gt;<sp/>speck", "enemy_mmr": 3769, "expected_winrate": 0.4491531823693559}, {"time_played_at": "2019-11-01T09:15:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3729, "mmr_diff": -142, "enemy_nickame": "Ghalib", "enemy_mmr": 3871, "expected_winrate": 0.40816569372083916}, {"time_played_at": "2019-11-01T13:42:38+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3696, "mmr_diff": 65, "enemy_nickame": "&lt;PiGPan&gt;<sp/>Garethax", "enemy_mmr": 3631, "expected_winrate": 0.5424171287450194}, {"time_played_at": "2019-11-02T17:45:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3661, "mmr_diff": 30, "enemy_nickame": "KKroer", "enemy_mmr": 3631, "expected_winrate": 0.5196142341997408}, {"time_played_at": "2019-11-02T17:46:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3691, "mmr_diff": 85, "enemy_nickame": "&lt;A\u01c2move&gt;<sp/>AmoveZerg", "enemy_mmr": 3606, "expected_winrate": 0.5553741249668821}, {"time_played_at": "2019-11-02T17:51:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3718, "mmr_diff": 33, "enemy_nickame": "Hazard", "enemy_mmr": 3685, "expected_winrate": 0.5215733330511455}, {"time_played_at": "2019-11-02T17:55:38+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3688, "mmr_diff": 62, "enemy_nickame": "Pleydellia", "enemy_mmr": 3626, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2019-11-02T20:06:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3655, "mmr_diff": 8, "enemy_nickame": "lllllll", "enemy_mmr": 3647, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-11-02T20:15:14+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3684, "mmr_diff": 58, "enemy_nickame": "lllllll", "enemy_mmr": 3626, "expected_winrate": 0.5378676713661427}, {"time_played_at": "2019-11-02T20:29:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3711, "mmr_diff": -25, "enemy_nickame": "&lt;PiGPan&gt;<sp/>Noose", "enemy_mmr": 3736, "expected_winrate": 0.48365224166479165}, {"time_played_at": "2019-11-03T11:18:56+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3740, "mmr_diff": -44, "enemy_nickame": "&lt;DaGOAT&gt;<sp/>Sinus", "enemy_mmr": 3784, "expected_winrate": 0.4712494361077314}, {"time_played_at": "2019-11-03T11:35:01+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3769, "mmr_diff": -87, "enemy_nickame": "&lt;LESeV&gt;<sp/>iceclaw", "enemy_mmr": 3856, "expected_winrate": 0.44333401172275544}, {"time_played_at": "2019-11-04T20:40:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3799, "mmr_diff": -67, "enemy_nickame": "&lt;FreeHK&gt;<sp/>jellun", "enemy_mmr": 3866, "expected_winrate": 0.4562842910331827}, {"time_played_at": "2019-11-04T20:46:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3825, "mmr_diff": -22, "enemy_nickame": "North", "enemy_mmr": 3847, "expected_winrate": 0.48561281583400134}, {"time_played_at": "2019-11-04T20:53:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3800, "mmr_diff": -83, "enemy_nickame": "&lt;MiClan&gt;<sp/>MiSHANYA", "enemy_mmr": 3883, "expected_winrate": 0.44591848727364963}, {"time_played_at": "2019-11-04T20:57:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3777, "mmr_diff": 16, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 3761, "expected_winrate": 0.5104647674609881}, {"time_played_at": "2019-11-05T18:35:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3752, "mmr_diff": 66, "enemy_nickame": "Fleetz", "enemy_mmr": 3686, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2019-11-05T18:43:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3774, "mmr_diff": -53, "enemy_nickame": "&lt;XsR&gt;<sp/>Ajotaele", "enemy_mmr": 3827, "expected_winrate": 0.4653858512231642}, {"time_played_at": "2019-11-05T18:48:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3752, "mmr_diff": -19, "enemy_nickame": "&lt;dumbfu&gt;<sp/>cheesus", "enemy_mmr": 3771, "expected_winrate": 0.4875738328873896}, {"time_played_at": "2019-11-05T18:58:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3776, "mmr_diff": 24, "enemy_nickame": "smthFISHYcmg", "enemy_mmr": 3752, "expected_winrate": 0.5156942865406842}, {"time_played_at": "2019-11-06T21:43:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3798, "mmr_diff": -5, "enemy_nickame": "ProtoZZavr", "enemy_mmr": 3803, "expected_winrate": 0.4967293291893}, {"time_played_at": "2019-11-08T09:33:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3821, "mmr_diff": -101, "enemy_nickame": "Zend", "enemy_mmr": 3922, "expected_winrate": 0.4343133632425947}, {"time_played_at": "2019-11-12T09:42:59+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3847, "mmr_diff": -41, "enemy_nickame": "&lt;UATeam&gt;<sp/>click", "enemy_mmr": 3888, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2019-11-12T09:49:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3870, "mmr_diff": -30, "enemy_nickame": "midhigh", "enemy_mmr": 3900, "expected_winrate": 0.4803857658002591}, {"time_played_at": "2019-11-12T10:06:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3890, "mmr_diff": -72, "enemy_nickame": "Paulie", "enemy_mmr": 3962, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2019-11-17T09:58:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3913, "mmr_diff": -79, "enemy_nickame": "TrashCanMan", "enemy_mmr": 3992, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2019-11-17T10:20:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3894, "mmr_diff": 96, "enemy_nickame": "MightyMurloc", "enemy_mmr": 3798, "expected_winrate": 0.5624696497063278}, {"time_played_at": "2019-11-18T15:44:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3913, "mmr_diff": 116, "enemy_nickame": "&lt;lLiTl&gt;<sp/>Eniman", "enemy_mmr": 3797, "expected_winrate": 0.5753034142357183}, {"time_played_at": "2019-11-18T15:58:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3893, "mmr_diff": 103, "enemy_nickame": "\u0432\u043b\u0430\u0434", "enemy_mmr": 3790, "expected_winrate": 0.5669718993599533}, {"time_played_at": "2019-11-18T16:08:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3911, "mmr_diff": -55, "enemy_nickame": "trouth", "enemy_mmr": 3966, "expected_winrate": 0.4640840730548977}, {"time_played_at": "2019-11-18T16:17:57+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3891, "mmr_diff": 10, "enemy_nickame": "OlympusRoyal", "enemy_mmr": 3881, "expected_winrate": 0.506541061734927}, {"time_played_at": "2019-11-18T17:08:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3912, "mmr_diff": 89, "enemy_nickame": "InsighT", "enemy_mmr": 3823, "expected_winrate": 0.557957085634325}, {"time_played_at": "2019-11-18T17:26:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3888, "mmr_diff": -16, "enemy_nickame": "trouth", "enemy_mmr": 3904, "expected_winrate": 0.4895352325390119}, {"time_played_at": "2019-11-18T17:32:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3910, "mmr_diff": -10, "enemy_nickame": "Raver", "enemy_mmr": 3920, "expected_winrate": 0.49345893826507303}, {"time_played_at": "2019-11-18T17:48:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3889, "mmr_diff": -18, "enemy_nickame": "&lt;TheDOH&gt;<sp/>secretspace", "enemy_mmr": 3907, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2019-11-18T18:03:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3911, "mmr_diff": -50, "enemy_nickame": "Cosmobrother", "enemy_mmr": 3961, "expected_winrate": 0.4673393974095765}, {"time_played_at": "2019-11-19T07:23:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3934, "mmr_diff": 60, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 3874, "expected_winrate": 0.5391681935344519}, {"time_played_at": "2019-11-19T19:02:22+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3954, "mmr_diff": 384, "enemy_nickame": "&lt;EESC&gt;<sp/>penduloSFX", "enemy_mmr": 3570, "expected_winrate": 0.7319942855046018}, {"time_played_at": "2019-11-19T19:05:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3972, "mmr_diff": -387, "enemy_nickame": "Pudgey", "enemy_mmr": 4359, "expected_winrate": 0.2664685738023793}, {"time_played_at": "2019-11-19T19:10:36+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3947, "mmr_diff": -62, "enemy_nickame": "&lt;TDDA&gt;<sp/>EMM", "enemy_mmr": 4009, "expected_winrate": 0.45953181733049886}, {"time_played_at": "2019-11-19T19:33:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3950, "mmr_diff": 91, "enemy_nickame": "YvanDuR\u00eave", "enemy_mmr": 3859, "expected_winrate": 0.5592474000561543}, {"time_played_at": "2019-11-20T07:59:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3969, "mmr_diff": -19, "enemy_nickame": "BuRneR", "enemy_mmr": 3988, "expected_winrate": 0.4875738328873896}, {"time_played_at": "2019-11-20T08:19:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3948, "mmr_diff": 63, "enemy_nickame": "&lt;CocoCo&gt;<sp/>Goty", "enemy_mmr": 3885, "expected_winrate": 0.5411179718915647}, {"time_played_at": "2019-11-25T17:38:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3925, "mmr_diff": -95, "enemy_nickame": "&lt;kOzY&gt;<sp/>Dave", "enemy_mmr": 4020, "expected_winrate": 0.43817438762285926}, {"time_played_at": "2019-11-25T17:53:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3949, "mmr_diff": 14, "enemy_nickame": "Crombo", "enemy_mmr": 3935, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-11-26T18:58:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3927, "mmr_diff": 19, "enemy_nickame": "\u043f\u0440\u043e\u0440\u0432\u0435\u043c\u0441\u044f", "enemy_mmr": 3908, "expected_winrate": 0.5124261671126104}, {"time_played_at": "2019-11-26T19:04:47+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3905, "mmr_diff": -691, "enemy_nickame": "Doomweed", "enemy_mmr": 4596, "expected_winrate": 0.1408736498380834}, {"time_played_at": "2019-11-26T19:11:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3899, "mmr_diff": -952, "enemy_nickame": "SkyFlare", "enemy_mmr": 4851, "expected_winrate": 0.07649305137834163}, {"time_played_at": "2019-11-26T19:20:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3924, "mmr_diff": -17, "enemy_nickame": "Chief", "enemy_mmr": 3941, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2019-11-26T19:32:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3944, "mmr_diff": 136, "enemy_nickame": "Romio", "enemy_mmr": 3808, "expected_winrate": 0.5880364496644981}, {"time_played_at": "2019-11-28T19:00:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3962, "mmr_diff": 20, "enemy_nickame": "&lt;SILeSp&gt;<sp/>Galactus", "enemy_mmr": 3942, "expected_winrate": 0.5130798849527788}, {"time_played_at": "2019-11-28T19:09:44+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3940, "mmr_diff": 86, "enemy_nickame": "&lt;vGL&gt;<sp/>Celestial", "enemy_mmr": 3854, "expected_winrate": 0.556020151303233}, {"time_played_at": "2019-11-28T19:23:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 3, "enemy_nickame": "Inquisition", "enemy_mmr": 3956, "expected_winrate": 0.5019624204002703}, {"time_played_at": "2019-11-29T18:07:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3981, "mmr_diff": 5, "enemy_nickame": "zzTp", "enemy_mmr": 3976, "expected_winrate": 0.5032706708107001}, {"time_played_at": "2019-11-29T18:14:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3959, "mmr_diff": -39, "enemy_nickame": "zzTp", "enemy_mmr": 3998, "expected_winrate": 0.47451051944488615}, {"time_played_at": "2019-11-29T18:31:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3939, "mmr_diff": -14, "enemy_nickame": "&lt;ERHELM&gt;<sp/>Erik", "enemy_mmr": 3953, "expected_winrate": 0.49084301506895067}, {"time_played_at": "2019-12-02T19:29:02+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3961, "mmr_diff": -107, "enemy_nickame": "&lt;IWtD&gt;<sp/>DiabloFeTo", "enemy_mmr": 4068, "expected_winrate": 0.4304602938093038}, {"time_played_at": "2019-12-02T19:42:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3985, "mmr_diff": 25, "enemy_nickame": "&lt;OnkelS&gt;<sp/>Prolow", "enemy_mmr": 3960, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2019-12-02T20:09:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4006, "mmr_diff": -10, "enemy_nickame": "kalarazar", "enemy_mmr": 4016, "expected_winrate": 0.49345893826507303}, {"time_played_at": "2019-12-03T18:33:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4028, "mmr_diff": -27, "enemy_nickame": "&lt;Furri&gt;<sp/>PrinceOfIEM", "enemy_mmr": 4055, "expected_winrate": 0.48234546801180256}, {"time_played_at": "2019-12-03T18:55:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4007, "mmr_diff": 82, "enemy_nickame": "&lt;IBeA\u015aI&gt;<sp/>Bummsjordy", "enemy_mmr": 3925, "expected_winrate": 0.5534349310880278}, {"time_played_at": "2019-12-03T19:10:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4026, "mmr_diff": -78, "enemy_nickame": "Orian", "enemy_mmr": 4104, "expected_winrate": 0.4491531823693559}, {"time_played_at": "2019-12-05T19:21:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4007, "mmr_diff": 18, "enemy_nickame": "AlexMacedon", "enemy_mmr": 3989, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2019-12-05T19:43:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4028, "mmr_diff": 27, "enemy_nickame": "Niinja", "enemy_mmr": 4001, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2019-12-09T20:18:26+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4049, "mmr_diff": -188, "enemy_nickame": "Delaam", "enemy_mmr": 4237, "expected_winrate": 0.3794423330829675}, {"time_played_at": "2019-12-09T20:28:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4032, "mmr_diff": -129, "enemy_nickame": "PeterLax", "enemy_mmr": 4161, "expected_winrate": 0.4164076397687468}, {"time_played_at": "2019-12-09T20:36:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4015, "mmr_diff": -9, "enemy_nickame": "&lt;OGCO\u0421K&gt;<sp/>ShushYo", "enemy_mmr": 4024, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-12-09T20:39:03+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4036, "mmr_diff": -72, "enemy_nickame": "Heradrass", "enemy_mmr": 4108, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2019-12-10T19:05:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4017, "mmr_diff": -108, "enemy_nickame": "NS\u0192Faxo", "enemy_mmr": 4125, "expected_winrate": 0.42981892053631354}, {"time_played_at": "2019-12-11T20:04:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4042, "mmr_diff": 14, "enemy_nickame": "&lt;PiGPan&gt;<sp/>TNTea", "enemy_mmr": 4028, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-12-11T20:23:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4020, "mmr_diff": 8, "enemy_nickame": "Legionaru", "enemy_mmr": 4012, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-12-12T18:10:58+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4041, "mmr_diff": 49, "enemy_nickame": "Ciprian", "enemy_mmr": 3992, "expected_winrate": 0.5320091949397798}, {"time_played_at": "2019-12-12T18:48:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4061, "mmr_diff": -83, "enemy_nickame": "&lt;Nutri&gt;<sp/>Highscribe", "enemy_mmr": 4144, "expected_winrate": 0.44591848727364963}, {"time_played_at": "2019-12-12T19:02:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4042, "mmr_diff": 13, "enemy_nickame": "contremaitre", "enemy_mmr": 4029, "expected_winrate": 0.5085030455441815}, {"time_played_at": "2019-12-12T19:21:45+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4063, "mmr_diff": 12, "enemy_nickame": "Fraze", "enemy_mmr": 4051, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2019-12-12T19:28:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4041, "mmr_diff": -90, "enemy_nickame": "NazelHut", "enemy_mmr": 4131, "expected_winrate": 0.44139765822811194}, {"time_played_at": "2019-12-12T19:42:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4022, "mmr_diff": -385, "enemy_nickame": "cloud", "enemy_mmr": 4407, "expected_winrate": 0.2674927102443324}, {"time_played_at": "2019-12-12T19:53:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4001, "mmr_diff": -36, "enemy_nickame": "Xaenor", "enemy_mmr": 4037, "expected_winrate": 0.47646823150757606}, {"time_played_at": "2019-12-12T20:52:10+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3980, "mmr_diff": 15, "enemy_nickame": "&lt;snajpu&gt;<sp/>Auddi", "enemy_mmr": 3965, "expected_winrate": 0.5098108929820042}, {"time_played_at": "2019-12-12T21:03:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4001, "mmr_diff": 57, "enemy_nickame": "&lt;snajpu&gt;<sp/>Auddi", "enemy_mmr": 3944, "expected_winrate": 0.5372172158592833}, {"time_played_at": "2019-12-12T21:16:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3978, "mmr_diff": -191, "enemy_nickame": "Vidra", "enemy_mmr": 4169, "expected_winrate": 0.3775957486362336}, {"time_played_at": "2019-12-12T21:29:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 75, "enemy_nickame": "Noobofsc", "enemy_mmr": 3882, "expected_winrate": 0.5489039163154777}, {"time_played_at": "2019-12-14T10:50:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3933, "mmr_diff": -85, "enemy_nickame": "&lt;Div303&gt;<sp/>Dupsko", "enemy_mmr": 4018, "expected_winrate": 0.4446258750331179}, {"time_played_at": "2019-12-18T16:35:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3957, "mmr_diff": -109, "enemy_nickame": "&lt;IndyK&gt;<sp/>HaPe", "enemy_mmr": 4066, "expected_winrate": 0.42917778277580165}, {"time_played_at": "2019-12-18T16:53:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3938, "mmr_diff": 110, "enemy_nickame": "FrozenZerg", "enemy_mmr": 3828, "expected_winrate": 0.5714631174083814}, {"time_played_at": "2019-12-20T18:17:10+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 0, "enemy_nickame": "&lt;\u01aeesXG&gt;<sp/>Rocky", "enemy_mmr": 3957, "expected_winrate": 0.5}, {"time_played_at": "2019-12-20T18:36:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3935, "mmr_diff": -246, "enemy_nickame": "utopike", "enemy_mmr": 4181, "expected_winrate": 0.3444157777997608}, {"time_played_at": "2019-12-20T18:42:21+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3955, "mmr_diff": -205, "enemy_nickame": "Nyx", "enemy_mmr": 4160, "expected_winrate": 0.36902597468573733}, {"time_played_at": "2019-12-20T18:59:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3939, "mmr_diff": 53, "enemy_nickame": "CapSto", "enemy_mmr": 3886, "expected_winrate": 0.5346141487768358}, {"time_played_at": "2019-12-20T19:06:55+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3959, "mmr_diff": -4, "enemy_nickame": "&lt;TAW&gt;<sp/>Pote", "enemy_mmr": 3963, "expected_winrate": 0.49738344991611666}, {"time_played_at": "2019-12-20T19:21:46+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3937, "mmr_diff": 62, "enemy_nickame": "Neydark", "enemy_mmr": 3875, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2019-12-21T13:30:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 1, "enemy_nickame": "Albus", "enemy_mmr": 3956, "expected_winrate": 0.5006541431191143}, {"time_played_at": "2019-12-21T13:41:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3936, "mmr_diff": -40, "enemy_nickame": "tiwai", "enemy_mmr": 3976, "expected_winrate": 0.47385811986038295}, {"time_played_at": "2019-12-21T13:54:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 6, "enemy_nickame": "tiwai", "enemy_mmr": 3953, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-12-21T14:00:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3937, "mmr_diff": 180, "enemy_nickame": "RXX", "enemy_mmr": 3757, "expected_winrate": 0.6156164673184111}, {"time_played_at": "2019-12-21T14:10:12+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3915, "mmr_diff": -92, "enemy_nickame": "xYn", "enemy_mmr": 4007, "expected_winrate": 0.44010774162905025}, {"time_played_at": "2019-12-21T14:27:45+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3896, "mmr_diff": -15, "enemy_nickame": "Stefan", "enemy_mmr": 3911, "expected_winrate": 0.49018910701799573}, {"time_played_at": "2019-12-21T16:46:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3918, "mmr_diff": -49, "enemy_nickame": "Xenocide", "enemy_mmr": 3967, "expected_winrate": 0.4679908050602201}, {"time_played_at": "2019-12-21T16:49:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3941, "mmr_diff": -994, "enemy_nickame": "&lt;\u0413\u043d\u043e\u043c\u0438\u043a&gt;<sp/>IndeX", "enemy_mmr": 4935, "expected_winrate": 0.06908215857285668}, {"time_played_at": "2019-12-22T20:55:54+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3965, "mmr_diff": 67, "enemy_nickame": "Bingo", "enemy_mmr": 3898, "expected_winrate": 0.5437157089668173}, {"time_played_at": "2019-12-22T21:04:09+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3941, "mmr_diff": 61, "enemy_nickame": "Jungla", "enemy_mmr": 3880, "expected_winrate": 0.5398182558231894}, {"time_played_at": "2019-12-22T21:07:48+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3918, "mmr_diff": -9, "enemy_nickame": "DeepMind", "enemy_mmr": 3927, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-12-22T21:11:02+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3897, "mmr_diff": -51, "enemy_nickame": "DeepMind", "enemy_mmr": 3948, "expected_winrate": 0.4666881010864951}, {"time_played_at": "2019-12-22T21:26:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3877, "mmr_diff": 44, "enemy_nickame": "Nyxeu", "enemy_mmr": 3833, "expected_winrate": 0.5287505638922686}, {"time_played_at": "2019-12-23T16:23:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3897, "mmr_diff": 3, "enemy_nickame": "IntrinsiCat", "enemy_mmr": 3894, "expected_winrate": 0.5019624204002703}, {"time_played_at": "2019-12-23T16:30:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3898, "mmr_diff": 116, "enemy_nickame": "\u00e6\u00e6\u00e6", "enemy_mmr": 3782, "expected_winrate": 0.5753034142357183}, {"time_played_at": "2019-12-23T16:51:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3873, "mmr_diff": 87, "enemy_nickame": "Listig", "enemy_mmr": 3786, "expected_winrate": 0.5566659882772446}, {"time_played_at": "2019-12-24T11:03:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3892, "mmr_diff": 47, "enemy_nickame": "&lt;W\u00f8&gt;<sp/>poichiche", "enemy_mmr": 3845, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2019-12-24T11:17:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3869, "mmr_diff": 6, "enemy_nickame": "&lt;isIMBA&gt;<sp/>naincraft", "enemy_mmr": 3863, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-12-24T11:33:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3847, "mmr_diff": -119, "enemy_nickame": "ARCMAN", "enemy_mmr": 3966, "expected_winrate": 0.4227798108220997}, {"time_played_at": "2019-12-24T18:36:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3872, "mmr_diff": 8, "enemy_nickame": "Vakhtang", "enemy_mmr": 3864, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-12-24T18:53:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3893, "mmr_diff": 50, "enemy_nickame": "Vakhtang", "enemy_mmr": 3843, "expected_winrate": 0.5326606025904235}, {"time_played_at": "2019-12-24T19:08:58+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3914, "mmr_diff": 74, "enemy_nickame": "PPO", "enemy_mmr": 3840, "expected_winrate": 0.5482559480584295}, {"time_played_at": "2019-12-27T20:24:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3933, "mmr_diff": -100, "enemy_nickame": "HiveMind", "enemy_mmr": 4033, "expected_winrate": 0.4349563270554942}, {"time_played_at": "2019-12-27T20:40:39+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3914, "mmr_diff": 0, "enemy_nickame": "Racin", "enemy_mmr": 3914, "expected_winrate": 0.5}, {"time_played_at": "2019-12-27T21:24:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3936, "mmr_diff": -41, "enemy_nickame": "&lt;DemuCl&gt;<sp/>Jazzz", "enemy_mmr": 3977, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2019-12-28T20:58:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 22, "enemy_nickame": "rOoSter", "enemy_mmr": 3937, "expected_winrate": 0.5143871841659987}, {"time_played_at": "2019-12-28T21:06:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3980, "mmr_diff": -260, "enemy_nickame": "contremaitre", "enemy_mmr": 4240, "expected_winrate": 0.3361922887074761}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<p>Seems like it! The higher up in enemies we go, the less the chances of winning become.</p>
<section id="digression---race-separated-data" class="level2">
<h2 class="anchored" data-anchor-id="digression---race-separated-data">Digression - race separated data</h2>
<p><a href="https://altair-viz.github.io/">Altair</a> makes it very easy to look at data from each of the matchups in the dataset:</p>
<div id="cell-20" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">altair.Chart(data2019).mark_circle().encode(</span>
<span id="cb10-2">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.X(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_mmr'</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Scale(zero<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)),</span>
<span id="cb10-3">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>altair.Y(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'expected_winrate'</span>),</span>
<span id="cb10-4">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'win'</span>,</span>
<span id="cb10-5">    facet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_race'</span>,</span>
<span id="cb10-6">).interactive()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">

<div id="altair-viz-41684692d98041a18d5e66c12b8bce1c"></div>
<script type="text/javascript">
  (function(spec, embedOpt){
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "altair-viz-41684692d98041a18d5e66c12b8bce1c") {
      outputDiv = document.getElementById("altair-viz-41684692d98041a18d5e66c12b8bce1c");
    }
    const paths = {
      "vega": "https://cdn.jsdelivr.net/npm//vega@5?noext",
      "vega-lib": "https://cdn.jsdelivr.net/npm//vega-lib?noext",
      "vega-lite": "https://cdn.jsdelivr.net/npm//vega-lite@4.8.1?noext",
      "vega-embed": "https://cdn.jsdelivr.net/npm//vega-embed@6?noext",
    };

    function loadScript(lib) {
      return new Promise(function(resolve, reject) {
        var s = document.createElement('script');
        s.src = paths[lib];
        s.async = true;
        s.onload = () => resolve(paths[lib]);
        s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
        document.getElementsByTagName("head")[0].appendChild(s);
      });
    }

    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }

    function displayChart(vegaEmbed) {
      vegaEmbed(outputDiv, spec, embedOpt)
        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));
    }

    if(typeof define === "function" && define.amd) {
      requirejs.config({paths});
      require(["vega-embed"], displayChart, err => showError(`Error loading script: ${err.message}`));
    } else if (typeof vegaEmbed === "function") {
      displayChart(vegaEmbed);
    } else {
      loadScript("vega")
        .then(() => loadScript("vega-lite"))
        .then(() => loadScript("vega-embed"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({"config": {"view": {"continuousWidth": 400, "continuousHeight": 300}}, "data": {"name": "data-7464f7b13068e315102d31f4862b1a3f"}, "mark": "circle", "encoding": {"color": {"type": "nominal", "field": "win"}, "facet": {"type": "nominal", "field": "enemy_race"}, "x": {"type": "quantitative", "field": "enemy_mmr", "scale": {"zero": false}}, "y": {"type": "quantitative", "field": "expected_winrate"}}, "selection": {"selector005": {"type": "interval", "bind": "scales", "encodings": ["x", "y"]}}, "$schema": "https://vega.github.io/schema/vega-lite/v4.8.1.json", "datasets": {"data-7464f7b13068e315102d31f4862b1a3f": [{"time_played_at": "2019-10-06T12:23:56+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3751, "mmr_diff": 25, "enemy_nickame": "MJM", "enemy_mmr": 3726, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2019-10-06T12:36:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3826, "mmr_diff": 78, "enemy_nickame": "vasea", "enemy_mmr": 3748, "expected_winrate": 0.550846817630644}, {"time_played_at": "2019-10-08T19:33:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3893, "mmr_diff": -53, "enemy_nickame": "Wavelength", "enemy_mmr": 3946, "expected_winrate": 0.4653858512231642}, {"time_played_at": "2019-10-10T07:41:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3828, "mmr_diff": 26, "enemy_nickame": "PereiRa", "enemy_mmr": 3802, "expected_winrate": 0.5170011742274881}, {"time_played_at": "2019-10-10T07:55:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3760, "mmr_diff": -56, "enemy_nickame": "&lt;PROOO&gt;<sp/>Jesperpro", "enemy_mmr": 3816, "expected_winrate": 0.46343336634463533}, {"time_played_at": "2019-10-10T20:42:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3827, "mmr_diff": 126, "enemy_nickame": "Pippuri", "enemy_mmr": 3701, "expected_winrate": 0.5816835383970852}, {"time_played_at": "2019-10-14T19:15:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3878, "mmr_diff": 17, "enemy_nickame": "Supermaru", "enemy_mmr": 3861, "expected_winrate": 0.5111186061324027}, {"time_played_at": "2019-10-21T11:14:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3819, "mmr_diff": -88, "enemy_nickame": "&lt;IDLK&gt;<sp/>jasben", "enemy_mmr": 3907, "expected_winrate": 0.44268836623770724}, {"time_played_at": "2019-10-22T11:34:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3881, "mmr_diff": -185, "enemy_nickame": "&lt;\u041d\u0422\u0422&gt;<sp/>SPQR", "enemy_mmr": 4066, "expected_winrate": 0.3812924158311464}, {"time_played_at": "2019-10-22T11:42:30+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3840, "mmr_diff": 83, "enemy_nickame": "NiGHTKiNG", "enemy_mmr": 3757, "expected_winrate": 0.5540815127263503}, {"time_played_at": "2019-10-22T12:04:14+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3885, "mmr_diff": -465, "enemy_nickame": "&lt;\u041c\u041486&gt;<sp/>Moldovanin", "enemy_mmr": 4350, "expected_winrate": 0.22851649491264128}, {"time_played_at": "2019-10-22T12:19:39+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3862, "mmr_diff": -102, "enemy_nickame": "Zergorix", "enemy_mmr": 3964, "expected_winrate": 0.433670620409041}, {"time_played_at": "2019-10-29T09:32:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3821, "mmr_diff": -73, "enemy_nickame": "Tomaso", "enemy_mmr": 3894, "expected_winrate": 0.4523921838509467}, {"time_played_at": "2019-10-29T11:14:53+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3871, "mmr_diff": 890, "enemy_nickame": "YellowCoke", "enemy_mmr": 2981, "expected_winrate": 0.9112303439884303}, {"time_played_at": "2019-10-29T11:20:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3915, "mmr_diff": -17, "enemy_nickame": "abelian", "enemy_mmr": 3932, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2019-10-29T11:28:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3873, "mmr_diff": -79, "enemy_nickame": "abelian", "enemy_mmr": 3952, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2019-10-29T11:42:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3836, "mmr_diff": -119, "enemy_nickame": "llllllllllll", "enemy_mmr": 3955, "expected_winrate": 0.4227798108220997}, {"time_played_at": "2019-10-29T18:17:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3802, "mmr_diff": -110, "enemy_nickame": "beh", "enemy_mmr": 3912, "expected_winrate": 0.4285368825916186}, {"time_played_at": "2019-10-29T18:18:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3767, "mmr_diff": 27, "enemy_nickame": "Hannibal", "enemy_mmr": 3740, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2019-10-29T18:34:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3728, "mmr_diff": -16, "enemy_nickame": "&lt;Dobro&gt;<sp/>\u043f\u0438\u0440\u0430\u0436\u043e\u043a", "enemy_mmr": 3744, "expected_winrate": 0.4895352325390119}, {"time_played_at": "2019-10-30T07:06:31+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3881, "mmr_diff": 389, "enemy_nickame": "Paulie", "enemy_mmr": 3492, "expected_winrate": 0.7345530624972029}, {"time_played_at": "2019-10-31T18:12:23+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3881, "mmr_diff": -761, "enemy_nickame": "Tyson", "enemy_mmr": 4642, "expected_winrate": 0.12012861418038036}, {"time_played_at": "2019-10-31T18:55:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3766, "mmr_diff": 10, "enemy_nickame": "Granaatappel", "enemy_mmr": 3756, "expected_winrate": 0.506541061734927}, {"time_played_at": "2019-10-31T19:07:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3730, "mmr_diff": 66, "enemy_nickame": "&lt;IndyK&gt;<sp/>Sven", "enemy_mmr": 3664, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2019-11-01T09:05:49+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3691, "mmr_diff": -78, "enemy_nickame": "&lt;NerCC&gt;<sp/>speck", "enemy_mmr": 3769, "expected_winrate": 0.4491531823693559}, {"time_played_at": "2019-11-01T09:15:52+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3729, "mmr_diff": -142, "enemy_nickame": "Ghalib", "enemy_mmr": 3871, "expected_winrate": 0.40816569372083916}, {"time_played_at": "2019-11-01T13:42:38+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3696, "mmr_diff": 65, "enemy_nickame": "&lt;PiGPan&gt;<sp/>Garethax", "enemy_mmr": 3631, "expected_winrate": 0.5424171287450194}, {"time_played_at": "2019-11-02T17:45:05+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3661, "mmr_diff": 30, "enemy_nickame": "KKroer", "enemy_mmr": 3631, "expected_winrate": 0.5196142341997408}, {"time_played_at": "2019-11-02T17:46:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3691, "mmr_diff": 85, "enemy_nickame": "&lt;A\u01c2move&gt;<sp/>AmoveZerg", "enemy_mmr": 3606, "expected_winrate": 0.5553741249668821}, {"time_played_at": "2019-11-02T17:51:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3718, "mmr_diff": 33, "enemy_nickame": "Hazard", "enemy_mmr": 3685, "expected_winrate": 0.5215733330511455}, {"time_played_at": "2019-11-02T17:55:38+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3688, "mmr_diff": 62, "enemy_nickame": "Pleydellia", "enemy_mmr": 3626, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2019-11-02T20:06:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3655, "mmr_diff": 8, "enemy_nickame": "lllllll", "enemy_mmr": 3647, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-11-02T20:15:14+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3684, "mmr_diff": 58, "enemy_nickame": "lllllll", "enemy_mmr": 3626, "expected_winrate": 0.5378676713661427}, {"time_played_at": "2019-11-02T20:29:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3711, "mmr_diff": -25, "enemy_nickame": "&lt;PiGPan&gt;<sp/>Noose", "enemy_mmr": 3736, "expected_winrate": 0.48365224166479165}, {"time_played_at": "2019-11-03T11:18:56+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3740, "mmr_diff": -44, "enemy_nickame": "&lt;DaGOAT&gt;<sp/>Sinus", "enemy_mmr": 3784, "expected_winrate": 0.4712494361077314}, {"time_played_at": "2019-11-03T11:35:01+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3769, "mmr_diff": -87, "enemy_nickame": "&lt;LESeV&gt;<sp/>iceclaw", "enemy_mmr": 3856, "expected_winrate": 0.44333401172275544}, {"time_played_at": "2019-11-04T20:40:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3799, "mmr_diff": -67, "enemy_nickame": "&lt;FreeHK&gt;<sp/>jellun", "enemy_mmr": 3866, "expected_winrate": 0.4562842910331827}, {"time_played_at": "2019-11-04T20:46:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3825, "mmr_diff": -22, "enemy_nickame": "North", "enemy_mmr": 3847, "expected_winrate": 0.48561281583400134}, {"time_played_at": "2019-11-04T20:53:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3800, "mmr_diff": -83, "enemy_nickame": "&lt;MiClan&gt;<sp/>MiSHANYA", "enemy_mmr": 3883, "expected_winrate": 0.44591848727364963}, {"time_played_at": "2019-11-04T20:57:05+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3777, "mmr_diff": 16, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 3761, "expected_winrate": 0.5104647674609881}, {"time_played_at": "2019-11-05T18:35:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3752, "mmr_diff": 66, "enemy_nickame": "Fleetz", "enemy_mmr": 3686, "expected_winrate": 0.5430664920222119}, {"time_played_at": "2019-11-05T18:43:20+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3774, "mmr_diff": -53, "enemy_nickame": "&lt;XsR&gt;<sp/>Ajotaele", "enemy_mmr": 3827, "expected_winrate": 0.4653858512231642}, {"time_played_at": "2019-11-05T18:48:41+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3752, "mmr_diff": -19, "enemy_nickame": "&lt;dumbfu&gt;<sp/>cheesus", "enemy_mmr": 3771, "expected_winrate": 0.4875738328873896}, {"time_played_at": "2019-11-05T18:58:24+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3776, "mmr_diff": 24, "enemy_nickame": "smthFISHYcmg", "enemy_mmr": 3752, "expected_winrate": 0.5156942865406842}, {"time_played_at": "2019-11-06T21:43:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3798, "mmr_diff": -5, "enemy_nickame": "ProtoZZavr", "enemy_mmr": 3803, "expected_winrate": 0.4967293291893}, {"time_played_at": "2019-11-08T09:33:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3821, "mmr_diff": -101, "enemy_nickame": "Zend", "enemy_mmr": 3922, "expected_winrate": 0.4343133632425947}, {"time_played_at": "2019-11-12T09:42:59+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3847, "mmr_diff": -41, "enemy_nickame": "&lt;UATeam&gt;<sp/>click", "enemy_mmr": 3888, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2019-11-12T09:49:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3870, "mmr_diff": -30, "enemy_nickame": "midhigh", "enemy_mmr": 3900, "expected_winrate": 0.4803857658002591}, {"time_played_at": "2019-11-12T10:06:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3890, "mmr_diff": -72, "enemy_nickame": "Paulie", "enemy_mmr": 3962, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2019-11-17T09:58:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3913, "mmr_diff": -79, "enemy_nickame": "TrashCanMan", "enemy_mmr": 3992, "expected_winrate": 0.44850589025232834}, {"time_played_at": "2019-11-17T10:20:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3894, "mmr_diff": 96, "enemy_nickame": "MightyMurloc", "enemy_mmr": 3798, "expected_winrate": 0.5624696497063278}, {"time_played_at": "2019-11-18T15:44:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3913, "mmr_diff": 116, "enemy_nickame": "&lt;lLiTl&gt;<sp/>Eniman", "enemy_mmr": 3797, "expected_winrate": 0.5753034142357183}, {"time_played_at": "2019-11-18T15:58:52+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3893, "mmr_diff": 103, "enemy_nickame": "\u0432\u043b\u0430\u0434", "enemy_mmr": 3790, "expected_winrate": 0.5669718993599533}, {"time_played_at": "2019-11-18T16:08:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3911, "mmr_diff": -55, "enemy_nickame": "trouth", "enemy_mmr": 3966, "expected_winrate": 0.4640840730548977}, {"time_played_at": "2019-11-18T16:17:57+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3891, "mmr_diff": 10, "enemy_nickame": "OlympusRoyal", "enemy_mmr": 3881, "expected_winrate": 0.506541061734927}, {"time_played_at": "2019-11-18T17:08:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3912, "mmr_diff": 89, "enemy_nickame": "InsighT", "enemy_mmr": 3823, "expected_winrate": 0.557957085634325}, {"time_played_at": "2019-11-18T17:26:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3888, "mmr_diff": -16, "enemy_nickame": "trouth", "enemy_mmr": 3904, "expected_winrate": 0.4895352325390119}, {"time_played_at": "2019-11-18T17:32:43+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3910, "mmr_diff": -10, "enemy_nickame": "Raver", "enemy_mmr": 3920, "expected_winrate": 0.49345893826507303}, {"time_played_at": "2019-11-18T17:48:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3889, "mmr_diff": -18, "enemy_nickame": "&lt;TheDOH&gt;<sp/>secretspace", "enemy_mmr": 3907, "expected_winrate": 0.4882275932388606}, {"time_played_at": "2019-11-18T18:03:36+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3911, "mmr_diff": -50, "enemy_nickame": "Cosmobrother", "enemy_mmr": 3961, "expected_winrate": 0.4673393974095765}, {"time_played_at": "2019-11-19T07:23:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3934, "mmr_diff": 60, "enemy_nickame": "IIIIIIIIIIII", "enemy_mmr": 3874, "expected_winrate": 0.5391681935344519}, {"time_played_at": "2019-11-19T19:02:22+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3954, "mmr_diff": 384, "enemy_nickame": "&lt;EESC&gt;<sp/>penduloSFX", "enemy_mmr": 3570, "expected_winrate": 0.7319942855046018}, {"time_played_at": "2019-11-19T19:05:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3972, "mmr_diff": -387, "enemy_nickame": "Pudgey", "enemy_mmr": 4359, "expected_winrate": 0.2664685738023793}, {"time_played_at": "2019-11-19T19:10:36+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3947, "mmr_diff": -62, "enemy_nickame": "&lt;TDDA&gt;<sp/>EMM", "enemy_mmr": 4009, "expected_winrate": 0.45953181733049886}, {"time_played_at": "2019-11-19T19:33:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3950, "mmr_diff": 91, "enemy_nickame": "YvanDuR\u00eave", "enemy_mmr": 3859, "expected_winrate": 0.5592474000561543}, {"time_played_at": "2019-11-20T07:59:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3969, "mmr_diff": -19, "enemy_nickame": "BuRneR", "enemy_mmr": 3988, "expected_winrate": 0.4875738328873896}, {"time_played_at": "2019-11-20T08:19:24+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3948, "mmr_diff": 63, "enemy_nickame": "&lt;CocoCo&gt;<sp/>Goty", "enemy_mmr": 3885, "expected_winrate": 0.5411179718915647}, {"time_played_at": "2019-11-25T17:38:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3925, "mmr_diff": -95, "enemy_nickame": "&lt;kOzY&gt;<sp/>Dave", "enemy_mmr": 4020, "expected_winrate": 0.43817438762285926}, {"time_played_at": "2019-11-25T17:53:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3949, "mmr_diff": 14, "enemy_nickame": "Crombo", "enemy_mmr": 3935, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-11-26T18:58:28+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3927, "mmr_diff": 19, "enemy_nickame": "\u043f\u0440\u043e\u0440\u0432\u0435\u043c\u0441\u044f", "enemy_mmr": 3908, "expected_winrate": 0.5124261671126104}, {"time_played_at": "2019-11-26T19:04:47+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3905, "mmr_diff": -691, "enemy_nickame": "Doomweed", "enemy_mmr": 4596, "expected_winrate": 0.1408736498380834}, {"time_played_at": "2019-11-26T19:11:43+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3899, "mmr_diff": -952, "enemy_nickame": "SkyFlare", "enemy_mmr": 4851, "expected_winrate": 0.07649305137834163}, {"time_played_at": "2019-11-26T19:20:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3924, "mmr_diff": -17, "enemy_nickame": "Chief", "enemy_mmr": 3941, "expected_winrate": 0.4888813938675973}, {"time_played_at": "2019-11-26T19:32:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3944, "mmr_diff": 136, "enemy_nickame": "Romio", "enemy_mmr": 3808, "expected_winrate": 0.5880364496644981}, {"time_played_at": "2019-11-28T19:00:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3962, "mmr_diff": 20, "enemy_nickame": "&lt;SILeSp&gt;<sp/>Galactus", "enemy_mmr": 3942, "expected_winrate": 0.5130798849527788}, {"time_played_at": "2019-11-28T19:09:44+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3940, "mmr_diff": 86, "enemy_nickame": "&lt;vGL&gt;<sp/>Celestial", "enemy_mmr": 3854, "expected_winrate": 0.556020151303233}, {"time_played_at": "2019-11-28T19:23:15+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 3, "enemy_nickame": "Inquisition", "enemy_mmr": 3956, "expected_winrate": 0.5019624204002703}, {"time_played_at": "2019-11-29T18:07:04+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3981, "mmr_diff": 5, "enemy_nickame": "zzTp", "enemy_mmr": 3976, "expected_winrate": 0.5032706708107001}, {"time_played_at": "2019-11-29T18:14:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3959, "mmr_diff": -39, "enemy_nickame": "zzTp", "enemy_mmr": 3998, "expected_winrate": 0.47451051944488615}, {"time_played_at": "2019-11-29T18:31:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3939, "mmr_diff": -14, "enemy_nickame": "&lt;ERHELM&gt;<sp/>Erik", "enemy_mmr": 3953, "expected_winrate": 0.49084301506895067}, {"time_played_at": "2019-12-02T19:29:02+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3961, "mmr_diff": -107, "enemy_nickame": "&lt;IWtD&gt;<sp/>DiabloFeTo", "enemy_mmr": 4068, "expected_winrate": 0.4304602938093038}, {"time_played_at": "2019-12-02T19:42:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3985, "mmr_diff": 25, "enemy_nickame": "&lt;OnkelS&gt;<sp/>Prolow", "enemy_mmr": 3960, "expected_winrate": 0.5163477583352083}, {"time_played_at": "2019-12-02T20:09:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4006, "mmr_diff": -10, "enemy_nickame": "kalarazar", "enemy_mmr": 4016, "expected_winrate": 0.49345893826507303}, {"time_played_at": "2019-12-03T18:33:42+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4028, "mmr_diff": -27, "enemy_nickame": "&lt;Furri&gt;<sp/>PrinceOfIEM", "enemy_mmr": 4055, "expected_winrate": 0.48234546801180256}, {"time_played_at": "2019-12-03T18:55:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4007, "mmr_diff": 82, "enemy_nickame": "&lt;IBeA\u015aI&gt;<sp/>Bummsjordy", "enemy_mmr": 3925, "expected_winrate": 0.5534349310880278}, {"time_played_at": "2019-12-03T19:10:16+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4026, "mmr_diff": -78, "enemy_nickame": "Orian", "enemy_mmr": 4104, "expected_winrate": 0.4491531823693559}, {"time_played_at": "2019-12-05T19:21:37+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4007, "mmr_diff": 18, "enemy_nickame": "AlexMacedon", "enemy_mmr": 3989, "expected_winrate": 0.5117724067611394}, {"time_played_at": "2019-12-05T19:43:40+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4028, "mmr_diff": 27, "enemy_nickame": "Niinja", "enemy_mmr": 4001, "expected_winrate": 0.5176545319881974}, {"time_played_at": "2019-12-09T20:18:26+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4049, "mmr_diff": -188, "enemy_nickame": "Delaam", "enemy_mmr": 4237, "expected_winrate": 0.3794423330829675}, {"time_played_at": "2019-12-09T20:28:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4032, "mmr_diff": -129, "enemy_nickame": "PeterLax", "enemy_mmr": 4161, "expected_winrate": 0.4164076397687468}, {"time_played_at": "2019-12-09T20:36:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4015, "mmr_diff": -9, "enemy_nickame": "&lt;OGCO\u0421K&gt;<sp/>ShushYo", "enemy_mmr": 4024, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-12-09T20:39:03+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4036, "mmr_diff": -72, "enemy_nickame": "Heradrass", "enemy_mmr": 4108, "expected_winrate": 0.4530404772551185}, {"time_played_at": "2019-12-10T19:05:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4017, "mmr_diff": -108, "enemy_nickame": "NS\u0192Faxo", "enemy_mmr": 4125, "expected_winrate": 0.42981892053631354}, {"time_played_at": "2019-12-11T20:04:00+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4042, "mmr_diff": 14, "enemy_nickame": "&lt;PiGPan&gt;<sp/>TNTea", "enemy_mmr": 4028, "expected_winrate": 0.5091569849310493}, {"time_played_at": "2019-12-11T20:23:18+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 4020, "mmr_diff": 8, "enemy_nickame": "Legionaru", "enemy_mmr": 4012, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-12-12T18:10:58+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4041, "mmr_diff": 49, "enemy_nickame": "Ciprian", "enemy_mmr": 3992, "expected_winrate": 0.5320091949397798}, {"time_played_at": "2019-12-12T18:48:15+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4061, "mmr_diff": -83, "enemy_nickame": "&lt;Nutri&gt;<sp/>Highscribe", "enemy_mmr": 4144, "expected_winrate": 0.44591848727364963}, {"time_played_at": "2019-12-12T19:02:09+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4042, "mmr_diff": 13, "enemy_nickame": "contremaitre", "enemy_mmr": 4029, "expected_winrate": 0.5085030455441815}, {"time_played_at": "2019-12-12T19:21:45+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4063, "mmr_diff": 12, "enemy_nickame": "Fraze", "enemy_mmr": 4051, "expected_winrate": 0.5078490770578872}, {"time_played_at": "2019-12-12T19:28:57+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4041, "mmr_diff": -90, "enemy_nickame": "NazelHut", "enemy_mmr": 4131, "expected_winrate": 0.44139765822811194}, {"time_played_at": "2019-12-12T19:42:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 4022, "mmr_diff": -385, "enemy_nickame": "cloud", "enemy_mmr": 4407, "expected_winrate": 0.2674927102443324}, {"time_played_at": "2019-12-12T19:53:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 4001, "mmr_diff": -36, "enemy_nickame": "Xaenor", "enemy_mmr": 4037, "expected_winrate": 0.47646823150757606}, {"time_played_at": "2019-12-12T20:52:10+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3980, "mmr_diff": 15, "enemy_nickame": "&lt;snajpu&gt;<sp/>Auddi", "enemy_mmr": 3965, "expected_winrate": 0.5098108929820042}, {"time_played_at": "2019-12-12T21:03:25+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 4001, "mmr_diff": 57, "enemy_nickame": "&lt;snajpu&gt;<sp/>Auddi", "enemy_mmr": 3944, "expected_winrate": 0.5372172158592833}, {"time_played_at": "2019-12-12T21:16:53+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3978, "mmr_diff": -191, "enemy_nickame": "Vidra", "enemy_mmr": 4169, "expected_winrate": 0.3775957486362336}, {"time_played_at": "2019-12-12T21:29:56+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 75, "enemy_nickame": "Noobofsc", "enemy_mmr": 3882, "expected_winrate": 0.5489039163154777}, {"time_played_at": "2019-12-14T10:50:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3933, "mmr_diff": -85, "enemy_nickame": "&lt;Div303&gt;<sp/>Dupsko", "enemy_mmr": 4018, "expected_winrate": 0.4446258750331179}, {"time_played_at": "2019-12-18T16:35:46+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3957, "mmr_diff": -109, "enemy_nickame": "&lt;IndyK&gt;<sp/>HaPe", "enemy_mmr": 4066, "expected_winrate": 0.42917778277580165}, {"time_played_at": "2019-12-18T16:53:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3938, "mmr_diff": 110, "enemy_nickame": "FrozenZerg", "enemy_mmr": 3828, "expected_winrate": 0.5714631174083814}, {"time_played_at": "2019-12-20T18:17:10+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 0, "enemy_nickame": "&lt;\u01aeesXG&gt;<sp/>Rocky", "enemy_mmr": 3957, "expected_winrate": 0.5}, {"time_played_at": "2019-12-20T18:36:11+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3935, "mmr_diff": -246, "enemy_nickame": "utopike", "enemy_mmr": 4181, "expected_winrate": 0.3444157777997608}, {"time_played_at": "2019-12-20T18:42:21+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3955, "mmr_diff": -205, "enemy_nickame": "Nyx", "enemy_mmr": 4160, "expected_winrate": 0.36902597468573733}, {"time_played_at": "2019-12-20T18:59:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3939, "mmr_diff": 53, "enemy_nickame": "CapSto", "enemy_mmr": 3886, "expected_winrate": 0.5346141487768358}, {"time_played_at": "2019-12-20T19:06:55+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3959, "mmr_diff": -4, "enemy_nickame": "&lt;TAW&gt;<sp/>Pote", "enemy_mmr": 3963, "expected_winrate": 0.49738344991611666}, {"time_played_at": "2019-12-20T19:21:46+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3937, "mmr_diff": 62, "enemy_nickame": "Neydark", "enemy_mmr": 3875, "expected_winrate": 0.5404681826695011}, {"time_played_at": "2019-12-21T13:30:37+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3957, "mmr_diff": 1, "enemy_nickame": "Albus", "enemy_mmr": 3956, "expected_winrate": 0.5006541431191143}, {"time_played_at": "2019-12-21T13:41:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3936, "mmr_diff": -40, "enemy_nickame": "tiwai", "enemy_mmr": 3976, "expected_winrate": 0.47385811986038295}, {"time_played_at": "2019-12-21T13:54:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 6, "enemy_nickame": "tiwai", "enemy_mmr": 3953, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-12-21T14:00:35+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3937, "mmr_diff": 180, "enemy_nickame": "RXX", "enemy_mmr": 3757, "expected_winrate": 0.6156164673184111}, {"time_played_at": "2019-12-21T14:10:12+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3915, "mmr_diff": -92, "enemy_nickame": "xYn", "enemy_mmr": 4007, "expected_winrate": 0.44010774162905025}, {"time_played_at": "2019-12-21T14:27:45+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3896, "mmr_diff": -15, "enemy_nickame": "Stefan", "enemy_mmr": 3911, "expected_winrate": 0.49018910701799573}, {"time_played_at": "2019-12-21T16:46:23+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3918, "mmr_diff": -49, "enemy_nickame": "Xenocide", "enemy_mmr": 3967, "expected_winrate": 0.4679908050602201}, {"time_played_at": "2019-12-21T16:49:32+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3941, "mmr_diff": -994, "enemy_nickame": "&lt;\u0413\u043d\u043e\u043c\u0438\u043a&gt;<sp/>IndeX", "enemy_mmr": 4935, "expected_winrate": 0.06908215857285668}, {"time_played_at": "2019-12-22T20:55:54+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3965, "mmr_diff": 67, "enemy_nickame": "Bingo", "enemy_mmr": 3898, "expected_winrate": 0.5437157089668173}, {"time_played_at": "2019-12-22T21:04:09+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3941, "mmr_diff": 61, "enemy_nickame": "Jungla", "enemy_mmr": 3880, "expected_winrate": 0.5398182558231894}, {"time_played_at": "2019-12-22T21:07:48+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3918, "mmr_diff": -9, "enemy_nickame": "DeepMind", "enemy_mmr": 3927, "expected_winrate": 0.4941129806268964}, {"time_played_at": "2019-12-22T21:11:02+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3897, "mmr_diff": -51, "enemy_nickame": "DeepMind", "enemy_mmr": 3948, "expected_winrate": 0.4666881010864951}, {"time_played_at": "2019-12-22T21:26:35+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3877, "mmr_diff": 44, "enemy_nickame": "Nyxeu", "enemy_mmr": 3833, "expected_winrate": 0.5287505638922686}, {"time_played_at": "2019-12-23T16:23:00+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3897, "mmr_diff": 3, "enemy_nickame": "IntrinsiCat", "enemy_mmr": 3894, "expected_winrate": 0.5019624204002703}, {"time_played_at": "2019-12-23T16:30:33+00:00", "win": false, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3898, "mmr_diff": 116, "enemy_nickame": "\u00e6\u00e6\u00e6", "enemy_mmr": 3782, "expected_winrate": 0.5753034142357183}, {"time_played_at": "2019-12-23T16:51:19+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3873, "mmr_diff": 87, "enemy_nickame": "Listig", "enemy_mmr": 3786, "expected_winrate": 0.5566659882772446}, {"time_played_at": "2019-12-24T11:03:44+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3892, "mmr_diff": 47, "enemy_nickame": "&lt;W\u00f8&gt;<sp/>poichiche", "enemy_mmr": 3845, "expected_winrate": 0.5307060544650376}, {"time_played_at": "2019-12-24T11:17:11+00:00", "win": false, "race": "Protoss", "enemy_race": "Terran", "mmr": 3869, "mmr_diff": 6, "enemy_nickame": "&lt;isIMBA&gt;<sp/>naincraft", "enemy_mmr": 3863, "expected_winrate": 0.5039247803417513}, {"time_played_at": "2019-12-24T11:33:55+00:00", "win": true, "race": "Protoss", "enemy_race": "Protoss", "mmr": 3847, "mmr_diff": -119, "enemy_nickame": "ARCMAN", "enemy_mmr": 3966, "expected_winrate": 0.4227798108220997}, {"time_played_at": "2019-12-24T18:36:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3872, "mmr_diff": 8, "enemy_nickame": "Vakhtang", "enemy_mmr": 3864, "expected_winrate": 0.5052329568614776}, {"time_played_at": "2019-12-24T18:53:21+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3893, "mmr_diff": 50, "enemy_nickame": "Vakhtang", "enemy_mmr": 3843, "expected_winrate": 0.5326606025904235}, {"time_played_at": "2019-12-24T19:08:58+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3914, "mmr_diff": 74, "enemy_nickame": "PPO", "enemy_mmr": 3840, "expected_winrate": 0.5482559480584295}, {"time_played_at": "2019-12-27T20:24:27+00:00", "win": false, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3933, "mmr_diff": -100, "enemy_nickame": "HiveMind", "enemy_mmr": 4033, "expected_winrate": 0.4349563270554942}, {"time_played_at": "2019-12-27T20:40:39+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3914, "mmr_diff": 0, "enemy_nickame": "Racin", "enemy_mmr": 3914, "expected_winrate": 0.5}, {"time_played_at": "2019-12-27T21:24:06+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3936, "mmr_diff": -41, "enemy_nickame": "&lt;DemuCl&gt;<sp/>Jazzz", "enemy_mmr": 3977, "expected_winrate": 0.47320580952080993}, {"time_played_at": "2019-12-28T20:58:25+00:00", "win": true, "race": "Protoss", "enemy_race": "Terran", "mmr": 3959, "mmr_diff": 22, "enemy_nickame": "rOoSter", "enemy_mmr": 3937, "expected_winrate": 0.5143871841659987}, {"time_played_at": "2019-12-28T21:06:48+00:00", "win": true, "race": "Protoss", "enemy_race": "Zerg", "mmr": 3980, "mmr_diff": -260, "enemy_nickame": "contremaitre", "enemy_mmr": 4240, "expected_winrate": 0.3361922887074761}]}}, {"mode": "vega-lite"});
</script>
</div>
</div>
<p>There are a few things we can already say from this:</p>
<ul>
<li>Enemy Protosses at 4k MMR were already a large challenge, as I won no games whatsoever against those. This is, in fact, what inspired me to write this post!</li>
<li>PvT was my best matchup - there are the most wins there.</li>
<li>PvZ games were mostly even, though there are a good amount of lost games that I should probably have won! This seems to point to MMR not being enough to estimate my winrate properly - for example, strategical variation in Zerg play. I’m still sort of confused on what to do with a very defensive, lategame-oriented Zerg player.</li>
</ul>
<p>Let’s see if our estimates were right:</p>
<div id="cell-22" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">data2019.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enemy_race'</span>).win.mean()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>enemy_race
Protoss    0.309524
Terran     0.729167
Zerg       0.519231
Name: win, dtype: float64</code></pre>
</div>
</div>
<p>Ouch. That PvP still hurts. Well, enough sulking! We’ll get back to this point later - promise - but for nowo, let’s get right to</p>
</section>
</section>
<section id="the-bayesian-model" class="level1">
<h1>The Bayesian model</h1>
<p>The idea is going to be simple. I’m going to assume that:</p>
<ol type="1">
<li>my true MMR is some random number about 4k, oscillating at most 300 up and down from that number: <img src="https://latex.codecogs.com/png.latex?%5Cmu%20%5Csim%20%5Ctext%7BNormal%7D(4000,%20300)">.</li>
<li>in each game, my effective MMR is a random normal variable <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BMMR%7D%5En%20%5Csim%20%5Ctext%7BNormal%7D(%5Cmu,%20%5Csigma)"> (where by the superscript I denote the fact that we’re sampling n of these, one per game) that includes a ton of effects, some of which can be:
<ol type="1">
<li>the size of my breakfast of that day</li>
<li>time of day</li>
<li>enemy race</li>
<li>whether I’d exercised before (I should really start tracking that, come to think of it…)</li>
<li>the map the game is played on</li>
</ol></li>
<li>I have no idea how much my effective per-game MMR varies, so I’m just going to say the variance of MMR is going to be some positive number, and I’ll assume a half-normal distribution with a scale of 100: <img src="https://latex.codecogs.com/png.latex?%5Csigma%20%5Csim%20%5Ctext%7BHalfNormal%7D(100)">. Let’s take a look at that distribution:</li>
</ol>
<div id="cell-24" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.stats <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> halfnorm</span>
<span id="cb13-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span>
<span id="cb13-3">PDF <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> halfnorm(scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>).pdf(x)</span>
<span id="cb13-4">plt.plot(x, PDF)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-1_files/figure-html/cell-13-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>which is another way of saying “some positive number, small-ish, probably not larger than 200”.</p>
<p>Okay, but that’s the MMR. We need some way of connecting that to our won and lost games! Luckily, we have the <code>MMR_winrate</code> formula: we know that the ladder system essentially models each game as a biased coin <em>(Pro)</em> toss (that joke is much funnier when you’re the Protoss on the ladder), with the bias being equal to the estimated winrate. The probability of a coin toss giving heads is usually modelled with the Bernoulli distribution.</p>
<p>Let’s now go ahead and use PyMC3 to encode that into a Bayesian model:</p>
<div id="cell-26" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pymc3 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pm</span>
<span id="cb14-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arviz <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> az</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pm.Model() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> bernoulli_model:</span>
<span id="cb14-5">    mmr_μ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Normal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'μ'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb14-6">    mmr_σ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.HalfNormal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'σ'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb14-7">    mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Normal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MMR'</span>, mmr_μ, mmr_σ, shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data2019.enemy_mmr.size)</span></code></pre></div>
</div>
<p>Note the <code>shape</code> part - we sample one effective MMR for each game in the dataset. Now, we deal with calculating the expected winrates for our games:</p>
<div id="cell-28" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> bernoulli_model:</span>
<span id="cb15-2">    diffs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Deterministic(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MMR_diff'</span>, mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> data2019.enemy_mmr)</span>
<span id="cb15-3">    p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Deterministic(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'winrate'</span>, MMR_winrate(diffs))</span></code></pre></div>
</div>
<p><code>Deterministic</code> variables are stuff that depends in a predictable way on your random variables, once you know their values. We could skip that, but I label them as <code>Deterministic</code> to easily track them later.</p>
<p>We can now add the actual data using the <code>observed</code> keyword:</p>
<div id="cell-30" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> bernoulli_model:</span>
<span id="cb16-2">    wl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Bernoulli(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'win'</span>, p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>p, observed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data2019.win)</span></code></pre></div>
</div>
<p>And now we press the magic inference <code>pymc3.sample</code> button! I’ll go into details on it another time (when I understand it better myself!). In a nutshell, though, <code>sample</code> is going to launch a few “random walks” (Hamiltonian simulations of particle motion, technically! Those are the details I wasn’t going to explore today…) in parameter space. Ideally, these can explore a good amount of parameter value sets and find ones that fit the data well.</p>
<p>I’ll also wrap it in the neat <code>arviz</code> Bayesian visualization library.</p>
<p>If you’re running this live, this is a good time to put the kettle on:</p>
<div id="cell-32" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> bernoulli_model:</span>
<span id="cb17-2">    bern_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> az.from_pymc3(trace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pm.sample(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, tune<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, chains<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Multiprocess sampling (4 chains in 2 jobs)
NUTS: [MMR, σ, μ]
Sampling 4 chains, 1,297 divergences: 100%|██████████| 16000/16000 [00:44&lt;00:00, 360.37draws/s]
There were 927 divergences after tuning. Increase `target_accept` or reparameterize.
The acceptance probability does not match the target. It is 0.23962550742848526, but should be close to 0.8. Try to increase the number of tuning steps.
There were 119 divergences after tuning. Increase `target_accept` or reparameterize.
There were 249 divergences after tuning. Increase `target_accept` or reparameterize.
The acceptance probability does not match the target. It is 0.6604859684507034, but should be close to 0.8. Try to increase the number of tuning steps.
There were 2 divergences after tuning. Increase `target_accept` or reparameterize.
The rhat statistic is larger than 1.05 for some parameters. This indicates slight problems during sampling.
The estimated number of effective samples is smaller than 200 for some parameters.</code></pre>
</div>
</div>
<p>Aaaaand everything crashed. We can take a look at these results, but they won’t be pretty:</p>
<div id="cell-34" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">var_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'μ'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'σ'</span>]</span>
<span id="cb19-2">az.plot_trace(bern_data, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>var_names)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-1_files/figure-html/cell-18-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Each colored line represents each of the trajectories, with histograms of their values on the left, and actual (pseudo)time trajectories during the sampling on the right. As we can see, the chains don’t exactly agree with each other. Divergences (vertical lines at the bottom… yeah) mean that our random walkers, or probability space particles, flew off to infinity, forgetting all about energy conservation and that kind of jazz. A model with divergences is… basically, bad. They didn’t manage to sample parameters well, getting stuck in multiple regions of parameter space, with slow variations and definitely not independent steps. This completely messes up the histograms. If the chains disagree as badly as they do here, well, that’s not a model to be trusted.</p>
<p>We can also look at where in particular in parameter space the model started having trouble:</p>
<div id="cell-36" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">az.plot_pair(bern_data, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>var_names, divergences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-1_files/figure-html/cell-19-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Well, there’s clearly some issues at the bottom, at low values of <img src="https://latex.codecogs.com/png.latex?%5Csigma">. It is, however, kind of unhelpful.</p>
<p>I don’t quite understand the next part myself just yet, but as I (probably not particularly well) think of it: what people usually do in this case is decouple sampling the <strong>amplitude</strong> or <strong>variance</strong> <img src="https://latex.codecogs.com/png.latex?%5Csigma"> of our estimated MMR from sampling the <strong>direction</strong> and <strong>value</strong> of each particular iteration, and from the mean itself. We treat the mean as we did before:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cmu%20%5Csim%20%5Ctext%7BNormal%7D(4000,%20300)"></p>
<p>We’ll also take the variance as usual:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Csigma%20%5Csim%20%5Ctext%7BHalfNormal%7D(100)"></p>
<p>What we’ll also do, however, is grab a set of normal variables:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Csigma_%5Ctext%7Bnorm%7D%5En%20%5Csim%20%5Ctext%7BNormal%7D(0,%201)"></p>
<p>And we’ll calculate the effective MMR per game as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Ctext%7BMMR%7D%5En%20=%20%5Cmu%20+%20%5Csigma%20*%20%5Csigma_%5Ctext%7Bnorm%7D%5En"></p>
<p>This is called a noncentered formulation, and is a big deal apparently. If I’m correct, it makes exploring variations in the amplitude easier when the possibly small variations from the separate normal helper random variables are disconnected from it, and from the mean. More about this as I know more about this.</p>
<p>Without further ado, the corrected model:</p>
<div id="cell-38" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> pm.Model() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> bernoulli_model_noncentered:</span>
<span id="cb21-2">    mmr_μ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Normal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'μ'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb21-3">    mmr_σ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.HalfNormal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'σ'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb21-4">    mmr_σ_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Normal(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'σ_norm'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data2019.enemy_mmr.size)</span>
<span id="cb21-5">    </span>
<span id="cb21-6">    mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Deterministic(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MMR'</span>, mmr_μ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> mmr_σ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> mmr_σ_norm)</span>
<span id="cb21-7">    diffs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Deterministic(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MMR_diff'</span>, mmr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> data2019.enemy_mmr)</span>
<span id="cb21-8">    p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Deterministic(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'winrate'</span>, MMR_winrate(diffs))</span>
<span id="cb21-9">    </span>
<span id="cb21-10">    wl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.Bernoulli(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'win'</span>, p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>p, observed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data2019.win)</span>
<span id="cb21-11">    </span>
<span id="cb21-12">    trace <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pm.sample(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, tune<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, chains<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb21-13">    bern_noncentered_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> az.from_pymc3(</span>
<span id="cb21-14">        trace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>trace,</span>
<span id="cb21-15">        prior<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pm.sample_prior_predictive(),</span>
<span id="cb21-16">        posterior_predictive<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pm.sample_posterior_predictive(trace),</span>
<span id="cb21-17">    )</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Auto-assigning NUTS sampler...
Initializing NUTS using jitter+adapt_diag...
Multiprocess sampling (4 chains in 2 jobs)
NUTS: [σ_norm, σ, μ]
Sampling 4 chains, 0 divergences: 100%|██████████| 16000/16000 [00:20&lt;00:00, 782.58draws/s]
100%|██████████| 8000/8000 [00:06&lt;00:00, 1187.82it/s]</code></pre>
</div>
</div>
<p>That seems to have worked nicely!</p>
<div id="cell-40" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">var_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'μ'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'σ'</span>]</span>
<span id="cb23-2">az.summary(bern_noncentered_data, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>var_names) </span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">mean</th>
<th data-quarto-table-cell-role="th">sd</th>
<th data-quarto-table-cell-role="th">hpd_3%</th>
<th data-quarto-table-cell-role="th">hpd_97%</th>
<th data-quarto-table-cell-role="th">mcse_mean</th>
<th data-quarto-table-cell-role="th">mcse_sd</th>
<th data-quarto-table-cell-role="th">ess_mean</th>
<th data-quarto-table-cell-role="th">ess_sd</th>
<th data-quarto-table-cell-role="th">ess_bulk</th>
<th data-quarto-table-cell-role="th">ess_tail</th>
<th data-quarto-table-cell-role="th">r_hat</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">μ</td>
<td>3972.677</td>
<td>65.433</td>
<td>3849.004</td>
<td>4094.180</td>
<td>0.550</td>
<td>0.389</td>
<td>14148.0</td>
<td>14148.0</td>
<td>14160.0</td>
<td>5935.0</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">σ</td>
<td>80.602</td>
<td>60.331</td>
<td>0.018</td>
<td>188.067</td>
<td>0.787</td>
<td>0.592</td>
<td>5879.0</td>
<td>5193.0</td>
<td>5308.0</td>
<td>4121.0</td>
<td>1.0</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>So my true MMR in 2019 was somewhere around 3973, with a standard deviation of ~65. A more Bayesian approach is saying that we can say with 97% (I’m not completely sure it’s not 94%, because of symmetry…) certainty that the true MMR is between 3850 and 4094. That’s the Highest Posterior Density - hpd - metric.</p>
<p>Note how this standard deviation is an okay metric for the non-gaussian <img src="https://latex.codecogs.com/png.latex?%5Cmu">, but completely fails to make any sense for <img src="https://latex.codecogs.com/png.latex?%5Csigma">, where I’m just going to say I’m 97% sure it’s not larger than 188, with a mean of 81.</p>
<p>Also note that HPD means what it means - we’re 97% (or 94%, because I’m not sure about that detail!) sure that the variable is in these bounds, according to this model. The comparable metric in frequentist statistics - the <img src="https://latex.codecogs.com/png.latex?%5Cchi%5E2"> test - says… something that nobody really understands. I can find the papers on that for you if you’d like, but basically… people think it says what HPD says, and it doesn’t, really.</p>
<div id="cell-42" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">az.plot_trace(bern_noncentered_data, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>var_names)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-1_files/figure-html/cell-22-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>The chains mostly agree on the values!</p>
<div id="cell-44" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">az.plot_pair(bern_noncentered_data, var_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>var_names, divergences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-1_files/figure-html/cell-23-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>We can also compare the prior (our assumptions) and the posterior (the results of our model):</p>
<div id="cell-46" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots()</span>
<span id="cb26-2">bern_noncentered_data.prior.MMR_diff.plot.hist(bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax, density<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Prior"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-3">bern_noncentered_data.posterior.MMR_diff.plot.hist(bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax, density<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Posterior"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-4">ax.legend()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-1_files/figure-html/cell-24-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>For the MMR difference, the distribution got peaked: which makes sense! The game doesn’t usually find me opponents 500 MMR away from mine!</p>
<div id="cell-48" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots()</span>
<span id="cb27-2">bern_noncentered_data.prior.winrate.plot.hist(bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax, density<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Prior"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-3">bern_noncentered_data.posterior.winrate.plot.hist(bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax, density<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Posterior"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-4">ax.legend()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-1_files/figure-html/cell-25-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>The winrate got closer in mean to 50%, which is what the system tries to optimize for. Reasonable! Note that the prior seems to not have been all that good - it predicted a winrate of more than 50%! Could have been better, but it seems to have handled the adjustment nicely.</p>
<div id="cell-50" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots()</span>
<span id="cb28-2">bern_noncentered_data.prior.MMR.plot.hist(bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax, density<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Prior"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-3">bern_noncentered_data.posterior.MMR.plot.hist(bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax, density<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Posterior"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-4">ax.legend()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/bayes-sc2-1_files/figure-html/cell-26-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>And it definitely got more confident about my MMR being just below 4k!</p>
</section>
<section id="where-to-from-here" class="level1">
<h1>Where to from here?</h1>
<p>This was just the basic overview, and honestly - the same analysis could probably have been handled using frequentist methods. We had a good number of data points. Call <code>.mean()</code>, call <code>.std()</code>, call it a day, right?</p>
<p><strong>But.</strong></p>
<p>Suppose I wanted to go deeper?</p>
<p>Remember the point about performance varying per matchup? Well, we could find an effective MMR per race this way! Bayesian inference makes that easy. We’d have less data, as the games are split between PvT, PvZ and unfortunately PvP; but using what we know about MMR in all the matchups, we have - effectively - a prior for per-matchup data.</p>
<p>There are also more factors we could include. Maps? Sure! Game duration? Probably! And Bayesian inference makes it particularly simple to add those kinds of data in, once you figure out a reasonable assumption about how that data affects your play. For example, for the duration, I could postulate an equal chance of winning at each time; that’s a flat prior. Of course, it’s going to get modified when confronted with data; and that’s neat, because it lets me figure out whether I should try to avoid dragging games out, or whether I should focus more on shoring up my lacking early game play. Combine that with matchup data and you get information like “End PvZs early or lose a ton” - and now you’ve got a strong quantitative basis to support that!</p>
<p>But that’s a story for another day, as I just barely made it with this post today :) I’ll come back to that topic soon-ish.</p>
<p>In the meantime, if you have ideas about possible applications or questions you’d like answered, don’t hesitate to leave a comment below! :)</p>


</section>

 ]]></description>
  <category>bayes</category>
  <category>pymc3</category>
  <category>starcraft</category>
  <category>python</category>
  <category>StarCraft II Bayesian replay analysis</category>
  <guid>https://stanczakdominik.github.io/posts/bayes-sc2-1.html</guid>
  <pubDate>Wed, 10 Jun 2020 19:37:00 GMT</pubDate>
</item>
<item>
  <title>Dealing with backlogs</title>
  <link>https://stanczakdominik.github.io/posts/backlogs.html</link>
  <description><![CDATA[ 





<p>I have a backlog problem.</p>
<p>Like probably many of you in 2020, I suffer from having too much interesting content to read, watch, listen to or play through. I’ve been thinking about ways to tackle my gathering points, and I think I finally have something I’m willing to share that could be useful for you as well.</p>
<!-- TEASER_END -->
<p>The journey for me started with Pocket, which is basically a centralized link gathering service for articles you’d like to read. I use it to dump interesting links from RSS and from all over the web that I don’t have a particular need to read right where and when I find them. This, of course, vastly exceeds the number of articles I actually read. And that’s fine; you have to say no to a lot of content nowadays, becuse a vast amount of news content (I’m looking at you, politics!) becomes out of date pretty much instantly. If you let them stew for a week or two, it often turns out you didn’t need to read them in the first place anyway.</p>
<p>Still, my backlog has become a hoard of way too many articles to get through in my lifteime. I could just set a goal of “read 5 articles a day”, but that can be easily gamed - just go through all the trash politics news you don’t actually care about, bingo, go do something else while your backlog gently expands.</p>
<p>While reading up on Beeminder (on which you can expect another post soon-ish!), I found this interesting method for dealing with this issue on <a href="https://beemind.me/goals/pocket/article_days_linear">beemind.me</a> by <a href="https://github.com/tsubery">Gal Tsubery</a>. To your backlog, you assign a numerical value calculated as</p>
<p><img src="https://latex.codecogs.com/png.latex?%20F%20=%20%5Csum_%7Barticles%7D%20%5Ctext%7BDays%20since%20article%20was%20added%7D%20"></p>
<p>And then you try to minimize that. You can easily plug this into Beeminder to get easy tracking of progress on decreasing your backlog, and a deadline if you slack off on getting through it:</p>
<center>
<iframe src="https://www.beeminder.com/widget?slug=pocket-backlog&amp;username=stanczakdominik" height="185px" width="230px" frameborder="0px">
</iframe>
</center>
<p>This idea is particularly neat for a few reasons:</p>
<ol type="1">
<li>to grab these juicy drops in F, you can always remove articles you know you’re not going to get to;</li>
<li>reading old articles becomes the default action, and the tail end of your backlog gets filtered by the previous point to become stuff you actually care about;</li>
<li>reading important new articles becomes preventive action; you stop them from growing into these huge threats;</li>
<li>deleting unimportant new articles becomes more of a habit due to 2;</li>
<li>with your experience from 4, you start paying more attention to your information diet, skipping articles that catch your attention via clickbaity articles but are going to stop being important in a fortnight’s time.</li>
</ol>
<p>I liked it, so I tinkered a bit with Python, Systemd (though a cron job to run the script periodically would do) and the Beeminder web API and some neat libraries to apply the same concept to:</p>
<section id="todoist" class="level2">
<h2 class="anchored" data-anchor-id="todoist">Todoist</h2>
<p>This tracks my old tasks (all the Julia tutorials I’m never going to get to, stuff I’ve quietly given up on over the years, etc etc):</p>
<center>
<iframe src="https://www.beeminder.com/widget?slug=todoist-backlog&amp;username=stanczakdominik" height="185px" width="230px" frameborder="0px">
</iframe>
</center>
<p>A little helper function to do the Beeminder API call is nice to have:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-3">beeminder_auth_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'BEEMINDER_TOKEN'</span>]</span>
<span id="cb1-4">beeminder_username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'BEEMINDER_USERNAME'</span>]</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> increment_beeminder(desc, beeminder_goal, value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-7">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>: value,</span>
<span id="cb1-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auth_token"</span>: beeminder_auth_token,</span>
<span id="cb1-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"comment"</span>: desc,</span>
<span id="cb1-11">    }</span>
<span id="cb1-12"></span>
<span id="cb1-13">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.post(</span>
<span id="cb1-14">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://www.beeminder.com/api/v1/users/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>beeminder_username<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/goals/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>beeminder_goal<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/datapoints.json"</span>,</span>
<span id="cb1-15">        data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data,</span>
<span id="cb1-16">    )</span>
<span id="cb1-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> response</span></code></pre></div>
<p>And now we use the <a href="https://pypi.org/project/todoist-python/">Todoist API</a> to get at out tasks:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/python</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dateutil</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dateutil.parser</span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> todoist</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-8">now <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.datetime.now(datetime.timezone.utc)</span>
<span id="cb2-9">key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TODOIST_KEY'</span>]</span>
<span id="cb2-10">api <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> todoist.TodoistAPI(key)</span>
<span id="cb2-11">api.sync()</span>
<span id="cb2-12"></span>
<span id="cb2-13">undone_tasks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> api.items.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> x[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'checked'</span>])</span>
<span id="cb2-14">dates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [dateutil.parser.parse(task[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date_added'</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> task <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> undone_tasks]</span>
<span id="cb2-15">deltas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> now <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> date <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> dates]</span>
<span id="cb2-16">total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(deltas)</span>
<span id="cb2-17">total_days <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> total.days <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> total.seconds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb2-18"></span>
<span id="cb2-19">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Incremented automatically from </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(undone_tasks)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> tasks at </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>now<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-20">increment_beeminder(message, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"todoist-backlog"</span>, total_days)</span></code></pre></div>
</section>
<section id="youtube-videos" class="level2">
<h2 class="anchored" data-anchor-id="youtube-videos">Youtube videos</h2>
<center>
<iframe src="https://www.beeminder.com/widget?slug=youtube-backlog-upgrade&amp;username=stanczakdominik" height="185px" width="230px" frameborder="0px">
</iframe>
</center>
<p>This took a bit of legwork because <a href="../posts/youtube-watch-later-export.rst">YouTube’s Watch Later playlist is not accessible from remote API’s, as I’ve written about before</a>; but once you get accustomed to using another playlist for you <del>kitten vids</del> SciPy tutorials, it’s as simple as the following:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/python</span></span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pafy</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dateutil.parser</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime, timedelta</span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sc2replib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> increment_beeminder</span>
<span id="cb3-6">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://www.youtube.com/playlist?list=PL8B03F998924DA45B"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># example playlist ID</span></span>
<span id="cb3-7">playlist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pafy.get_playlist(url)</span>
<span id="cb3-8"></span>
<span id="cb3-9">now <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.now()</span>
<span id="cb3-10">total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timedelta(seconds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> playlist[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'items'</span>]:</span>
<span id="cb3-12">    added_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dateutil.parser.parse(item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'playlist_meta'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'added'</span>])</span>
<span id="cb3-13">    total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> now <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> added_date</span>
<span id="cb3-14"></span>
<span id="cb3-15"></span>
<span id="cb3-16">total_days <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> total.days <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> total.seconds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb3-17"></span>
<span id="cb3-18">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Incremented automatically from </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(playlist[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'items'</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> movies at </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>now<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-19">increment_beeminder(message, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"youtube-backlog-upgrade"</span>, total_days)</span></code></pre></div>
</section>
<section id="future-work" class="level2">
<h2 class="anchored" data-anchor-id="future-work">Future work?</h2>
<p>I’m probably going to simplify these scripts using my <a href="https://github.com/StanczakDominik/beeminder-cli/">Beeminder-CLI</a> library I’ve been writing recently.</p>
<p>I’m also wondering about other applications of this idea:</p>
<ul>
<li>My <a href="https://github.com/pubs/pubs/">pubs</a> (another piece of really cool software!) articles-to-read list is definitely the next move. They store article add dates in <code>.yaml</code> files, so it’s going to be simple to loop over all those, filter out only the ones marked as actually to be read, then sum them up.</li>
<li>I use <a href="https://antennapod.org/">Antennapod</a> for podcasts, but that’s Android-only and I haven’t yet found a simple way to run Python scripts on mobile; even then, I have no clue how to extract podcast queue-addition dates from it.</li>
<li>Steam games would be another neat idea, but I don’t know if they have a library API I could read. I also don’t know of any way to neatly remove a game from the immediate library. Tags could work, I guess, if they have them.</li>
</ul>


</section>

 ]]></description>
  <category>python</category>
  <category>scripting</category>
  <category>tech</category>
  <guid>https://stanczakdominik.github.io/posts/backlogs.html</guid>
  <pubDate>Sun, 17 May 2020 11:25:00 GMT</pubDate>
</item>
<item>
  <title>First JOSS review!</title>
  <link>https://stanczakdominik.github.io/posts/first-joss-review.html</link>
  <description><![CDATA[ 





<p>Several months ago, I stumbled upon <a href="https://www.youtube.com/watch?v=Y4eKWN_eAxM">the journal they call Joss</a>. Well, actually, <a href="https://joss.theoj.org/">JOSS - the Journal of Open Source Software, “a developer friendly, open access journal for research software packages”</a>. It’s a completely free, open-source and open-access alternative to established, <a href="https://www.theguardian.com/science/2017/jun/27/profitable-business-scientific-publishing-bad-for-science">for-(often-a-lot-of)-profit</a> journals such as those by Reed-Elsevier or Springer.</p>
<p>And a few days ago, <a href="https://github.com/openjournals/joss-reviews/issues/2133#issuecomment-618617823">I’ve been called into service</a> to review <a href="https://github.com/joglekara/VlaPy">VlaPy, “1D-1V Vlasov-Poisson(-Fokker-Planck) Plasma Physics Simulation Tool”</a>. While I’m digging into that code, I thought I’d write something up about JOSS in general!</p>
<!-- TEASER_END -->
<p>JOSS, as a software-centric journal, is mostly managed via GitHub. Reviewers sign up <a href="https://joss.theoj.org/reviewer-signup.html">here</a> (which is a link I’d like to recommend that you follow!). It’s mostly meant to solve one issue:</p>
<section id="research-software-attribution" class="level2">
<h2 class="anchored" data-anchor-id="research-software-attribution">Research software attribution</h2>
<p>Acknowledgement and funding for developing and maintaining research software tends to be sparse. Remember the black hole image from last year? To quote <a href="https://twitter.com/amuellerml/status/1117455802598662144">Andreas Mueller on Twitter</a>:</p>
<center>
<blockquote class="twitter-tweet blockquote">
<p lang="en" dir="ltr">
Slightly ironic that in the same week <a href="https://twitter.com/NSF?ref_src=twsrc%5Etfw"><span class="citation" data-cites="NSF">@NSF</span></a> rejects a grant to fund the scipy ecosystem saying that working on it is not impactful enough and hiring developers to work on it is too expensive. Cc <a href="https://twitter.com/thisgreyspirit?ref_src=twsrc%5Etfw"><span class="citation" data-cites="thisgreyspirit">@thisgreyspirit</span></a> (Katie doesn't seem to be on Twitter?)
</p>
— Andreas Mueller (<span class="citation" data-cites="amuellerml">@amuellerml</span>) <a href="https://twitter.com/amuellerml/status/1117455802598662144?ref_src=twsrc%5Etfw">April 14, 2019</a>
</blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</center>
<p>To counteract that, scientific developers tend to chase exciting new results that accompany new releases of their software. However, that often leads to “more software” instead of “better and more stable software”.</p>
<p>As for attribution, citations are everything in the current (rather flawed, in my opinion - I’m not ready with a pull request just yet, though) system of evaluation of scientific work. Package authors tend to try to write books about their works that are then cited. This seems to have improved in the recent years, but I distinctly remember that most <code>__citation__</code> atributes for packages in the Pythonosphere were books a while ago. Getting software that “just works” and simplifies your life published, from what I’ve heard, can be difficult if not accompanied by a “novel” result.</p>
<p>JOSS is sort of <a href="https://www.arfon.org/announcing-the-journal-of-open-source-software">a hack on this system</a> - it allows for software to be thoroughly reviewed and appreciated for its own merits. Of course, it’s not a permanent solution; but I’m going to leave deliberating on another one for another time :)</p>


</section>

 ]]></description>
  <category>science</category>
  <category>open-science</category>
  <category>status</category>
  <guid>https://stanczakdominik.github.io/posts/first-joss-review.html</guid>
  <pubDate>Sat, 02 May 2020 17:55:00 GMT</pubDate>
</item>
<item>
  <title>Export YouTube’s Watch Later playlist</title>
  <link>https://stanczakdominik.github.io/posts/youtube-watch-later-export.html</link>
  <description><![CDATA[ 





<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Outdated by 2021-10-03
</div>
</div>
<div class="callout-body-container callout-body">
<p>As pointed out in the comments by LiadNeumann, YouTube no longer takes the <a href="https://www.youtube.com/playlist?list=WL&amp;disable_polymer=true"><code>&amp;disable_polymer=true</code></a> parameter for the URL, so this method no longer works. I’m leaving it up for posterity’s sake. If anyone has better ideas how to solve this, I’d be much obliged for a comment. 😉</p>
</div>
</div>
<p>YouTube is increasingly becoming a walled garden. One of the dark patterns I see in it is that the Watch Later playlist, which you may have gathered over what feels like a millenia (so many lectures, so little time...), cannot be exported - you can only add one video at a time to another playlist. That obviously doesn't scale. Here's a quick trick to solve that!</p>
<p>Take this URL:</p>
<pre><code>https://www.youtube.com/playlist?list=WL</code></pre>
<p>Append <span class="title-ref">&amp;disable_polymer=true</span> to it:</p>
<pre><code>https://www.youtube.com/playlist?list=WL&amp;disable_polymer=true</code></pre>
<p>And this should bring you to an older version of the website, where if you click the 3-dot "More" menu, you'll find an "Add all to..." button. This allows you to export your Watch Later playlist to another playlist, without the annoying limitations. Once you're there, you can use better software (<a href="https://github.com/TeamNewPipe/NewPipe">NewPipe</a>, for example, or <a href="https://webapps.stackexchange.com/questions/27589/how-do-i-export-my-youtube-playlists">another solution from the many available</a>) to store the playlist elsewhere. I did not investigate those, as I simply wanted to mirror my Watch Later playlist in NewPipe.</p>
<p>Sadly, the same method does not work for the Liked Videos page - which is why you should probably not trust YouTube with your data as much as you likely do now.</p>



 ]]></description>
  <category>youtube</category>
  <category>tech</category>
  <guid>https://stanczakdominik.github.io/posts/youtube-watch-later-export.html</guid>
  <pubDate>Mon, 17 Feb 2020 17:00:00 GMT</pubDate>
</item>
<item>
  <title>Better Numba calculation of inter-particle distance matrices</title>
  <link>https://stanczakdominik.github.io/posts/distance_matrix_numba.html</link>
  <description><![CDATA[ 





<p>Recently, I’ve been looking for efficient ways to compute a <a href="https://en.wikipedia.org/wiki/Distance_matrix">distance matrix</a> in Python. I’m deliberately trying to implement a naive n-body simulation so as to find optimized ways of calculating those, as practice. Let’s do that using Numba.</p>
<!-- TEASER_END -->
<p>As usual, we’re going to be using the standard Python scientific stack… and we’ll also use Numba, transitioning onto the GPU next week. Let’s get those imports prepped:</p>
<div id="cell-2" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> scipy, scipy.spatial</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numba</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb1-5">np.__version__, scipy.__version__, numba.__version__, sys.version</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> numpy.testing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> assert_allclose</span></code></pre></div>
</div>
<p>Let’s get ourselves some sample 3D position data, for twenty thousand particles:</p>
<div id="cell-4" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">N <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span>)</span>
<span id="cb2-2">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">743</span>)</span>
<span id="cb2-3">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.random(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb2-4">r</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>array([[0.83244056, 0.94442527, 0.57451672],
       [0.09049263, 0.08428888, 0.43300003],
       [0.29973189, 0.11463598, 0.27817412],
       ...,
       [0.49628111, 0.1462252 , 0.18381982],
       [0.80535628, 0.07900376, 0.19831322],
       [0.75236151, 0.02655101, 0.54791037]])</code></pre>
</div>
</div>
<section id="part-i-cpu-distance-matrix-calculations" class="level1">
<h1>Part I: CPU distance matrix calculations</h1>
<p>Let’s start out by following up on the <a href="https://jakevdp.github.io/blog/2013/06/15/numba-vs-cython-take-2/">2013 results of Jake Vanderplas</a>:</p>
<section id="direct-numpy-summation" class="level2">
<h2 class="anchored" data-anchor-id="direct-numpy-summation">Direct numpy summation</h2>
<p>This is the classic approach, but with a major flaw - it allocates a lot of temporary arrays in the meantime, and that takes a while.</p>
<div id="cell-6" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> pairwise_numpy(X):</span>
<span id="cb4-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Reproduced from https://jakevdp.github.io/blog/2013/06/15/numba-vs-cython-take-2/</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb4-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.sqrt(((X[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, :] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> X) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb4-6">pairwise_numpy_timing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o pairwise_numpy(r)</span>
<span id="cb4-7">pairwise_numpy_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pairwise_numpy(r)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>5.02 s ± 43.5 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)</code></pre>
</div>
</div>
<p>It’s nice to have it for comparison, though.</p>
</section>
<section id="direct-slow-python-loop" class="level2">
<h2 class="anchored" data-anchor-id="direct-slow-python-loop">Direct (slow) Python loop</h2>
<p>We’ll now switch over to doing things Numba-style. This means that we’ll use <code>math</code> instead of <code>numpy</code>, so that the <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7Bx%7D"> we’ll doing is explicitly a scalar operation.</p>
<div id="cell-8" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> scalar_distance(r, output):</span>
<span id="cb6-3">    N, M <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.shape</span>
<span id="cb6-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(N):</span>
<span id="cb6-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(N):</span>
<span id="cb6-6">            tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb6-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(M):</span>
<span id="cb6-8">                tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> (r[i, k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> r[j, k])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb6-9">            output[i,j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.sqrt(tmp)</span>
<span id="cb6-10">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((N, N), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span></code></pre></div>
</div>
<div id="cell-9" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># warning: LONG</span></span>
<span id="cb7-2">direct_summation_timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r1 scalar_distance(r, output)</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sanity check!</span></span>
<span id="cb7-5">assert_allclose(pairwise_numpy_result, output)</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"The direct summation implementation is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>direct_summation_timeit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>average <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> pairwise_numpy_timing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>average<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> slower than NumPy."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>4min 6s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)
The direct summation implementation is 49.11 slower than NumPy.</code></pre>
</div>
</div>
<p>And now, let’s simply wrap this in <code>numba.njit</code>.</p>
<p>Note that the below is equivalent to</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@numba.njit</span></span>
<span id="cb9-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> scalar_distance(...):</span>
<span id="cb9-3">    ...</span></code></pre></div>
<div id="cell-11" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">numba_jit_scalar_distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numba.njit(scalar_distance)</span>
<span id="cb10-2">numba_jit_timing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o numba_jit_scalar_distance(r, output)</span>
<span id="cb10-3"></span>
<span id="cb10-4">assert_allclose(pairwise_numpy_result, output)</span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Our Numba implementation is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pairwise_numpy_timing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>average<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>numba_jit_timing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>average<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> times faster than NumPy!"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>408 ms ± 16.1 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
Our Numba implementation is 12.31 times faster than NumPy!</code></pre>
</div>
</div>
<p>Not bad! But we can still get speedups by replacing <code>range</code> with <code>numba.prange</code>, which tells Numba that “yes, this loop is <strong>trivially</strong> parallelizable”. To do so we use the <code>parallel=True</code> flag to <code>njit</code>:</p>
</section>
<section id="optimal-numba-solution" class="level2">
<h2 class="anchored" data-anchor-id="optimal-numba-solution">Optimal numba solution</h2>
<div id="cell-13" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@numba.njit</span>(parallel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb12-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> numba_jit_scalar_distance_parallel(r, output):</span>
<span id="cb12-3">    N, M <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.shape</span>
<span id="cb12-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numba.prange(N):</span>
<span id="cb12-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numba.prange(N):</span>
<span id="cb12-6">            tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb12-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(M):</span>
<span id="cb12-8">                tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> (r[i, k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> r[j, k])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb12-9">            output[i,j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.sqrt(tmp)</span>
<span id="cb12-10"></span>
<span id="cb12-11">numba_jit_parallel_timing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o numba_jit_scalar_distance_parallel(r, output)</span>
<span id="cb12-12"></span>
<span id="cb12-13">assert_allclose(pairwise_numpy_result, output)</span>
<span id="cb12-14"></span>
<span id="cb12-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using `parallel=True` grants us a further </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>numba_jit_timing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>average<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>numba_jit_parallel_timing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>average<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">x speedup."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>105 ms ± 5.98 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
Using `parallel=True` grants us a further 3.90x speedup.</code></pre>
</div>
</div>
<p>Note that I’ve got four cores on this laptop, so this problem is truly trivially parallelilzable. This is nice because <code>numba.prange</code> is actually a no-op when not using it from within <code>numba</code>:</p>
<div id="cell-15" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> scalar_distance_prange(r, output):</span>
<span id="cb14-2">    N, M <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.shape</span>
<span id="cb14-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numba.prange(N):</span>
<span id="cb14-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numba.prange(N):</span>
<span id="cb14-5">            tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb14-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(M):</span>
<span id="cb14-7">                tmp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> (r[i, k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> r[j, k])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb14-8">            output[i,j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.sqrt(tmp)</span>
<span id="cb14-9"></span>
<span id="cb14-10">direct_summation_prange_timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r1 scalar_distance_prange(r, output)</span>
<span id="cb14-11">assert_allclose(pairwise_numpy_result, output)</span>
<span id="cb14-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>direct_summation_prange_timeit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>average<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.5f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">s vs </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>direct_summation_timeit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>average<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.5f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">s."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>4min 2s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)
242.71444s vs 246.70353s.</code></pre>
</div>
</div>
<p>It’s something you can just throw in “for free”, lets you debug stuff just as easily, and once you end up turning on <code>parallel = True</code>, it lets speed ups kick in.</p>
<p>However, suppose we wanted to have this run <em>really</em> fast. What we then could do is turn to the GPU. And this is exactly what we’ll be doing next week!</p>


</section>
</section>

 ]]></description>
  <category>numba</category>
  <category>simulation</category>
  <category>nbody</category>
  <category>python</category>
  <category>tech/N-body simulation</category>
  <guid>https://stanczakdominik.github.io/posts/distance_matrix_numba.html</guid>
  <pubDate>Thu, 25 Jul 2019 06:00:00 GMT</pubDate>
</item>
<item>
  <title>Simple Binder usage with Sphinx-Gallery through Jupytext</title>
  <link>https://stanczakdominik.github.io/posts/simple-binder-usage-with-sphinx-gallery-through-jupytext.html</link>
  <description><![CDATA[ 





<p>It's been a busy week for <a href="https://github.com/PlasmaPy/PlasmaPy/">PlasmaPy</a>. I recently found out about Binder support in <a href="https://sphinx-gallery.github.io/">sphinx-gallery</a>. The latter is a package that we use to turn python scripts with comments into Sphinx pages and Jupyter Notebooks. I figured adding that could be a nice fit for <a href="http://docs.plasmapy.org/en/stable/auto_examples/index.html">our existing example gallery</a> .</p>
<p>However, I quickly realized that the system in place is a bit unwieldy. Binder takes a link to an existing GitHub repository and executes <code>.ipynb</code> notebooks located there online. However, with sphinx-gallery, we don't have those notebooks in the repository - we have <code>.py</code> files with comments. <a href="https://sphinx-gallery.github.io/configuration.html#binder-links">The currently recommended way of setting this up with sphinx-gallery</a> is keeping your built documentation in <a href="https://github.com/sphinx-gallery/sphinx-gallery.github.io">another repository</a> and hosting it via something along the lines of GitHub Pages rather than <a href="https://readthedocs.org/">ReadTheDocs</a>, which we are currently using.</p>
<p><a href="https://github.com/sphinx-gallery/sphinx-gallery/pull/505/files">I added the results of this investigation to sphinx-gallery's docs</a>, but I didn't want to switch away from RTD, so I figured I'd go ahead and find another way. I think I've got something that works well enough now!</p>
<p>Trigger warning: later on during this post, there may be monkeypatching of sphinx_gallery internals. Beware.</p>
<section id="using-jupytext" class="level1">
<h1>Using Jupytext</h1>
<p><a href="https://github.com/mwouts/jupytext/">The Jupytext project</a> is kind of like <a href="https://github.com/jupyter/nbconvert">nbconvert</a>, but two-way. It lets you turn notebooks into scripts and vice versa. The interesting thing is that, <a href="https://jupytext.readthedocs.io/en/latest/formats.html#sphinx-gallery-scripts">as per Jupytext's documentation</a>, it is possible to let Binder's jupyter instance parse sphinx-gallery style <code>.py</code> files as jupyter notebooks. This was done in <a href="https://github.com/PlasmaPy/PlasmaPy/pull/656/files">PlasmaPy#656</a> . First, let's instruct the in-binder Jupyter instance to parse <code>.py</code> files in <code>.jupyter/jupyter_notebook_config.py</code> via blatant copy-paste:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">c.NotebookApp.contents_manager_class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jupytext.TextFileContentsManager"</span></span>
<span id="cb1-2">c.ContentsManager.preferred_jupytext_formats_read <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"py:sphinx"</span></span>
<span id="cb1-3">c.ContentsManager.sphinx_convert_rst2md <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
<p>And then let's also add a <code>binder/requirements.txt</code> file that lets Binder know what Python packages to download while building the repository's image. The version I had there was pretty shoddy, as CI/<code>setup.py</code>/packaging errors surfaced while I was tinkering with this. Long story short, something like this should do:</p>
<pre><code>-r ../requirements/automated-documentation-tests.txt
jupytext
.</code></pre>
<p>Where, in didactic order:</p>
<ul>
<li><code>jupytext</code> should be pretty self-explanatory,</li>
<li><code>.</code> is the repository's package itself (here, PlasmaPy), as accessed by <code>setup.py</code></li>
<li><code>-r ../requirements/automated-documentation-tests.txt</code> reads a pip requirements file specifying our documentation requirements. I think with a proper <code>extras_require</code> specified in <code>setup.py</code>, these two lines could be collapsed simply into <code>.[dev]</code> or some such. Note that <code>-r</code> takes a path relative to the file, thus the <code>../</code></li>
</ul>
<p>At this point all this really is is implementing what's mentioned in Jupytext's docs. The result is as follows:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://mybinder.org/v2/gh/PlasmaPy/PlasmaPy/master?filepath=plasmapy%2Fexamples"><img src="https://mybinder.org/badge_logo.svg" class="align-center img-fluid figure-img" alt="image"></a></p>
<figcaption>image</figcaption>
</figure>
</div>
<p>But you might notice an inconsistency in the Sphinx-rendered gallery itself: even if we were to <a href="https://sphinx-gallery.github.io/configuration.html#binder-links">configure docs to display Binder links</a> they will point to a path as imagined by the current implementation in Sphinx-Gallery, such as:</p>
<pre><code>https://gke.mybinder.org/v2/gh/PlasmaPy/PlasmaPy/master?filepath=plasmapy/examples/auto_examples/plot_physics.ipynb</code></pre>
<p>Note the spurious <code>auto_examples</code> directory supposedly including an <code>.ipynb</code> file. This obviously doesn't work for our use case, so we'd like to be able to change the generated links somehow...</p>
</section>
<section id="monkeypatching" class="level1">
<h1>Monkeypatching</h1>
<p>This (or rather, <a href="https://github.com/PlasmaPy/PlasmaPy/pull/658/files">PlasmaPy#658</a> ) is where it gets dirty. The solution developed in cooperation with Stuart Mumford (of SunPy fame, who contributed the idea which I implemented) is monkeypatching sphinx-gallery's link generation code. It's simple, yet effective.</p>
<p>Let's use this config for <code>sphinx-gallery</code>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">sphinx_gallery_conf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb4-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># path to your examples scripts</span></span>
<span id="cb4-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'examples_dirs'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../plasmapy/examples'</span>,</span>
<span id="cb4-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># path where to save gallery generated examples</span></span>
<span id="cb4-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'backreferences_dir'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gen_modules/backreferences'</span>,</span>
<span id="cb4-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gallery_dirs'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'auto_examples'</span>,</span>
<span id="cb4-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'binder'</span>: {</span>
<span id="cb4-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'org'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PlasmaPy'</span>,</span>
<span id="cb4-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'repo'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PlasmaPy'</span>,</span>
<span id="cb4-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'branch'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'master'</span>,</span>
<span id="cb4-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'binderhub_url'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://mybinder.org'</span>,</span>
<span id="cb4-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dependencies'</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../binder/requirements.txt'</span>],</span>
<span id="cb4-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'notebooks_dir'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plasmapy/examples'</span>,</span>
<span id="cb4-14">    }</span>
<span id="cb4-15">}</span></code></pre></div>
<p>and add this fragment of <code>sphinx_gallery.binder</code> code with a modification into Sphinx's <code>conf.py</code> file:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Patch sphinx_gallery.binder.gen_binder_rst so as to point to .py file in repository</span></span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sphinx_gallery.binder</span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> patched_gen_binder_rst(fpath, binder_conf, gallery_conf):</span>
<span id="cb5-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Generate the RST + link for the Binder badge.</span></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    ...</span></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb5-7">    binder_conf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sphinx_gallery.binder.check_binder_conf(binder_conf)</span>
<span id="cb5-8">    binder_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sphinx_gallery.binder.gen_binder_url(fpath, binder_conf, gallery_conf)</span>
<span id="cb5-9"></span>
<span id="cb5-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I added the line below:</span></span>
<span id="cb5-11">    binder_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binder_url.replace(gallery_conf[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gallery_dirs'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> os.path.sep, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>).replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ipynb"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"py"</span>)</span>
<span id="cb5-12"></span>
<span id="cb5-13">    rst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb5-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb5-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  .. container:: binder-badge</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb5-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    .. image:: https://mybinder.org/badge_logo.svg</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb5-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"      :target: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb5-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"      :width: 150 px</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(binder_url)</span>
<span id="cb5-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> rst</span>
<span id="cb5-20"></span>
<span id="cb5-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># And then we finish our monkeypatching misdeed by redirecting sphinx-gallery to use our function:</span></span>
<span id="cb5-22">sphinx_gallery.binder.gen_binder_rst <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> patched_gen_binder_rst</span></code></pre></div>
<p>The current gallery is located <a href="http://docs.plasmapy.org/en/latest/auto_examples/index.html">here</a>, and an example link is <a href="https://mybinder.org/v2/gh/PlasmaPy/PlasmaPy/master?filepath=plasmapy/examples/particle_stepper.py" class="uri">https://mybinder.org/v2/gh/PlasmaPy/PlasmaPy/master?filepath=plasmapy/examples/particle_stepper.py</a> - and you should instantly see it points to the right spot!</p>
<p>Obviously, it would be better to implement such link customization in sphinx-gallery itself somehow, but it's up to their maintainers to decide whether this kind of combo usage with Jupytext is in scope for their project. For now, the monkeypatch solution works decently. I'll try to update this post if that comes about.</p>
</section>
<section id="update---requirements" class="level1">
<h1>Update - requirements</h1>
<p><a href="https://github.com/PlasmaPy/PlasmaPy/pull/689">@jdkent on GitHub</a> suggests that if the above doesn't work for you, you should make sure the Sphinx version you're using is 2 or newer.</p>


</section>

 ]]></description>
  <category>python</category>
  <category>sphinx</category>
  <category>plasmapy</category>
  <category>jupyter</category>
  <guid>https://stanczakdominik.github.io/posts/simple-binder-usage-with-sphinx-gallery-through-jupytext.html</guid>
  <pubDate>Sat, 06 Jul 2019 14:00:00 GMT</pubDate>
</item>
<item>
  <title>Post mortem for my engineering thesis code, PythonPIC</title>
  <link>https://stanczakdominik.github.io/posts/post-mortem-for-my-engineering-thesis-code-pythonpic.html</link>
  <description><![CDATA[ 





<p>I’m giving a presentation on this less-than-glorious subject on Friday, so I figured, hey, it might be a nice time to write a summary of what <a href="https://github.com/StanczakDominik/PythonPIC">that old repository on my GitHub page</a> is. In a single video:</p>
<div class="video">
<iframe src="https://www.youtube-nocookie.com/embed/rE4-X-jNoFw" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</div>
<p>Admittedly, this post is going to be rather personal - this messy little code was basically my life for a few hundreds of hours.</p>
<!-- TEASER_END -->
<section id="the-motivation" class="level2">
<h2 class="anchored" data-anchor-id="the-motivation">The motivation</h2>
<p>At the time, I was quite enamored with Python, NumPy, the ideals of <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3886731/">open source scientific software</a> and literate computing. I had seen how most scientific software seems to be written in <a href="https://en.wikipedia.org/wiki/Fortran">uglier</a>, <a href="https://en.wikipedia.org/wiki/C%2B%2B">less maintainable</a> languages and thoroughly disliked the notion that We, the Scientific Community would have to keep struggling with those, <a href="https://youtu.be/kNdp0I8AG40?t=45"><em>no no no</em></a>.</p>
<p>So I figured, hey, I can probably do better. <em>I know NumPY! It’s basically writing FORTRAN without ever touching FORTRAN!</em></p>
<blockquote class="blockquote">
<p><em>narrator voice: <strong>It isn’t.</strong></em></p>
</blockquote>
<p>So I went to the amazing Sławomir Jabłoński of <a href="http://www.ifpilm.pl/en">IPPLM</a> (to whom, a shout out, for he is truly an amazing person without whom this work would have gone nowhere). I discussed the idea with him and he seemed to like it. He agreed to supervise me on this idea.</p>
<p>What happened next?</p>
</section>
<section id="the-breakdown" class="level2">
<h2 class="anchored" data-anchor-id="the-breakdown">The breakdown</h2>
<p>Well, stuff happened, not least important of which was procrastination on a scale I had never performed. One of my personal flaws is a tendency to isolate myself and work alone on projects that are better undertaken in groups. I basically started writing a framework, refactoring it endlessly, delaying work on the critical bugs like the actual physics of my simulation, running test cases… What I had thought would have been simple turned out not to be. Don’t get me wrong, I learned a metric ton of Python and numerics knowledge - but I wasn’t getting much closer, and I wasn’t reaching out for feedback that what I was doing was, pretty much, crap.</p>
<p>I <em>may</em> have had a <abbr title="narrator: It wasn't.">tiny</abbr> nervous breakdown then. Eventually I reached out again to IPPLM and mr. Jabłoński, who agreed the situation is pretty bad but didn’t think it worth giving up on. The code ended up working after many adventures:</p>
<pre class="git"><code>
|\
* | 207371b wat
| |\  
| * | 00b554c started writing diagnostics
| * | 3942c6e continue writing diagnostics, abandoning idea of multifunction simulation load'
| | * e726000 revert to old simulation init, energy calculation
| |/  
| *   ca0742a merged
| * 62fe945 energy still blows up
|/  
*   6e172d6 merged
...
* 5068dfb langmuir waves kinda sorta running?
...
* b9580ac Finish fixing tests
* 864d27a Turn recurrent deposition into deposition on a while loop
* 280d176 Start fixing Laser simulation
...
* a5c4623 Fix difficult to find bugs in longitudinal current deposition
...
* 080a226 what may amount to release</code></pre>
<p>and I was able to benchmark it nicely.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/images/speed_Python.svg" class="img-fluid figure-img"></p>
<figcaption>Python runtimes</figcaption>
</figure>
</div>
</section>
<section id="the-benchmarking" class="level2">
<h2 class="anchored" data-anchor-id="the-benchmarking">The benchmarking</h2>
<p>I then - only then, certainly a failure of foresight on my part - realized that I would need a comparable C/C++ code to benchmark my Python NumPy monstrosity against. That was not a happy thought.</p>
<p>But there was no way the low level drudgery could be avoided, so I went ahead, started learning <a href="http://eigen.tuxfamily.org/index.php?title=Main_Page">the Eigen3 linear algebra library that has many similarities to NumPy</a> - I needed something that in principle could work similarly, with mostly whole array based computations. The result of that is in <a href="https://github.com/StanczakDominik/CPIC">this repository</a>.</p>
<p>Admittedly, to this day I’m not even one hundred percent sure it does the same thing! The results seemed to be correct for the test cases I did run, but I’m not exactly sure I got all of the bugs. Most of the problems stem from the fact I used <code>numpy.bincount</code> for most of the current and charge deposition functionality (don’t do that, by the way, as that was the least efficient part of the code). That functionality is lacking in Eigen (or at the very least I was unable to find it), so I went ahead and implemented it by hand.</p>
<p>I then started benchmarking the two codes for identical initial conditions, and it turned out that -</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/images/speed_Python_C.svg" class="img-fluid figure-img"></p>
<figcaption>Python vs C</figcaption>
</figure>
</div>
<p>success! PythonPIC is just as fast as the compiled C version!</p>
<p>… until you compile the C code with <code>-O</code>, the simplest optimization flag:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/images/speed_Python_C_C-O.svg" class="img-fluid figure-img"></p>
<figcaption>Python vs any kind of optimized C</figcaption>
</figure>
</div>
<p>I didn’t bother checking <code>-O3</code>, though a friend was happy to remind me of its existence. I might thus be the <abbr title="narrator: He isn't.">proud</abbr> author of the cleanest (well, not the least clean) and least efficient particle-in-cell code on the planet. Gotta start somewhere, right?</p>
</section>
<section id="the-defense" class="level2">
<h2 class="anchored" data-anchor-id="the-defense">The defense</h2>
<p>There’s not much to say. I went ahead, printed out a few copies of the thesis, realized via review I had made mistakes in plots etc. and had to print them out again. I went ahead, took my final exam, didn’t get grilled too hard, got a random exam question about - I think, as it’s been a while - the Schroedinger equation, and poof, <a href="https://www.youtube.com/watch?v=rp8hvyjZWHs">trust me, I’m an engineer</a> of Applied Physics. I’m still not sure how that happened.</p>
<p>I took a break from PIC codes for a while afterwards. A snippet of PythonPIC later went into <a href="https://github.com/PlasmaPy/PlasmaPy/pull/54">PlasmaPy’s</a> particle stepper capabilities. I still have a thorough dislike for that code and think it could be optimized.</p>
<p>All in all, I’m not sure about Python for PICs. On the one hand, they’re pretty inevitably going to be slower than C, C++ for now. You could write the computationally intensive parts in Julia or something - that would probably work and I’ve been itching to try my hand at that recently - but by that logic, you could probably implement the whole thing in Julia anyway, because Python really isn’t giving you anything of value there - maybe besides analysis, but that’s done post-run anyway.</p>
<p>But on the other hand, not all PICs are HPiCs - and if you’re just studying plasma physics alongside, say, <a href="https://www.crcpress.com/Plasma-Physics-via-Computer-Simulation/Birdsall-Langdon/p/book/9780750310253">Birdsall and Langdon</a>, then you can probably live with having your code run a little slower than the sickest optimal C run time. I’ve been able to use my code (mostly before the break… remember the part where I was adding a ton of test cases?) to reproduce a bunch of their results and it’s worked out nicely.</p>
<p>I’d like to think PythonPIC has, thus, at least some value and use. It’s probably not too useful for high performance and research, but you need to funnel people into those somehow.</p>
</section>
<section id="the-lessons-learned" class="level1">
<h1>The lessons learned</h1>
<section id="focus-on-the-physics" class="level3">
<h3 class="anchored" data-anchor-id="focus-on-the-physics">Focus on the physics</h3>
<p>No matter how beautiful and readable your code is, if it doesn’t do what it’s supposed to be doing, it isn’t worth a dime.</p>
</section>
<section id="precrastinate" class="level3">
<h3 class="anchored" data-anchor-id="precrastinate">Precrastinate</h3>
<p>I’ve once heard a summary of estimating time for completing programming projects (unfortunately I haven’t been able to find the source):</p>
<blockquote class="blockquote">
<p>for any programming problem, make an estimate, double it, then increment the time unit to the next higher one.</p>
</blockquote>
<p>It’s worth starting your stuff early…</p>
</section>
<section id="plan-ahead-and-anticipate-issues" class="level3">
<h3 class="anchored" data-anchor-id="plan-ahead-and-anticipate-issues">Plan ahead and anticipate issues</h3>
<p>… this part tells you how early to start. Still, unexpected difficulties will inevitably happen - they’re part of the learning process. Accept them and leave yourself enough time to deal with them constructively.</p>
</section>
<section id="reach-out-and-talk-about-your-problems" class="level3">
<h3 class="anchored" data-anchor-id="reach-out-and-talk-about-your-problems">Reach out and talk about your problems</h3>
<p>This goes both for scientific programming and for mental health. I would have truly gotten nowhere if I hadn’t had help from amazing people for both of these.</p>
<hr>
<p>And… that’s about it! Phew. That’s a load off my chest, to be frank - the idea of writing this has haunted me for a while. Still, while the handling could have been better, <abbr title="narrator: He is.">I’m happy I wrote that little code.</abbr></p>


</section>
</section>

 ]]></description>
  <category>plasma</category>
  <category>particle-in-cell</category>
  <category>python</category>
  <category>simulation</category>
  <category>projects</category>
  <guid>https://stanczakdominik.github.io/posts/post-mortem-for-my-engineering-thesis-code-pythonpic.html</guid>
  <pubDate>Wed, 03 Apr 2019 19:15:00 GMT</pubDate>
</item>
<item>
  <title>On the recent “On the Boris solver in Particle-in-cell simulations” paper</title>
  <link>https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper.html</link>
  <description><![CDATA[ 





<p>I recently came across <a href="https://arxiv.org/abs/1809.04378">a pretty cool paper by Zenitani and Umeda named “On the Boris solver in particle-in-cell simulation”</a>. There are many splendid descriptions of the Boris solver on the Internet, so while I would rather not duplicate them, here’s a brief overview. In PIC simulations, the Boris solver (or pusher) is the usual algorithm of choice for moving and accelerating particles in given electric and magnetic fields.</p>
<p>You may wonder, since the equations of motion are ordinary differential equations, what’s wrong with using the usual Runge-Kutta 4 solver? As it turns out, that one has a pretty major flaw. It has great accuracy for short term calculations, but over time your particle’s motion will lose energy. This is a deal breaker for periodic motion, and simulations of, for example, plasma waves need to conserve that energy to provide accurate results.</p>
<p>Boris came up with his solver in the 1950’s, and in a single sentence: the algorithm splits the acceleration via electric field into two parts and sticks a rotation about the magnetic field between them. This turns out to conserve energy and will probably come up again on this blog as I read more about symplexicity. <!-- TEASER_END --></p>
<p>However, there’s a catch. There’s a single basic and dense textbook for particle simulation, called “Plasma Physics via Computer Simulation” by Birdsall and Langdon. It has been referenced in most PIC papers I’ve read. The Boris solver as described by this PIC bible involves a vector quantity (following the authors we’ll call this part of the <code>Boris-B</code> algorithm):</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bt%7D%20=%20%5Cfrac%7B%5Ctheta%7D%7B2%7D%20%5Cvec%7Bb%7D%20%5Ctag%7BBoris-B%7D"></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bb%7D"> being the unit vector in the direction of the magnetic field <img src="https://latex.codecogs.com/png.latex?%5Cvec%7BB%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Ctheta%20%5Csim%20dt%20%7C%5Cvec%7BB%7D%7C">. However, what Boris originally had in his derivation was (the <code>Boris-A</code> algorithm):</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bt%7D%20=%20%5Ctan%7B%5Cfrac%7B%5Ctheta%7D%7B2%7D%7D%20%5Cvec%7Bb%7D%20%5Ctag%7BBoris-A%7D"></p>
<p>And there’s a subtle difference there! Well, it’s subtle if you have <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Ctheta%7D%7B2%7D%20%3C%3C%201"> and quickly stops being subtle if you</p>
<ol type="1">
<li>have large <img src="https://latex.codecogs.com/png.latex?%5Ctheta">, which you probably shouldn’t as it’s proportional to the timestep</li>
<li>care about the performance of your pusher, which you probably should</li>
</ol>
<p>The version in B&amp;L’s book is a simplification (admittedly one that B&amp;L pointed out was being made) that incorporates a slight error in the calculation, but turns out to be a bit faster (tangents were quite expensive to calculate back then). For a very simple comparison of the two:</p>
<div id="cell-2" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> math <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tan</span>
<span id="cb1-2">theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb1-3"></span>
<span id="cb1-4">just_division <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>38 ns ± 2.43 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)</code></pre>
</div>
</div>
<div id="cell-3" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">tangent_division <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o tan(theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>81.2 ns ± 3.39 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)</code></pre>
</div>
</div>
<div id="cell-4" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">(tangent_division.average) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> just_division.average</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>2.138698576440618</code></pre>
</div>
</div>
<p>And that’s on a modern CPU with a modern <code>math</code> library in a modern language! At the time of writing of B&amp;L’s book, this was indeed something people found valuable to optimize out of their code.</p>
<p>What the authors of this paper did was take a few more steps of the calculation in the entire <code>Boris-A</code> algorithm and rewrite them into the <code>Boris-C</code> version, which turns out to be * just as accurate as <code>Boris-A</code> (see the plots in the paper for some really neat results) * “only 25% slower than the Boris-B solver” * “faster than the Boris-A solver” (where Boris-A was 46% slower than Boris-B)</p>
<p>This is neat, so I figured we could maybe do this in Python really quickly to show how it works.</p>
<p>Let’s start with the classic version. We’ll first include a couple of helpers:</p>
<div id="cell-6" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb7-2"></span>
<span id="cb7-3">charge <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-4">mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-5">lightspeed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-6"></span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> epsilon(electric_field, timestep):</span>
<span id="cb7-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> charge <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> timestep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>mass) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> electric_field </span>
<span id="cb7-10"></span>
<span id="cb7-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gamma_from_velocity(velocity):</span>
<span id="cb7-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>((velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> lightspeed)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb7-13"></span>
<span id="cb7-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gamma_from_u(u):</span>
<span id="cb7-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>((u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>lightspeed)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
</div>
<p>We can now proceed to implement the various versions of the Boris solver. I’m mostly just going through the paper and turning the equations into code, nothing crazy.<code>u_t_minus_half</code> is the velocity at time <img src="https://latex.codecogs.com/png.latex?t-%5CDelta%20t%20/2">, as the Boris solver takes particle velocities as <strong>shifted in time</strong>: with a timestep <img src="https://latex.codecogs.com/png.latex?%5CDelta%20t">, you get positions at <img src="https://latex.codecogs.com/png.latex?t%20=%200,%20%5CDelta%20t,%202%20%5CDelta%20t%20...">, while your velocities are defined at times <img src="https://latex.codecogs.com/png.latex?t%20=%20-%5CDelta%20t%20/%202,%20+%20%5CDelta%20t%20/%202,%203%20%5CDelta%20t%20/%202..."></p>
<div id="cell-8" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> BorisA(position, u_t_minus_half, electric_field, magnetic_field, timestep):</span>
<span id="cb8-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Equations 3, 6, 7a, 8, 9, 5</span></span>
<span id="cb8-3">    uminus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u_t_minus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> epsilon(electric_field, timestep)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 3</span></span>
<span id="cb8-4">    magfield_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(magnetic_field)</span>
<span id="cb8-5">    theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> charge <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> timestep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> gamma_from_u(uminus) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> magfield_norm  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 6</span></span>
<span id="cb8-6">        </span>
<span id="cb8-7">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> magnetic_field <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> magfield_norm</span>
<span id="cb8-8">    </span>
<span id="cb8-9">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.tan(theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 7a</span></span>
<span id="cb8-10">    </span>
<span id="cb8-11">    uprime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uminus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.cross(uminus, t)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 8</span></span>
<span id="cb8-12">    uplus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uminus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>(t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.cross(uprime, t)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 9</span></span>
<span id="cb8-13">    u_t_plus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uplus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> epsilon(electric_field, timestep) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 5</span></span>
<span id="cb8-14">    new_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u_t_plus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> gamma_from_u(u_t_plus_half) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> timestep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> position <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 1</span></span>
<span id="cb8-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> new_position, u_t_plus_half </span>
<span id="cb8-16"></span>
<span id="cb8-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> BorisB(position, u_t_minus_half, electric_field, magnetic_field, timestep):</span>
<span id="cb8-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3, 7b, 8, 9, 5</span></span>
<span id="cb8-19">    uminus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u_t_minus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> epsilon(electric_field, timestep)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 3</span></span>
<span id="cb8-20">    </span>
<span id="cb8-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 7a</span></span>
<span id="cb8-22">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> charge <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> timestep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> gamma_from_u(uminus)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> magnetic_field</span>
<span id="cb8-23">    </span>
<span id="cb8-24">    uprime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uminus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.cross(uminus, t)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 8</span></span>
<span id="cb8-25">    uplus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uminus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>(t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.cross(uprime, t)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 9</span></span>
<span id="cb8-26">    u_t_plus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uplus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> epsilon(electric_field, timestep) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 5</span></span>
<span id="cb8-27">    new_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u_t_plus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> gamma_from_u(u_t_plus_half) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> timestep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> position <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 1</span></span>
<span id="cb8-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> new_position, u_t_plus_half </span>
<span id="cb8-29">    </span>
<span id="cb8-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> BorisC(position, u_t_minus_half, electric_field, magnetic_field, timestep):</span>
<span id="cb8-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3, 6, 11, 12, 5</span></span>
<span id="cb8-32">    uminus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u_t_minus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> epsilon(electric_field, timestep)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 3</span></span>
<span id="cb8-33">    magfield_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(magnetic_field)</span>
<span id="cb8-34">    theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> charge <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> timestep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> gamma_from_u(uminus) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> magfield_norm  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 6</span></span>
<span id="cb8-35">    </span>
<span id="cb8-36">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> magnetic_field <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> magfield_norm</span>
<span id="cb8-37">    </span>
<span id="cb8-38">    u_parallel_minus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.dot(uminus, b) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 11</span></span>
<span id="cb8-39">    uplus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u_parallel_minus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (uminus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> u_parallel_minus) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.cos(theta) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.cross(uminus, b) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.sin(theta) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 12</span></span>
<span id="cb8-40">    u_t_plus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uplus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> epsilon(electric_field, timestep) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 5</span></span>
<span id="cb8-41">    new_position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u_t_plus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> gamma_from_u(u_t_plus_half) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> timestep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> position <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eq. 1</span></span>
<span id="cb8-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> new_position, u_t_plus_half </span></code></pre></div>
</div>
<p>We can now start implementing the authors’ test cases as seen in the paper. We’ll first define a helper plotting function:</p>
<div id="cell-10" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot(r, v, trajectory_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".:"</span>, timeseries_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".--"</span>):</span>
<span id="cb9-2">    x, y, z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.T</span>
<span id="cb9-3">    fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb9-4">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(x, timeseries_format, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>)</span>
<span id="cb9-5">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(y, timeseries_format, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>)</span>
<span id="cb9-6">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(z, timeseries_format, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span>)</span>
<span id="cb9-7">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Iteration"</span>)</span>
<span id="cb9-8">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].legend(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'best'</span>)</span>
<span id="cb9-9">    </span>
<span id="cb9-10">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(x, y, trajectory_format)</span>
<span id="cb9-11">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>)</span>
<span id="cb9-12">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>)</span>
<span id="cb9-13">    </span>
<span id="cb9-14">    vx, vy, vz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v.T</span>
<span id="cb9-15">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(vx, timeseries_format, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vx"</span>)</span>
<span id="cb9-16">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(vy, timeseries_format, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vy"</span>)</span>
<span id="cb9-17">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(vz, timeseries_format, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vz"</span>)</span>
<span id="cb9-18">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].legend(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'best'</span>)</span>
<span id="cb9-19">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Iteration"</span>)</span>
<span id="cb9-20">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Velocity"</span>)</span>
<span id="cb9-21">                      </span>
<span id="cb9-22">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(vx, vy, trajectory_format)</span>
<span id="cb9-23">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X Velocity"</span>)</span>
<span id="cb9-24">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y Velocity"</span>)</span>
<span id="cb9-25">    plt.tight_layout()</span>
<span id="cb9-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> r, v</span></code></pre></div>
</div>
<p>And now we can start to implement the first test case:</p>
<section id="movement-in-constant-crossed-electric-and-magnetic-fields" class="level1">
<h1>Movement in constant crossed electric and magnetic fields</h1>
<div id="cell-12" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> drift(pusher, E<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb10-2">    electric_field <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([E, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb10-3">    magnetic_field <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, B])</span>
<span id="cb10-4">    </span>
<span id="cb10-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initial conditions</span></span>
<span id="cb10-6">    u_t_minus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb10-7">    position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb10-8">    timestep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb10-9">    </span>
<span id="cb10-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I'm taking this a bit longer than the authors, so that the plots look nicer</span></span>
<span id="cb10-11">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>np.pi, timestep) </span>
<span id="cb10-12">    </span>
<span id="cb10-13">    positions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb10-14">    velocities <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb10-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> t:</span>
<span id="cb10-16">        positions.append(position)</span>
<span id="cb10-17">        velocities.append(u_t_minus_half)</span>
<span id="cb10-18">        position, u_t_minus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pusher(position, u_t_minus_half, electric_field, magnetic_field, timestep)</span>
<span id="cb10-19"></span>
<span id="cb10-20">    </span>
<span id="cb10-21">    r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(positions)</span>
<span id="cb10-22">    v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(velocities)</span>
<span id="cb10-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> r, v</span>
<span id="cb10-24"></span>
<span id="cb10-25">plot(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>drift(BorisA, E<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper_files/figure-html/cell-8-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>That looks reasonable.</p>
<div id="cell-14" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">plot(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>drift(BorisB, E<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper_files/figure-html/cell-9-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-15" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">plot(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>drift(BorisC, E<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper_files/figure-html/cell-10-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Pretty indistinguishable from the BorisA case! In fact, that’s what the authors claim and what we can check numerically:</p>
<div id="cell-17" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name, array_A, array_B, array_C <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"position"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"velocity"</span>], drift(BorisA), drift(BorisB), drift(BorisC)):</span>
<span id="cb13-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"BorisA and BorisC </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(array_A, array_C, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-20</span>, rtol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-15</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DO NOT '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">agree on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> for rotation."</span>)</span>
<span id="cb13-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"BorisB and BorisC </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(array_B, array_C, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-20</span>, rtol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-15</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DO NOT '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">agree on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> for rotation."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>BorisA and BorisC agree on position for rotation.
BorisB and BorisC DO NOT agree on position for rotation.
BorisA and BorisC agree on velocity for rotation.
BorisB and BorisC DO NOT agree on velocity for rotation.</code></pre>
</div>
</div>
<p>I went through the different cases presented for this part in the paper, and they seem to agree as well. Let’s reproduce another example, the <img src="https://latex.codecogs.com/png.latex?%5Cvec%7BE%7D%20%5Ctimes%20%5Cvec%7BB%7D"> drift. I won’t show the BorisB plot here, as it doesn’t visually differ, though the difference is there:</p>
<div id="cell-19" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">borisC_drift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>drift(BorisC, E<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb15-2">borisB_drift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> drift(BorisB, E<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-3">borisA_drift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> drift(BorisA, E<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name, array_A, array_B, array_C <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"position"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"velocity"</span>], borisA_drift, borisB_drift, borisC_drift):</span>
<span id="cb15-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"BorisA and BorisC </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(array_A, array_C, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-20</span>, rtol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-15</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DO NOT '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">agree on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> on the ExB drift."</span>)</span>
<span id="cb15-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"BorisB and BorisC </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(array_B, array_C, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-20</span>, rtol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-15</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DO NOT '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">agree on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> on the ExB drift."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>BorisA and BorisC agree on position on the ExB drift.
BorisB and BorisC DO NOT agree on position on the ExB drift.
BorisA and BorisC agree on velocity on the ExB drift.
BorisB and BorisC DO NOT agree on velocity on the ExB drift.</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper_files/figure-html/cell-12-output-2.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="long-term-stability-tests" class="level1">
<h1>Long term stability tests</h1>
<p>The authors define this as a long time run in the following fields:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cphi%20=%20%5Cfrac%7B0.01%7D%7B%5Csqrt%7Bx%5E2%20+%20y%5E2)%7D%7D%20"> <img src="https://latex.codecogs.com/png.latex?%20%5Cvec%7BB%7D%20=%20%5Csqrt%7Bx%5E2%20+%20y%5E2%7D%20"> with <img src="https://latex.codecogs.com/png.latex?%5Cvec%7BE%7D%20=%20-%5Cnabla%20%5Cphi"> as usual. Let’s just calculate the derivative with SymPy really quickly here:</p>
<div id="cell-21" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sympy.abc <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> x, y</span>
<span id="cb17-2">phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb17-3">phi</span>
<span id="cb17-4"></span>
<span id="cb17-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sympy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> lambdify</span>
<span id="cb17-6"></span>
<span id="cb17-7">Ex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>phi.diff(x)</span>
<span id="cb17-8">Ey <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>phi.diff(y)</span>
<span id="cb17-9">Ex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lambdify((x, y), Ex)</span>
<span id="cb17-10">Ey <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lambdify((x, y), Ey)</span>
<span id="cb17-11"></span>
<span id="cb17-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> stability(pusher, time_range<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8e2</span>):</span>
<span id="cb17-13">    u_t_minus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb17-14">    position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb17-15">    timestep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb17-16">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, time_range, timestep)    </span>
<span id="cb17-17">    </span>
<span id="cb17-18">    positions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb17-19">    velocities <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb17-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> t:</span>
<span id="cb17-21">        x, y, z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> position</span>
<span id="cb17-22">        magnetic_field <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, np.sqrt(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)])</span>
<span id="cb17-23">        electric_field <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([Ex(x, y), Ey(x, y), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb17-24">        positions.append(position)</span>
<span id="cb17-25">        velocities.append(u_t_minus_half)</span>
<span id="cb17-26">        position, u_t_minus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pusher(position, u_t_minus_half, electric_field, magnetic_field, timestep)</span>
<span id="cb17-27">    </span>
<span id="cb17-28">    r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(positions)</span>
<span id="cb17-29">    v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(velocities)</span>
<span id="cb17-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> r, v</span>
<span id="cb17-31">   </span>
<span id="cb17-32"></span>
<span id="cb17-33">plot(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>stability(BorisA), trajectory_format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper_files/figure-html/cell-13-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-22" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">plot(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>stability(BorisC), trajectory_format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper_files/figure-html/cell-14-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-23" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">plot(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>stability(BorisB), trajectory_format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper_files/figure-html/cell-15-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Note how the inner side of the velocity space trajectory becomes circular for the BorisB case and keeps making a neat pattern in the BorisA and BorisC cases!</p>
<div id="cell-25" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">rtol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-9</span></span>
<span id="cb20-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name, array_A, array_B, array_C <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"position"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"velocity"</span>], stability(BorisA), stability(BorisB), stability(BorisC)):</span>
<span id="cb20-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"BorisA and BorisC </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(array_A, array_C, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-20</span>, rtol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rtol) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DO NOT '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">agree on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> for long term stability for relative tolerance </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rtol<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb20-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"BorisB and BorisC </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(array_B, array_C, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-20</span>, rtol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rtol) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DO NOT '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">agree on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> for long term stability for relative tolerance </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rtol<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>BorisA and BorisC agree on position for long term stability for relative tolerance 1e-09.
BorisB and BorisC DO NOT agree on position for long term stability for relative tolerance 1e-09.
BorisA and BorisC agree on velocity for long term stability for relative tolerance 1e-09.
BorisB and BorisC DO NOT agree on velocity for long term stability for relative tolerance 1e-09.</code></pre>
</div>
</div>
<p>Do note that there does seem to be some long term error creeping in, as I had to lower <code>rtol</code>:</p>
<div id="cell-27" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">rtol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-10</span></span>
<span id="cb22-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name, array_A, array_B, array_C <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"position"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"velocity"</span>], stability(BorisA), stability(BorisB), stability(BorisC)):</span>
<span id="cb22-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"BorisA and BorisC </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(array_A, array_C, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-20</span>, rtol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rtol) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DO NOT '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">agree on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> for long term stability for relative tolerance </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rtol<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb22-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"BorisB and BorisC </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(array_B, array_C, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-20</span>, rtol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rtol) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DO NOT '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">agree on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> for long term stability for relative tolerance </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rtol<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>BorisA and BorisC agree on position for long term stability for relative tolerance 1e-10.
BorisB and BorisC DO NOT agree on position for long term stability for relative tolerance 1e-10.
BorisA and BorisC DO NOT agree on velocity for long term stability for relative tolerance 1e-10.
BorisB and BorisC DO NOT agree on velocity for long term stability for relative tolerance 1e-10.</code></pre>
</div>
</div>
<div id="cell-28" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">rtol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-15</span></span>
<span id="cb24-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name, array_A, array_B, array_C <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"position"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"velocity"</span>], stability(BorisA), stability(BorisB), stability(BorisC)):</span>
<span id="cb24-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"BorisA and BorisC </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(array_A, array_C, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-20</span>, rtol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rtol) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DO NOT '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">agree on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> for long term stability for relative tolerance </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rtol<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb24-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"BorisB and BorisC </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(array_B, array_C, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-20</span>, rtol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rtol) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DO NOT '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">agree on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> for long term stability for relative tolerance </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rtol<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>BorisA and BorisC DO NOT agree on position for long term stability for relative tolerance 1e-15.
BorisB and BorisC DO NOT agree on position for long term stability for relative tolerance 1e-15.
BorisA and BorisC DO NOT agree on velocity for long term stability for relative tolerance 1e-15.
BorisB and BorisC DO NOT agree on velocity for long term stability for relative tolerance 1e-15.</code></pre>
</div>
</div>
<p>Still, the results look all right, especially if we were to overlay the trajectories. Let’s calculate a bunch of long-time trajectories (like the authors do) and make a quick adjustment to the plotting function:</p>
<div id="cell-30" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">borisA_stability <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stability(BorisA, time_range<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2e5</span>)</span>
<span id="cb26-2">borisB_stability <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stability(BorisB, time_range<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2e5</span>)</span>
<span id="cb26-3">borisC_stability <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stability(BorisC, time_range<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2e5</span>)</span>
<span id="cb26-4"></span>
<span id="cb26-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_shared(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tuples, r_format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>, v_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, start_at):</span>
<span id="cb26-6">    fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(ncols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>))</span>
<span id="cb26-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> r, v <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tuples:</span>
<span id="cb26-8">        x, y, z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(start_at):].T</span>
<span id="cb26-9">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x-y position trajectory"</span>)</span>
<span id="cb26-10">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(x, y, r_format, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>alpha)</span>
<span id="cb26-11">        vx, vy, vz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(start_at):].T</span>
<span id="cb26-12">        </span>
<span id="cb26-13">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x-y velocity trajectory"</span>)</span>
<span id="cb26-14">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(vx, vy, v_format, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>alpha)</span>
<span id="cb26-15">    plt.tight_layout()</span></code></pre></div>
</div>
<div id="cell-31" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">plot_shared(borisA_stability,</span>
<span id="cb27-2">            borisC_stability,</span>
<span id="cb27-3">            r_format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,</span>
<span id="cb27-4">            v_format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,</span>
<span id="cb27-5">            alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>,</span>
<span id="cb27-6">            start_at <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(borisA_stability[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span></span>
<span id="cb27-7">           )</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper_files/figure-html/cell-20-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-32" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">plot_shared(borisB_stability,</span>
<span id="cb28-2">            borisC_stability,</span>
<span id="cb28-3">            r_format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,</span>
<span id="cb28-4">            v_format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>,</span>
<span id="cb28-5">            alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>,</span>
<span id="cb28-6">            start_at <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(borisA_stability[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span></span>
<span id="cb28-7">           )</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper_files/figure-html/cell-21-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="benchmark" class="level1">
<h1>Benchmark</h1>
<p>And to finalize, let’s benchmark the results, to see if BorisC is indeed faster than BorisA:</p>
<div id="cell-34" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">electric_field <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb29-2">magnetic_field <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb29-3"></span>
<span id="cb29-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initial conditions</span></span>
<span id="cb29-5">u_t_minus_half <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb29-6">position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb29-7">timestep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb29-8"></span>
<span id="cb29-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit BorisA(position, u_t_minus_half, electric_field, magnetic_field, timestep)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>101 µs ± 1.29 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each)</code></pre>
</div>
</div>
<div id="cell-35" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit BorisB(position, u_t_minus_half, electric_field, magnetic_field, timestep)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>89.9 µs ± 2.03 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each)</code></pre>
</div>
</div>
<div id="cell-36" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit BorisC(position, u_t_minus_half, electric_field, magnetic_field, timestep)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>71.8 µs ± 2.3 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each)</code></pre>
</div>
</div>
<p>… and this clearly points to some inefficiency in my <code>BorisB</code> implementation. BorisC does seem to beat BorisA, though, so I guess we didn’t manage to falsify the result!</p>


</section>

 ]]></description>
  <category>plasma</category>
  <category>paper</category>
  <category>simulation</category>
  <category>particle-in-cell</category>
  <category>python</category>
  <category>featured</category>
  <guid>https://stanczakdominik.github.io/posts/on-the-recent-on-the-boris-solver-in-particle-in-cell-simulations-paper.html</guid>
  <pubDate>Wed, 27 Mar 2019 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Particle in Cell methods</title>
  <link>https://stanczakdominik.github.io/posts/particle-in-cell-methods.html</link>
  <description><![CDATA[ 





<p>I think it might finally be about time to do some plasma physics discussion on this blog, stay true to the name and so on…</p>
<p>Basically the only actual “scientific” work I have actually done with plasmas up until now is writing a PIC simulation, PIC standing for Particle-in-Cell. I thought I would take this opportunity to explain in my own words what the concept is - I think it’s a clever one.</p>
<p>There are many reasons why you might want to simulate a plasma. Simulations are often way cheaper than making a tokamak and causing the plasma to develop turbulence, or sending out a probe to watch check solar flares for traces of magnetic reconnection. There’s also the case of needing simulations to understand and explain your experimental results. For now, however, let’s just assume you have a burning desire to make a few pretty plots and animations <a href="https://www.youtube.com/watch?v=Gj9mwAww3TM">like these</a> using data that you don’t have simple access to via experiment.</p>
<center>
<iframe width="560" height="315" src="https://www.youtube.com/embed/Gj9mwAww3TM" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</center>
<section id="plasma-simulation-in-general" class="level1">
<h1>Plasma simulation in general</h1>
<p>Plasmas are, in general, difficult to simulate. Many of the interesting processes in plasmas that you would like to simulate occur far from equilibrium, both spatial and thermal. For example, you’d like to simulate interactions between a plasma and a laser pulse (this is, in fact, <a href="https://github.com/StanczakDominik/PythonPIC">what I did for my engineering thesis</a>). This is a massively non-equilibrium process. This mostly rules out fluid simulations such as two-fluid and magnetohydrodynamics, which are based on averaging the <a href="https://en.wikipedia.org/wiki/Vlasov_equation">Vlasov equation</a> over all possible velocities. You could, in theory, use the Vlasov equation directly - but that’s a pretty darn high dimensional problem to be solving a PDE on (though something I most certainly want to try my hand at, one of these days!).</p>
<p>Suppose you want to take another approach. Maybe you like your Newtonian, old fashioned dynamical particle trajectory ODEs, you’ve dabbled in some N-body simulations, maybe you’ve done a bit of molecular dynamics. You could imagine putting a bunch of charged particles into a simulation, calculating forces between those directly and letting them evolve over time.</p>
<p>Unfortunately, there is a major flaw in that plan. You’ve got long range (Coulomb) <img src="https://latex.codecogs.com/png.latex?r%5E%7B-2%7D"> interactions between huge numbers of particles, so you cannot use the neat trick common in molecular dynamics of only including a few neighbor particles in your simulation. This means your simulation will scale as full <img src="https://latex.codecogs.com/png.latex?O(N%5E2)"> in the number of particles if you do that <a href="https://journals.aps.org/pre/abstract/10.1103/PhysRevE.98.033307">(though there have been attempts at doing that recently)</a>. I guess you could also try <a href="https://www.sciencedirect.com/science/article/pii/0010465594902275">a Barnes-Hut treecode of some sort, and that also appears to have been done</a> - that doesn’t seem like it’s caught on, though, whatever the reason.</p>
<p>We’ve now set the stage and can move on to the main attraction…</p>
</section>
<section id="the-particle-in-cell-method" class="level1">
<h1>The particle in cell method</h1>
<p>The logic for a PIC is as follows, starting from the simple molecular dynamics or N-body framework:</p>
<ol type="1">
<li><p>If we were to know the force on each particle for every time step, we could <strong>push</strong> them - update their velocities and positions as usual, in <img src="https://latex.codecogs.com/png.latex?O(N)"> steps. Each particle is assumed independent of others.</p></li>
<li><p>It’s hard to calculate the forces directly in <img src="https://latex.codecogs.com/png.latex?O(N%5E2)"> steps. On the other hand, It’s relatively easier to solve a PDE for the electromagnetic field given a charge and current distribution. The particles we’re moving are charged, so we can do the following translation:</p>
<ul>
<li>Particle positions <img src="https://latex.codecogs.com/png.latex?%5Cimplies"> charge distribution</li>
<li>Particle positions and velocities <img src="https://latex.codecogs.com/png.latex?%5Cimplies"> current distribution</li>
</ul>
<p>This means we could <strong>deposit</strong> the particles onto a grid or mesh by some kind of interpolation. We can also set the grid size so that many particles go into a single grid cell: this implies that the number of grid cells is much lower than our particle count. That, in turn, fits our assumptions for plasmas<sup>1</sup>. A picture is worth a thousand words, so here’s a very basic example of a particle’s charge with a linear (triangular, and thus, centered on the middle) distribution being split between three cells.</p>
<center>
<p><img src="https://stanczakdominik.github.io/images/charge-deposition.svg" height="420" alt="Example of charge deposition"></p>
</center></li>
<li><p>Once we have the charge and current distribution on our grid, we can use those quantities to <strong>solve</strong> Maxwell’s equations for the electromagnetic field. You could, for example, use a spectral method or a relaxation algorithm, like conjugate gradients.</p></li>
<li><p>Once we know the fields at the grid cell locations, we can <strong>gather</strong> the field from those to the particle locations. Remember step 1, where we wished for forces - readily available given fields - at particle locations? Well, here we go, wish granted!</p></li>
<li><p><code>goto 1</code></p></li>
</ol>
<p>And that’s it, the particle-in-cell method in a nutshell. Of course, logically it makes more sense to start from 2. (as you would usually start your simulation with a set of initial conditions for the particle positions, velocities and maybe external fields), but to me it’s cleaner narratively to think of the algorithm in this order.</p>
<section id="the-advantages" class="level2">
<h2 class="anchored" data-anchor-id="the-advantages">The advantages</h2>
<ol type="1">
<li>It’s close to fundamental physics and thus understandable! You get a full picture of what each of the particles does, how the fields behave, while making very few assumptions.</li>
<li>It’s lightning fast! The <img src="https://latex.codecogs.com/png.latex?O(N%5E2)"> force calculation is reduced to the complexity of your three replacement steps. While you can expect deposition and gathering to be roughly <img src="https://latex.codecogs.com/png.latex?O(Nm)"> (<img src="https://latex.codecogs.com/png.latex?m"> being the number of cells), <img src="https://latex.codecogs.com/png.latex?N"> is much larger than <img src="https://latex.codecogs.com/png.latex?m">, and the field solver is going to scale independently of <img src="https://latex.codecogs.com/png.latex?N"> - so that’s still a massive gain over direct summation.</li>
<li>It’s easy to parallelize! Each particle is essentially independent for the pushing step (as they only interact with each other via fields), so those movements are trivially parallel. Grid operations can also be done in parallel (though admittedly I haven’t looked into that much, yet - I fully intend to do so).</li>
</ol>
<p>And of course, no description of a simulation method is complete without…</p>
</section>
<section id="the-disadvantages" class="level2">
<h2 class="anchored" data-anchor-id="the-disadvantages">The disadvantages</h2>
<ol type="1">
<li>The method is mostly explicit, so that limits your time step and grid size quite a lot. Otherwise, you get spurious instabilities.</li>
<li>Statistical noise makes life a pain when you’re working on PIC simulations, precisely because you’re modeling your large numbers of real particles with fewer virtual discrete ones. The trick seems to be increasing the particle numbers, but <a href="https://en.wikipedia.org/wiki/Particle-in-cell#Technical_aspects">Wikipedia claims</a> that this source of error is more figured out for traditional grid methods. In a way, this also means PICs are a prime target for GPUs, as exhibited by <a href="https://picongpu.readthedocs.io/en/0.4.3/index.html">PIConGPU</a>.</li>
</ol>
<p>Still, PICs are used in many awesome applications, such as plasma turbulence research, and their parallelizability means they’re only going to get more important in the coming exascale computing era.</p>
<p>I’ll be writing a few follow-up posts going over particular aspects of PIC codes - tricks I’ve picked up along the way, etc. Stay tuned!</p>
<section id="references" class="level3">
<h3 class="anchored" data-anchor-id="references">References</h3>
<ul>
<li><a href="https://www.youtube.com/watch?v=Gj9mwAww3TM">Relativistic kinetic turbulence video</a> by Joonas Nättilä, using the <a href="https://github.com/natj/plasmabox">plasmabox code</a>.</li>
<li><a href="https://github.com/StanczakDominik/PythonPIC">PythonPIC</a>, my less-than-amazing engineering thesis code.</li>
<li><a href="https://github.comnatj/plasmabox">Vlasov Equation - Wikipedia</a></li>
<li><a href="https://journals.aps.org/pre/abstract/10.1103/PhysRevE.98.033307">Plasma simulation via molecular dynamics example</a>.</li>
<li><a href="https://www.sciencedirect.com/science/article/pii/0010465594902275">Barnes-Hut plasma simulation example</a></li>
<li><a href="https://en.wikipedia.org/wiki/Particle-in-cell">Particle in Cell applications -Wikipedia</a></li>
<li><a href="https://www.particleincell.com/2016/cuda-pic/">GPU PIC</a></li>
<li><a href="https://picongpu.readthedocs.io/en/0.4.3/index.html">PIConGPU</a></li>
</ul>


</section>
</section>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>If you want to learn more about those, I don’t feel like I can give this subject justice better than chapter 1-1 of Birdsall and Langdon’s seminal <em>Plasma Physics via Computer Simulation</em> text.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>plasma</category>
  <category>particle-in-cell</category>
  <category>popular science</category>
  <category>science</category>
  <category>featured</category>
  <guid>https://stanczakdominik.github.io/posts/particle-in-cell-methods.html</guid>
  <pubDate>Tue, 19 Mar 2019 09:00:00 GMT</pubDate>
</item>
<item>
  <title>First dive into Julia</title>
  <link>https://stanczakdominik.github.io/posts/first-dive-julia.html</link>
  <description><![CDATA[ 





<p>I’m currently sitting in at a tutorial on the basics of Julia and parallel processing therein by <a href="http://bogumilkaminski.pl/dydaktyka/">Bogumił Kamiński</a>. This is actually my first dive into Julia, so I thought I would write it down on-the-go here!</p>
<!-- TEASER_END -->
<p>Let’s jump right into it:</p>
<div id="cell-2" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">R <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>10000×10000 Array{Float64,2}:
 -0.324424   -0.565317    0.74943    …  -0.518865    -0.0841272   0.935276 
  2.7421      0.127783   -0.406756       1.69075      1.58605     0.302112 
  2.00937    -0.36474    -1.6031         2.46846     -0.319774   -0.362626 
  1.0957     -0.328512    0.0765665      0.551588    -0.63376    -0.642072 
 -1.5761      0.0990041   0.649661       0.123745     1.53702     0.748066 
  0.0294794   0.841421    0.935812   …  -0.124979    -0.0319694  -0.308331 
  2.4428     -0.0981946   2.16323       -1.74004     -0.838027   -0.562755 
 -0.362584   -0.342403    1.11269       -1.99102      2.13044     1.05996  
 -0.85741     0.224304    0.89256       -0.357627    -0.25959     0.271416 
  1.02282    -0.470008    1.75296        1.34871     -0.16343     0.194525 
 -0.357741    0.252059   -1.02996    …  -0.125655    -1.20237     0.0220102
  0.793983    0.334861   -0.628246      -0.768169     1.08063    -0.870663 
 -0.111529   -0.557087    0.714131      -0.0785655    0.577348   -0.659775 
  ⋮                                  ⋱                                     
  0.454754    0.905449   -1.04019       -2.14169     -0.830821    0.363394 
  0.165472   -0.099097    1.58675       -0.314269    -0.500922   -2.24592  
 -0.74685     0.854795   -0.606661   …   0.390252    -1.45657     1.22648  
 -0.0369208  -0.139647    1.26695       -0.00442996  -2.24374     0.348733 
  0.620604   -0.835141   -1.59741       -0.026424    -0.491713    0.705191 
 -2.49094     0.471711    0.677353       0.51443     -0.234433    1.61501  
 -0.600199    0.907787   -0.0977633      1.39034     -1.20908     1.06054  
 -1.26894     0.718772    0.334036   …   0.994015    -1.28285    -2.15419  
 -0.411544   -0.0794345   1.58904        1.14895      0.0363      2.14895  
 -0.437881   -0.451166   -0.0647529     -0.276704     0.392206   -0.128466 
  0.86126     0.774654    0.429458      -2.03196     -0.371577    0.547281 
 -1.07246     0.421693   -0.244775      -0.479385    -0.858759   -0.300843 </code></pre>
</div>
</div>
<p>Okay, that did what you’d expect. There’s apparently a help statement that works inversely from what you’d expect from IPython:</p>
<div id="cell-4" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">?randn</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>search: randn rand transcode macroexpand @macroexpand1 @macroexpand
</code></pre>
</div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="2">
<pre><code>randn([rng=GLOBAL_RNG], [T=Float64], [dims...])</code></pre>
<p>Generate a normally-distributed random number of type <code>T</code> with mean 0 and standard deviation 1. Optionally generate an array of normally-distributed random numbers. The <code>Base</code> module currently provides an implementation for the types <a href="@ref"><code>Float16</code></a>, <a href="@ref"><code>Float32</code></a>, and <a href="@ref"><code>Float64</code></a> (the default), and their <a href="@ref"><code>Complex</code></a> counterparts. When the type argument is complex, the values are drawn from the circularly symmetric complex normal distribution.</p>
<section id="examples" class="level1">
<h1>Examples</h1>
<pre class="jldoctest"><code>julia&gt; rng = MersenneTwister(1234);

julia&gt; randn(rng, ComplexF64)
0.6133070881429037 - 0.6376291670853887im

julia&gt; randn(rng, ComplexF32, (2, 3))
2×3 Array{Complex{Float32},2}:
 -0.349649-0.638457im  0.376756-0.192146im  -0.396334-0.0136413im
  0.611224+1.56403im   0.355204-0.365563im  0.0905552+1.31012im</code></pre>
</section>
</div>
</div>
<p>What about global help?</p>
<div id="cell-6" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">?</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>search: ⊻ ⊋ ⊊ ⊉ ⊈ ⊇ ⊆ ≥ ≤ ≢ ≡ ≠ ≉ ≈ ∪ ∩ ∛ √ ∘ ∌ ∋ ∉ ∈ ℯ π ÷ ~ | ^ \ &gt; &lt; : / - +
</code></pre>
</div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="3">
<p><strong>Welcome to Julia 1.1.0.</strong> The full manual is available at</p>
<pre><code>https://docs.julialang.org/</code></pre>
<p>as well as many great tutorials and learning resources:</p>
<pre><code>https://julialang.org/learning/</code></pre>
<p>For help on a specific function or macro, type <code>?</code> followed by its name, e.g.&nbsp;<code>?cos</code>, or <code>?@time</code>, and press enter. Type <code>;</code> to enter shell mode, <code>]</code> to enter package mode.</p>
</div>
</div>
<div id="cell-7" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>ls</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>mnist.zip
Tutorial1.ipynb</code></pre>
</div>
</div>
<p>We can use <code>@time</code> to benchmark this <code>randn</code> command:</p>
<div id="cell-9" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@time</span> randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  0.813875 seconds (6 allocations: 762.940 MiB, 1.56% gc time)</code></pre>
</div>
</div>
<p>For comparison:</p>
<pre class="ipython"><code>In [3]: %timeit np.random.normal(size=(10000, 10000))             
3.8 s ± 25.8 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)</code></pre>
<p>And the presenter’s R attempt took 5.81 using <code>system.time</code>. Wew, this is pretty fast.</p>
<p>To start with, we’re analyzing <a href="https://stackoverflow.com/questions/55147566/julia-parallel-computing-for-loop">a function found on StackOverflow</a> that sums over the lower triangular part of a matrix (apparently, the code is pretty bad):</p>
<div id="cell-12" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">function upsum(M)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size(M)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb16-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb16-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n</span>
<span id="cb16-4">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> M[i,j]</span>
<span id="cb16-5">        end</span>
<span id="cb16-6">    end</span>
<span id="cb16-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span></span>
<span id="cb16-8">end</span>
<span id="cb16-9"></span>
<span id="cb16-10">upsum(R)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>-7802.649783031088</code></pre>
</div>
</div>
<p>Let’s check the performance:</p>
<div id="cell-14" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>timeit upsum(R)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown">
<p>The analogue of IPython’s <code>%time statement</code> (also <code>%timeit</code>) in Julia is <code>@time statement</code>. The analogue of <code>%%time ...code...</code> is</p>
<pre><code>@time begin
    ...code...
end</code></pre>
<p>Note, however, that you should put all performance-critical code into a function, avoiding global variables, before doing performance measurements in Julia; see the <a href="http://docs.julialang.org/en/latest/manual/performance-tips/">performance tips in the Julia manual</a>.</p>
<p>The <code>@time</code> macro prints the timing results, and returns the value of evaluating the expression. To instead return the time (in seconds), use <code>@elapsed statement</code>.</p>
<p>For more extensive benchmarking tools, including the ability to collect statistics from multiple runs, see the <a href="https://github.com/JuliaCI/BenchmarkTools.jl">BenchmarkTools package</a>.</p>
</div>
</div>
<p>… All right, I’m starting to like this cheeky little language. Trying again:</p>
<div id="cell-16" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@time</span> upsum(R)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  0.464638 seconds (5 allocations: 176 bytes)</code></pre>
</div>
</div>
<p>To compare that with Python:</p>
<pre class="ipython"><code>In [8]: %timeit np.sum(np.tril(R))                                
245 ms ± 45.8 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)</code></pre>
<p>Well, that was faster, but we can improve the Julia code. Let’s first look at the inbuilt <code>sum</code> function:</p>
<div id="cell-18" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>sum (generic function with 13 methods)</code></pre>
</div>
</div>
<div id="cell-19" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@time</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(R)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  0.090729 seconds (89.03 k allocations: 4.748 MiB, 10.32% gc time)</code></pre>
</div>
</div>
<div id="cell-20" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@time</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(R)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  0.100551 seconds (5 allocations: 176 bytes)</code></pre>
</div>
</div>
<p>Okay, now this is badass. Julia is <strong>dynamically compiled</strong> - it’s as if Numba came out of Python and became its own language. Apparently there are ways of avoiding the first-call overhead, but this is somehow more advanced.</p>
<p>Note that all compiled-function cache is cleared on Julia restarts!</p>
<p>To compare with Python:</p>
<pre class="ipython"><code>In [9]: %timeit np.sum(R)                                         
53 ms ± 3.67 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)</code></pre>
<p>Not too shabby for the ol’ snake!</p>
<p>Let’s try to improve the function, though:</p>
<div id="cell-22" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">function uppersum(M)</span>
<span id="cb30-2">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size(M, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb30-3">    s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zero(eltype(M))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a zero hard-typed as the same type as the entry of the matrix</span></span>
<span id="cb30-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># eltype stands for ELement TYPE - this is now fully generic</span></span>
<span id="cb30-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:n        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Julia uses column-major storage order - faster to traverse any matrix in Julia column-wise</span></span>
<span id="cb30-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@simd</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if I know I'm accessing a contiguous block of memory, I can tell Julia that using @simd</span></span>
<span id="cb30-7">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@inbounds</span> s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> M[j, i]    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ignore bound checking and just access memory C-style </span></span>
<span id="cb30-8">        end</span>
<span id="cb30-9">    end</span>
<span id="cb30-10">    s</span>
<span id="cb30-11">end</span>
<span id="cb30-12"></span>
<span id="cb30-13">uppersum(R)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>-7802.6497830305125</code></pre>
</div>
</div>
<p>We can look at these <code>@simd</code> and <code>@inbouds</code> annotations:</p>
<div id="cell-24" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">?<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>simd</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="13">
<pre><code>@simd</code></pre>
<p>Annotate a <code>for</code> loop to allow the compiler to take extra liberties to allow loop re-ordering</p>
<p>!!! warning This feature is experimental and could change or disappear in future versions of Julia. Incorrect use of the <code>@simd</code> macro may cause unexpected results.</p>
<p>The object iterated over in a <code>@simd for</code> loop should be a one-dimensional range. By using <code>@simd</code>, you are asserting several properties of the loop:</p>
<ul>
<li>It is safe to execute iterations in arbitrary or overlapping order, with special consideration for reduction variables.</li>
<li>Floating-point operations on reduction variables can be reordered, possibly causing different results than without <code>@simd</code>.</li>
</ul>
<p>In many cases, Julia is able to automatically vectorize inner for loops without the use of <code>@simd</code>. Using <code>@simd</code> gives the compiler a little extra leeway to make it possible in more situations. In either case, your inner loop should have the following properties to allow vectorization:</p>
<ul>
<li>The loop must be an innermost loop</li>
<li>The loop body must be straight-line code. Therefore, <a href="@ref"><code>@inbounds</code></a> is currently needed for all array accesses. The compiler can sometimes turn short <code>&amp;&amp;</code>, <code>||</code>, and <code>?:</code> expressions into straight-line code if it is safe to evaluate all operands unconditionally. Consider using the <a href="@ref"><code>ifelse</code></a> function instead of <code>?:</code> in the loop if it is safe to do so.</li>
<li>Accesses must have a stride pattern and cannot be “gathers” (random-index reads) or “scatters” (random-index writes).</li>
<li>The stride should be unit stride.</li>
</ul>
<p>!!! note The <code>@simd</code> does not assert by default that the loop is completely free of loop-carried memory dependencies, which is an assumption that can easily be violated in generic code. If you are writing non-generic code, you can use <code>@simd ivdep for ... end</code> to also assert that:</p>
<ul>
<li>There exists no loop-carried memory dependencies</li>
<li>No iteration ever waits on a previous iteration to make forward progress.</li>
</ul>
</div>
</div>
<div id="cell-25" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">?<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>inbounds</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="14">
<pre><code>@inbounds(blk)</code></pre>
<p>Eliminates array bounds checking within expressions.</p>
<p>In the example below the in-range check for referencing element <code>i</code> of array <code>A</code> is skipped to improve performance.</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb36-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">AbstractArray</span>)</span>
<span id="cb36-2">    r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zero</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eltype</span>(A))</span>
<span id="cb36-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(A)</span>
<span id="cb36-4">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">@inbounds</span> r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> A[i]</span>
<span id="cb36-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span>
<span id="cb36-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> r</span>
<span id="cb36-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span></code></pre></div>
<p>!!! warning Using <code>@inbounds</code> may return incorrect results/crashes/corruption for out-of-bounds indices. The user is responsible for checking it manually. Only use <code>@inbounds</code> when it is certain from the information locally available that all accesses are in bounds.</p>
</div>
</div>
<p>Right! Let’s time this implementation:</p>
<div id="cell-27" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@time</span> uppersum(R)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  0.054047 seconds (5 allocations: 176 bytes)</code></pre>
</div>
</div>
<div id="cell-28" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1">function uppersum_boundcheck(M)</span>
<span id="cb39-2">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size(M, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb39-3">    s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zero(eltype(M))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a zero hard-typed as the same type as the entry of the matrix</span></span>
<span id="cb39-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># eltype stands for ELement TYPE - this is now fully generic</span></span>
<span id="cb39-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:n        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Julia uses column-major storage order - faster to traverse any matrix in Julia column-wise</span></span>
<span id="cb39-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@simd</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if I know I'm accessing a contiguous block of memory, I can tell Julia that using @simd</span></span>
<span id="cb39-7">            s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> M[j, i]    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ignore bound checking and just access memory C-style </span></span>
<span id="cb39-8">        end</span>
<span id="cb39-9">    end</span>
<span id="cb39-10">    s    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this is sufficient for a `return` statement</span></span>
<span id="cb39-11">end</span>
<span id="cb39-12"></span>
<span id="cb39-13">uppersum(R)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>-7802.6497830305125</code></pre>
</div>
</div>
<p>Let’s see what kind of gain we get from losing boundchecking:</p>
<div id="cell-30" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@time</span> uppersum_boundcheck(R)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  0.115098 seconds (51.16 k allocations: 2.663 MiB)</code></pre>
</div>
</div>
<p>Interesingly, Julia apparently uses <a href="https://llvm.org/">LLVM</a> in the background.</p>
<section id="going-parallel" class="level1">
<h1>Going parallel</h1>
<p>The idea is: we have a triangle and we want to split it into pieces of equal “mass”. This is done in the code below, via an instruction that is relatively magical to me right now.</p>
<p>For threading to work, note that <a href="https://docs.julialang.org/en/v1.0/manual/environment-variables/#JULIA_NUM_THREADS-1">as described in the docs</a>, you need to set the environment variable <code>JULIA_NUM_THREADS</code>. <code>export JULIA_NUM_THREADS=4</code> in <code>.bashrc</code> worked fine for me.</p>
<div id="cell-32" class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">using Base.Threads</span>
<span id="cb43-2"></span>
<span id="cb43-3">function upsum_threads(M)</span>
<span id="cb43-4">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size(M, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb43-5">    chunks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nthreads()</span>
<span id="cb43-6">    sums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zeros(eltype(M), chunks)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># separate subsum for each thread</span></span>
<span id="cb43-7">    chunkend <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>.(Int, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sqrt.((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:chunks) .<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> chunks))   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#split jobs so that each thread has approx. same number of numbers to add</span></span>
<span id="cb43-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@assert</span> minimum(diff(chunkend)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb43-9">    chunkstart <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> chunkend[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] .<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb43-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@threads</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> job <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:chunks     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tell Julia that this part is safe for threading</span></span>
<span id="cb43-11">        s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zero(eltype(M))</span>
<span id="cb43-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> chunkstart[job]:chunkend[job]</span>
<span id="cb43-13">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@simd</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb43-14">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@inbounds</span> s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> M[j, i]</span>
<span id="cb43-15">            end</span>
<span id="cb43-16">        end</span>
<span id="cb43-17">        sums[job] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s</span>
<span id="cb43-18">    end</span>
<span id="cb43-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(sums)</span>
<span id="cb43-20">end</span>
<span id="cb43-21"></span>
<span id="cb43-22">upsum_threads(R)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="34">
<pre><code>-7802.649783030595</code></pre>
</div>
</div>
<div id="cell-33" class="cell" data-execution_count="36">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@time</span> upsum_threads(R)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  0.037879 seconds (35 allocations: 2.000 KiB)</code></pre>
</div>
</div>
<p>Okay, now this is faster than the Numpy. I’m reasonably impressed - but confused as to that one magical line, though. Let’s dig into it.</p>
<div id="cell-35" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1">chunks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb47-2">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span></span>
<span id="cb47-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>.(Int, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sqrt.((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:chunks) .<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> chunks))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre><code>4-element Array{Int64,1}:
  5000
  7071
  8660
 10000</code></pre>
</div>
</div>
<p>Huh. Digging deeper:</p>
<div id="cell-37" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1">(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:chunks)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<pre><code>1:4</code></pre>
</div>
</div>
<p>Okay, this is a range…</p>
<div id="cell-39" class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1">(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:chunks) .<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> chunks</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="38">
<pre><code>0.25:0.25:1.0</code></pre>
</div>
</div>
<p>And this is where it starts to hit me, as the presenter introduces the <code>collect</code> command:</p>
<div id="cell-41" class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1">collect((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:chunks) .<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> chunks)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="39">
<pre><code>4-element Array{Float64,1}:
 0.25
 0.5 
 0.75
 1.0 </code></pre>
</div>
</div>
<p>OOOOOOOOOOOOOH. So <code>./</code> is a a lazy operator! In other words, if you do this:</p>
<div id="cell-43" class="cell" data-execution_count="43">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1">sqrt((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:chunks) .<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> chunks)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>MethodError: MethodError: no method matching sqrt(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}})
Closest candidates are:
  sqrt(!Matched::Float16) at math.jl:1018
  sqrt(!Matched::Complex{Float16}) at math.jl:1019
  sqrt(!Matched::Missing) at math.jl:1070
  ...
MethodError: no method matching sqrt(::StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}})
Closest candidates are:
  sqrt(!Matched::Float16) at math.jl:1018
  sqrt(!Matched::Complex{Float16}) at math.jl:1019
  sqrt(!Matched::Missing) at math.jl:1070
  ...

Stacktrace:
 [1] top-level scope at In[43]:1</code></pre>
</div>
</div>
<p>This errors because you’re operating on a <code>range</code>, but instead if you do this:</p>
<div id="cell-45" class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1">sqrt.((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:chunks) .<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> chunks)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="44">
<pre><code>4-element Array{Float64,1}:
 0.5               
 0.7071067811865476
 0.8660254037844386
 1.0               </code></pre>
</div>
</div>
<p>Chains of broadcasting operations <strong>“materialize” only once</strong> - skipping plenty of unnecessary overhead.</p>
<p>This is badass and I have to admit that I’m rather hyped up for Julia now!</p>


</section>

 ]]></description>
  <category>julia</category>
  <guid>https://stanczakdominik.github.io/posts/first-dive-julia.html</guid>
  <pubDate>Thu, 14 Mar 2019 10:00:00 GMT</pubDate>
</item>
<item>
  <title>Parsing and plotting LaTeX expressions with SymPy</title>
  <link>https://stanczakdominik.github.io/posts/parsing-and-plotting-latex-expressions-with-sympy.html</link>
  <description><![CDATA[ 





<p>Today let’s look into some pretty neat SymPy functionality. I was in a fluid dynamics lecture, practicing taking notes with LaTeX on the go and stumbled upon this monstrosity:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5CDelta(k)%20=%20%5Cfrac%7B%5Crho_1-%5Crho_2%7D%7B%5Crho_1%20+%20%5Crho_2%7D%20gk%20+%20%5Cfrac%7B%5Cgamma%20k%5E3%7D%7B%5Crho_1%20+%20%5Crho_2%7D%20-%20%5Cfrac%7B%5Crho_1%20%5Crho_2%7D%7B(%5Crho_1%20+%20%5Crho_2)%5E2%7D%20U%5E2%20k%5E2%20"></p>
<p>(bonus points for whoever recognizes this!)</p>
<p>We were supposed to draw this for a few example sets of values. All right! I opened up <code>pinta</code> and scribbled a few squiggly lines with my small touchpad, following the blackboard drawings. It looked darn ugly, but that got me thinking. <em><code>SymPy</code> has parsers, right? Can’t I just parse that LaTeX equation into Python and make that plot pretty with matplotlib?</em></p>
<p>Well, as it turns out, sure…</p>
<div id="cell-2" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">the_plot.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/parsing-and-plotting-latex-expressions-with-sympy_files/figure-html/cell-2-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>But it takes some tinkering.</p>
<!-- TEASER_END -->
<p>All right, let the tinkering commence! Let’s get straight to the point. For this to run, you’ll <a href="https://docs.sympy.org/latest/modules/parsing.html#runtime-installation">need antlr4</a> (in current Jupyter, you can simply do <code>%conda install antlr-python-runtime</code> from within the Notebook).</p>
<p>We’re going to simply dump the LaTeX string into <code>sympy.parsing.latex.parse_latex</code>, with the important caveat - this needs to be a <code>r"raw string"</code>. Otherwise, LaTeX is going to go wild put a carriage return into every <code>\rho</code>.</p>
<div id="cell-4" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sympy</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sympy.parsing.latex <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> parse_latex</span>
<span id="cb2-3">latex_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\Delta(k) = \frac{\rho_1-\rho_2}{\rho_1 + \rho_2} gk + \frac{\gamma k^3}{\rho_1 + \rho_2} - \frac{\rho_1 \rho_2}{(\rho_1 + \rho_2)^2} U^2 k^2"</span></span>
<span id="cb2-4">equation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parse_latex(latex_string)</span>
<span id="cb2-5">equation</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>Eq(Delta(k), -U**2*k**2*rho_{1}*rho_{2}/(rho_{1} + rho_{2})**2 + (g*k)*((rho_{1} - rho_{2})/(rho_{1} + rho_{2})) + (gamma*k**3)/(rho_{1} + rho_{2}))</code></pre>
</div>
</div>
<p>We can access the variables we’d like to substitute (as SymPy symbols) using <code>equation.free_symbols</code>:</p>
<div id="cell-6" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">equation.free_symbols</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>{U, g, gamma, k, rho_{1}, rho_{2}}</code></pre>
</div>
</div>
<p>Ideally what I’d like to do is use <code>.subs</code> on the <code>equation</code> to plug in numerical values. To achieve this, it would <em>probably</em> be easiest to turn the symbols into Python variables. However…</p>
<div id="cell-8" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">U, g, gamma, k, rho_1, rho_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> equation.free_symbols</span>
<span id="cb6-2">U, gamma, rho_1</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>(g, U, gamma)</code></pre>
</div>
</div>
<p>… the unordered nature of Python’s <code>set</code> comes back with a vengeance! It’s <a href="https://stackoverflow.com/questions/6405512/get-a-list-from-a-set-in-python">not too trivial to get these out in the right order</a>. You could try <code>sorted</code>, but one does not simply compare <code>Symbol</code>s:</p>
<div id="cell-10" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(equation.free_symbols)</span></code></pre></div>
<div class="cell-output cell-output-error">
<div class="ansi-escaped-output">
<pre><span class="ansi-red-fg">---------------------------------------------------------------------------</span>
<span class="ansi-red-fg">TypeError</span>                                 Traceback (most recent call last)
<span class="ansi-green-fg">&lt;ipython-input-8-f67f3a401c32&gt;</span> in <span class="ansi-cyan-fg">&lt;module&gt;</span>
<span class="ansi-green-fg">----&gt; 1</span><span class="ansi-red-fg"> </span>sorted<span class="ansi-blue-fg">(</span>equation<span class="ansi-blue-fg">.</span>free_symbols<span class="ansi-blue-fg">)</span>

<span class="ansi-green-fg">/progs/miniconda3/lib/python3.7/site-packages/sympy/core/relational.py</span> in <span class="ansi-cyan-fg">__nonzero__</span><span class="ansi-blue-fg">(self)</span>
<span class="ansi-green-fg ansi-bold">    227</span> 
<span class="ansi-green-fg ansi-bold">    228</span>     <span class="ansi-green-fg">def</span> __nonzero__<span class="ansi-blue-fg">(</span>self<span class="ansi-blue-fg">)</span><span class="ansi-blue-fg">:</span>
<span class="ansi-green-fg">--&gt; 229</span><span class="ansi-red-fg">         </span><span class="ansi-green-fg">raise</span> TypeError<span class="ansi-blue-fg">(</span><span class="ansi-blue-fg">"cannot determine truth value of Relational"</span><span class="ansi-blue-fg">)</span>
<span class="ansi-green-fg ansi-bold">    230</span> 
<span class="ansi-green-fg ansi-bold">    231</span>     __bool__ <span class="ansi-blue-fg">=</span> __nonzero__

<span class="ansi-red-fg">TypeError</span>: cannot determine truth value of Relational</pre>
</div>
</div>
</div>
<p>What I ended up doing here is:</p>
<div id="cell-12" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">U, g, gamma, k, rho_1, rho_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(equation.free_symbols,</span>
<span id="cb9-2">                                      key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the literal key part here - just sort them alphabetically!</span></span>
<span id="cb9-3">                                     )</span>
<span id="cb9-4">U, g, gamma, k, rho_1, rho_2</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>(U, g, gamma, k, rho_{1}, rho_{2})</code></pre>
</div>
</div>
<p>And now we can simply use <code>subs</code> with a dictionary:</p>
<div id="cell-14" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">equation.subs(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(rho_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb11-2">                   rho_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb11-3">                   gamma<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb11-4">                   g<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb11-5">                  )</span>
<span id="cb11-6">             )</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>Eq(Delta(k), -U**2*k**2*rho_{1}*rho_{2}/(rho_{1} + rho_{2})**2 + k**3/(rho_{1} + rho_{2}) + k*(rho_{1} - rho_{2})/(rho_{1} + rho_{2}))</code></pre>
</div>
</div>
<p>… or can we? This does not work on <code>rho_{1}</code> and <code>rho_{2}</code>. Here’s why:</p>
<div id="cell-16" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(rho_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb13-2">     rho_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb13-3">     gamma<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb13-4">     g<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb13-5">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>{'rho_1': 1, 'rho_2': 2, 'gamma': 1, 'g': 1}</code></pre>
</div>
</div>
<p>Well duh, those are string values when input this way, and <code>"rho_1" != "rho_{1}"</code>!</p>
<p>We could instead do the following:</p>
<div id="cell-18" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">better_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {rho_1: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb15-2"> rho_2: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb15-3"> gamma: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb15-4"> g: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb15-5">}</span>
<span id="cb15-6">better_dict</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>{rho_{1}: 1, rho_{2}: 2, gamma: 1, g: 1}</code></pre>
</div>
</div>
<p>Will that work?</p>
<div id="cell-20" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">equation.subs(better_dict)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>Eq(Delta(k), -2*U**2*k**2/9 + k**3/3 - k/3)</code></pre>
</div>
</div>
<p>Finally! However, along the way you may have noticed a simpler way to do this:</p>
<div id="cell-22" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">simpler_equation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> equation.subs({</span>
<span id="cb19-2">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rho_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{1}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb19-3">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rho_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{2}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb19-4">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gamma"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb19-5">     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"g"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb19-6">})</span>
<span id="cb19-7">simpler_equation</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>Eq(Delta(k), -2*U**2*k**2/9 + k**3/3 - k/3)</code></pre>
</div>
</div>
<p>Note how this did not need us to even touch <code>equation.free_symbols</code> or mess around with <code>sorted</code> at all! I’m leaving the exploratory part here though - it might help someone looking to access variables in a <code>parse_latex</code> expression.</p>
<p>We may now plot it:</p>
<div id="cell-24" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">DeltaK <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> simpler_equation.rhs</span>
<span id="cb21-2">DeltaK</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>-2*U**2*k**2/9 + k**3/3 - k/3</code></pre>
</div>
</div>
<div id="cell-25" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sympy.plotting</span>
<span id="cb23-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb23-3">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'figure.figsize'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb23-4">k_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (k, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb23-5">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>]</span>
<span id="cb23-6">U_values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>]</span>
<span id="cb23-7">plots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb23-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> u, color <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(U_values, colors):</span>
<span id="cb23-9">    plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sympy.plot(DeltaK.subs(U, u), k_range,</span>
<span id="cb23-10">                      show<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb23-11">                     line_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb23-12">                     legend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb23-13">                     ylabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"$\Delta(k)$"</span>,</span>
<span id="cb23-14">                     ylim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>),</span>
<span id="cb23-15">                     xlim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>),</span>
<span id="cb23-16">                     title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"$</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latex_string<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">$"</span>,</span>
<span id="cb23-17">                     )</span>
<span id="cb23-18">    plots.append(plot)</span>
<span id="cb23-19"></span>
<span id="cb23-20">plots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].extend(plots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb23-21">plots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].extend(plots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb23-22">the_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb23-23">the_plot.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://stanczakdominik.github.io/posts/parsing-and-plotting-latex-expressions-with-sympy_files/figure-html/cell-14-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>And, while not beautiful, it’s much more pretty than what I got together with <code>pinta</code>!</p>



 ]]></description>
  <category>python</category>
  <category>sympy</category>
  <guid>https://stanczakdominik.github.io/posts/parsing-and-plotting-latex-expressions-with-sympy.html</guid>
  <pubDate>Tue, 12 Mar 2019 17:00:00 GMT</pubDate>
</item>
</channel>
</rss>
